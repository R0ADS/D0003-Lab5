
D0003E-Lab5-Traffic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  000021ce  00002262  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800134  00800134  00002296  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002296  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  00002308  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002dcf  00000000  00000000  00002560  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011f4  00000000  00000000  0000532f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016a1  00000000  00000000  00006523  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c14  00000000  00000000  00007bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000998  00000000  00000000  000087d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002fe6  00000000  00000000  00009170  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f0  00000000  00000000  0000c156  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 78 04 	jmp	0x8f0	; 0x8f0 <__vector_1>
       8:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__vector_2>
       c:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__vector_3>
      10:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__vector_4>
      14:	0c 94 28 06 	jmp	0xc50	; 0xc50 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 63 0c 	jmp	0x18c6	; 0x18c6 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 10 0c 	jmp	0x1820	; 0x1820 <__vector_9>
      28:	0c 94 94 06 	jmp	0xd28	; 0xd28 <__vector_10>
      2c:	0c 94 00 07 	jmp	0xe00	; 0xe00 <__vector_11>
      30:	0c 94 6c 07 	jmp	0xed8	; 0xed8 <__vector_12>
      34:	0c 94 d8 07 	jmp	0xfb0	; 0xfb0 <__vector_13>
      38:	0c 94 44 08 	jmp	0x1088	; 0x1088 <__vector_14>
      3c:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__vector_15>
      40:	0c 94 1c 09 	jmp	0x1238	; 0x1238 <__vector_16>
      44:	0c 94 88 09 	jmp	0x1310	; 0x1310 <__vector_17>
      48:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__vector_18>
      4c:	0c 94 60 0a 	jmp	0x14c0	; 0x14c0 <__vector_19>
      50:	0c 94 cc 0a 	jmp	0x1598	; 0x1598 <__vector_20>
      54:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__vector_21>
      58:	0c 94 a4 0b 	jmp	0x1748	; 0x1748 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ee ec       	ldi	r30, 0xCE	; 206
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a4 33       	cpi	r26, 0x34	; 52
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a4 e3       	ldi	r26, 0x34	; 52
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 58 03 	call	0x6b0	; 0x6b0 <main>
      92:	0c 94 e5 10 	jmp	0x21ca	; 0x21ca <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <transmit>:

#include <avr/io.h>
#include "Communication.h"

int transmit(Communication *self, int data){
	while ( !(UCSR0A & (1<<UDRE0)) );
      9a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
      9e:	85 ff       	sbrs	r24, 5
      a0:	fc cf       	rjmp	.-8      	; 0x9a <transmit>
	UDR0 = data;
      a2:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
      a6:	08 95       	ret

000000a8 <updateDisplay>:
#include <avr/io.h>

Msg test;
Msg teste;

int updateDisplay(Handler *self) {
      a8:	cf 92       	push	r12
      aa:	df 92       	push	r13
      ac:	ef 92       	push	r14
      ae:	ff 92       	push	r15
      b0:	0f 93       	push	r16
      b2:	1f 93       	push	r17
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
      b8:	ec 01       	movw	r28, r24
	ASYNC(self->lcd, printAt, self->northQueue * 10);
      ba:	8c 85       	ldd	r24, Y+12	; 0x0c
      bc:	9d 85       	ldd	r25, Y+13	; 0x0d
      be:	6c 01       	movw	r12, r24
      c0:	cc 0c       	add	r12, r12
      c2:	dd 1c       	adc	r13, r13
      c4:	88 0f       	add	r24, r24
      c6:	99 1f       	adc	r25, r25
      c8:	88 0f       	add	r24, r24
      ca:	99 1f       	adc	r25, r25
      cc:	88 0f       	add	r24, r24
      ce:	99 1f       	adc	r25, r25
      d0:	c8 0e       	add	r12, r24
      d2:	d9 1e       	adc	r13, r25
      d4:	0e 81       	ldd	r16, Y+6	; 0x06
      d6:	1f 81       	ldd	r17, Y+7	; 0x07
      d8:	4b e2       	ldi	r20, 0x2B	; 43
      da:	e4 2e       	mov	r14, r20
      dc:	43 e0       	ldi	r20, 0x03	; 3
      de:	f4 2e       	mov	r15, r20
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	a9 01       	movw	r20, r18
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	cb 01       	movw	r24, r22
      ec:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
	ASYNC(self->lcd, printAt, self->onBridge * 10 + 2);
      f0:	8e 85       	ldd	r24, Y+14	; 0x0e
      f2:	9f 85       	ldd	r25, Y+15	; 0x0f
      f4:	6c 01       	movw	r12, r24
      f6:	cc 0c       	add	r12, r12
      f8:	dd 1c       	adc	r13, r13
      fa:	88 0f       	add	r24, r24
      fc:	99 1f       	adc	r25, r25
      fe:	88 0f       	add	r24, r24
     100:	99 1f       	adc	r25, r25
     102:	88 0f       	add	r24, r24
     104:	99 1f       	adc	r25, r25
     106:	c8 0e       	add	r12, r24
     108:	d9 1e       	adc	r13, r25
     10a:	82 e0       	ldi	r24, 0x02	; 2
     10c:	c8 0e       	add	r12, r24
     10e:	d1 1c       	adc	r13, r1
     110:	0e 81       	ldd	r16, Y+6	; 0x06
     112:	1f 81       	ldd	r17, Y+7	; 0x07
     114:	20 e0       	ldi	r18, 0x00	; 0
     116:	30 e0       	ldi	r19, 0x00	; 0
     118:	a9 01       	movw	r20, r18
     11a:	60 e0       	ldi	r22, 0x00	; 0
     11c:	70 e0       	ldi	r23, 0x00	; 0
     11e:	cb 01       	movw	r24, r22
     120:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
	ASYNC(self->lcd, printAt, self->southQueue * 10 + 4);
     124:	8a 85       	ldd	r24, Y+10	; 0x0a
     126:	9b 85       	ldd	r25, Y+11	; 0x0b
     128:	6c 01       	movw	r12, r24
     12a:	cc 0c       	add	r12, r12
     12c:	dd 1c       	adc	r13, r13
     12e:	88 0f       	add	r24, r24
     130:	99 1f       	adc	r25, r25
     132:	88 0f       	add	r24, r24
     134:	99 1f       	adc	r25, r25
     136:	88 0f       	add	r24, r24
     138:	99 1f       	adc	r25, r25
     13a:	c8 0e       	add	r12, r24
     13c:	d9 1e       	adc	r13, r25
     13e:	84 e0       	ldi	r24, 0x04	; 4
     140:	c8 0e       	add	r12, r24
     142:	d1 1c       	adc	r13, r1
     144:	0e 81       	ldd	r16, Y+6	; 0x06
     146:	1f 81       	ldd	r17, Y+7	; 0x07
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	a9 01       	movw	r20, r18
     14e:	60 e0       	ldi	r22, 0x00	; 0
     150:	70 e0       	ldi	r23, 0x00	; 0
     152:	cb 01       	movw	r24, r22
     154:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
}
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	1f 91       	pop	r17
     15e:	0f 91       	pop	r16
     160:	ff 90       	pop	r15
     162:	ef 90       	pop	r14
     164:	df 90       	pop	r13
     166:	cf 90       	pop	r12
     168:	08 95       	ret

0000016a <reduceBridge>:

int reduceBridge(Handler *self) {
     16a:	cf 92       	push	r12
     16c:	df 92       	push	r13
     16e:	ef 92       	push	r14
     170:	ff 92       	push	r15
     172:	0f 93       	push	r16
     174:	1f 93       	push	r17
	self->onBridge--;
     176:	fc 01       	movw	r30, r24
     178:	26 85       	ldd	r18, Z+14	; 0x0e
     17a:	37 85       	ldd	r19, Z+15	; 0x0f
     17c:	21 50       	subi	r18, 0x01	; 1
     17e:	31 09       	sbc	r19, r1
     180:	37 87       	std	Z+15, r19	; 0x0f
     182:	26 87       	std	Z+14, r18	; 0x0e
	ASYNC(self, updateDisplay, NULL);
     184:	c1 2c       	mov	r12, r1
     186:	d1 2c       	mov	r13, r1
     188:	24 e5       	ldi	r18, 0x54	; 84
     18a:	e2 2e       	mov	r14, r18
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	f2 2e       	mov	r15, r18
     190:	8c 01       	movw	r16, r24
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	a9 01       	movw	r20, r18
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	70 e0       	ldi	r23, 0x00	; 0
     19c:	cb 01       	movw	r24, r22
     19e:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
}
     1a2:	1f 91       	pop	r17
     1a4:	0f 91       	pop	r16
     1a6:	ff 90       	pop	r15
     1a8:	ef 90       	pop	r14
     1aa:	df 90       	pop	r13
     1ac:	cf 90       	pop	r12
     1ae:	08 95       	ret

000001b0 <deQueuer>:

int deQueuer(Handler *self, int dir){
     1b0:	cf 92       	push	r12
     1b2:	df 92       	push	r13
     1b4:	ef 92       	push	r14
     1b6:	ff 92       	push	r15
     1b8:	0f 93       	push	r16
     1ba:	1f 93       	push	r17
     1bc:	cf 93       	push	r28
     1be:	df 93       	push	r29
     1c0:	ec 01       	movw	r28, r24
	if (dir){
     1c2:	67 2b       	or	r22, r23
     1c4:	79 f5       	brne	.+94     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
		self->northQueue--;
	}
	else{
		self->southQueue--;
     1c6:	8a 85       	ldd	r24, Y+10	; 0x0a
     1c8:	9b 85       	ldd	r25, Y+11	; 0x0b
     1ca:	01 97       	sbiw	r24, 0x01	; 1
     1cc:	9b 87       	std	Y+11, r25	; 0x0b
     1ce:	8a 87       	std	Y+10, r24	; 0x0a
	}
	self->onBridge++;
     1d0:	8e 85       	ldd	r24, Y+14	; 0x0e
     1d2:	9f 85       	ldd	r25, Y+15	; 0x0f
     1d4:	01 96       	adiw	r24, 0x01	; 1
     1d6:	9f 87       	std	Y+15, r25	; 0x0f
     1d8:	8e 87       	std	Y+14, r24	; 0x0e
	ASYNC(self, updateDisplay, NULL);
     1da:	c1 2c       	mov	r12, r1
     1dc:	d1 2c       	mov	r13, r1
     1de:	84 e5       	ldi	r24, 0x54	; 84
     1e0:	e8 2e       	mov	r14, r24
     1e2:	80 e0       	ldi	r24, 0x00	; 0
     1e4:	f8 2e       	mov	r15, r24
     1e6:	8e 01       	movw	r16, r28
     1e8:	20 e0       	ldi	r18, 0x00	; 0
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	a9 01       	movw	r20, r18
     1ee:	60 e0       	ldi	r22, 0x00	; 0
     1f0:	70 e0       	ldi	r23, 0x00	; 0
     1f2:	cb 01       	movw	r24, r22
     1f4:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
	AFTER(MSEC(5000), self, reduceBridge, NULL);
     1f8:	95 eb       	ldi	r25, 0xB5	; 181
     1fa:	e9 2e       	mov	r14, r25
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	f9 2e       	mov	r15, r25
     200:	20 e0       	ldi	r18, 0x00	; 0
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	a9 01       	movw	r20, r18
     206:	6a e5       	ldi	r22, 0x5A	; 90
     208:	72 e6       	ldi	r23, 0x62	; 98
     20a:	82 e0       	ldi	r24, 0x02	; 2
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
}
     212:	df 91       	pop	r29
     214:	cf 91       	pop	r28
     216:	1f 91       	pop	r17
     218:	0f 91       	pop	r16
     21a:	ff 90       	pop	r15
     21c:	ef 90       	pop	r14
     21e:	df 90       	pop	r13
     220:	cf 90       	pop	r12
     222:	08 95       	ret
	ASYNC(self, updateDisplay, NULL);
}

int deQueuer(Handler *self, int dir){
	if (dir){
		self->northQueue--;
     224:	8c 85       	ldd	r24, Y+12	; 0x0c
     226:	9d 85       	ldd	r25, Y+13	; 0x0d
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	9d 87       	std	Y+13, r25	; 0x0d
     22c:	8c 87       	std	Y+12, r24	; 0x0c
     22e:	d0 cf       	rjmp	.-96     	; 0x1d0 <deQueuer+0x20>

00000230 <switcher>:
	}
	ASYNC(self, updateDisplay, NULL);
	ASYNC(self, switcher, NULL);
}

int switcher (Handler *self) {
     230:	cf 92       	push	r12
     232:	df 92       	push	r13
     234:	ef 92       	push	r14
     236:	ff 92       	push	r15
     238:	0f 93       	push	r16
     23a:	1f 93       	push	r17
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	ec 01       	movw	r28, r24
	if (self->isNorth) {
     242:	88 85       	ldd	r24, Y+8	; 0x08
     244:	99 85       	ldd	r25, Y+9	; 0x09
     246:	89 2b       	or	r24, r25
     248:	c1 f5       	brne	.+112    	; 0x2ba <switcher+0x8a>
				test = AFTER(MSEC(1250), self, switcher, NULL);
			}
		}
	}
	else if (!(self->isNorth)){
		if (self->southQueue && self->counter < 5) {
     24a:	8a 85       	ldd	r24, Y+10	; 0x0a
     24c:	9b 85       	ldd	r25, Y+11	; 0x0b
     24e:	89 2b       	or	r24, r25
     250:	29 f0       	breq	.+10     	; 0x25c <switcher+0x2c>
     252:	88 89       	ldd	r24, Y+16	; 0x10
     254:	99 89       	ldd	r25, Y+17	; 0x11
     256:	05 97       	sbiw	r24, 0x05	; 5
     258:	0c f4       	brge	.+2      	; 0x25c <switcher+0x2c>
     25a:	a7 c0       	rjmp	.+334    	; 0x3aa <switcher+0x17a>
			ASYNC(self->com, transmit, 0b0110);		// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
     25c:	8c 85       	ldd	r24, Y+12	; 0x0c
     25e:	9d 85       	ldd	r25, Y+13	; 0x0d
     260:	89 2b       	or	r24, r25
     262:	09 f4       	brne	.+2      	; 0x266 <switcher+0x36>
     264:	94 c0       	rjmp	.+296    	; 0x38e <switcher+0x15e>
     266:	8e 85       	ldd	r24, Y+14	; 0x0e
     268:	9f 85       	ldd	r25, Y+15	; 0x0f
     26a:	89 2b       	or	r24, r25
     26c:	09 f4       	brne	.+2      	; 0x270 <switcher+0x40>
     26e:	73 c0       	rjmp	.+230    	; 0x356 <switcher+0x126>
			if (!(self->northQueue) && self->counter == 5 && self->onBridge < 5){
				self->counter--;
				ASYNC(self->com, transmit, 0b0110);		// Green south
			}
			else {
				if (test) {
     270:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <test>
     274:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <test+0x1>
     278:	00 97       	sbiw	r24, 0x00	; 0
     27a:	11 f0       	breq	.+4      	; 0x280 <switcher+0x50>
					ABORT(test);
     27c:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <ABORT>
				}
				test = AFTER(MSEC(1250), self, switcher, NULL);
     280:	c1 2c       	mov	r12, r1
     282:	d1 2c       	mov	r13, r1
     284:	88 e1       	ldi	r24, 0x18	; 24
     286:	e8 2e       	mov	r14, r24
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	f8 2e       	mov	r15, r24
     28c:	8e 01       	movw	r16, r28
     28e:	20 e0       	ldi	r18, 0x00	; 0
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	a9 01       	movw	r20, r18
     294:	66 e9       	ldi	r22, 0x96	; 150
     296:	78 e9       	ldi	r23, 0x98	; 152
     298:	80 e0       	ldi	r24, 0x00	; 0
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
     2a0:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <test+0x1>
     2a4:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <test>
			}
		}
	}
}
     2a8:	df 91       	pop	r29
     2aa:	cf 91       	pop	r28
     2ac:	1f 91       	pop	r17
     2ae:	0f 91       	pop	r16
     2b0:	ff 90       	pop	r15
     2b2:	ef 90       	pop	r14
     2b4:	df 90       	pop	r13
     2b6:	cf 90       	pop	r12
     2b8:	08 95       	ret
	ASYNC(self, switcher, NULL);
}

int switcher (Handler *self) {
	if (self->isNorth) {
		if (self->northQueue && self->counter < 5) {			// I added the check with (if other queue > 5 switch queue if bridge is currently empty)
     2ba:	8c 85       	ldd	r24, Y+12	; 0x0c
     2bc:	9d 85       	ldd	r25, Y+13	; 0x0d
     2be:	89 2b       	or	r24, r25
     2c0:	11 f5       	brne	.+68     	; 0x306 <switcher+0xd6>
			ASYNC(self->com, transmit, 0b1001);		// Green north
		}
		else {
			if (self->southQueue && self->onBridge == 0) { //why is 2 = 0?!?!
     2c2:	8a 85       	ldd	r24, Y+10	; 0x0a
     2c4:	9b 85       	ldd	r25, Y+11	; 0x0b
     2c6:	89 2b       	or	r24, r25
     2c8:	31 f5       	brne	.+76     	; 0x316 <switcher+0xe6>
				self->counter = 0;
				self->isNorth = 0;
				ASYNC(self->com, transmit, 0b0110);		// Green south
			}
			if (!(self->southQueue) && self->counter == 5 && self->onBridge < 5){
     2ca:	88 89       	ldd	r24, Y+16	; 0x10
     2cc:	99 89       	ldd	r25, Y+17	; 0x11
     2ce:	05 97       	sbiw	r24, 0x05	; 5
     2d0:	79 f6       	brne	.-98     	; 0x270 <switcher+0x40>
     2d2:	8e 85       	ldd	r24, Y+14	; 0x0e
     2d4:	9f 85       	ldd	r25, Y+15	; 0x0f
     2d6:	05 97       	sbiw	r24, 0x05	; 5
     2d8:	5c f6       	brge	.-106    	; 0x270 <switcher+0x40>
				self->counter--;
     2da:	84 e0       	ldi	r24, 0x04	; 4
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	99 8b       	std	Y+17, r25	; 0x11
     2e0:	88 8b       	std	Y+16, r24	; 0x10
				ASYNC(self->com, transmit, 0b1001);		// Green north
     2e2:	0c 81       	ldd	r16, Y+4	; 0x04
     2e4:	1d 81       	ldd	r17, Y+5	; 0x05
     2e6:	59 e0       	ldi	r21, 0x09	; 9
     2e8:	c5 2e       	mov	r12, r21
     2ea:	d1 2c       	mov	r13, r1
     2ec:	6d e4       	ldi	r22, 0x4D	; 77
     2ee:	e6 2e       	mov	r14, r22
     2f0:	60 e0       	ldi	r22, 0x00	; 0
     2f2:	f6 2e       	mov	r15, r22
     2f4:	20 e0       	ldi	r18, 0x00	; 0
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	a9 01       	movw	r20, r18
     2fa:	60 e0       	ldi	r22, 0x00	; 0
     2fc:	70 e0       	ldi	r23, 0x00	; 0
     2fe:	cb 01       	movw	r24, r22
     300:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
     304:	d1 cf       	rjmp	.-94     	; 0x2a8 <switcher+0x78>
	ASYNC(self, switcher, NULL);
}

int switcher (Handler *self) {
	if (self->isNorth) {
		if (self->northQueue && self->counter < 5) {			// I added the check with (if other queue > 5 switch queue if bridge is currently empty)
     306:	88 89       	ldd	r24, Y+16	; 0x10
     308:	99 89       	ldd	r25, Y+17	; 0x11
     30a:	05 97       	sbiw	r24, 0x05	; 5
     30c:	54 f3       	brlt	.-44     	; 0x2e2 <switcher+0xb2>
			ASYNC(self->com, transmit, 0b1001);		// Green north
		}
		else {
			if (self->southQueue && self->onBridge == 0) { //why is 2 = 0?!?!
     30e:	8a 85       	ldd	r24, Y+10	; 0x0a
     310:	9b 85       	ldd	r25, Y+11	; 0x0b
     312:	89 2b       	or	r24, r25
     314:	d1 f2       	breq	.-76     	; 0x2ca <switcher+0x9a>
     316:	8e 85       	ldd	r24, Y+14	; 0x0e
     318:	9f 85       	ldd	r25, Y+15	; 0x0f
     31a:	89 2b       	or	r24, r25
     31c:	09 f0       	breq	.+2      	; 0x320 <switcher+0xf0>
     31e:	a8 cf       	rjmp	.-176    	; 0x270 <switcher+0x40>
				self->counter = 0;
     320:	19 8a       	std	Y+17, r1	; 0x11
     322:	18 8a       	std	Y+16, r1	; 0x10
				self->isNorth = 0;
     324:	19 86       	std	Y+9, r1	; 0x09
     326:	18 86       	std	Y+8, r1	; 0x08
				ASYNC(self->com, transmit, 0b0110);		// Green south
     328:	0c 81       	ldd	r16, Y+4	; 0x04
     32a:	1d 81       	ldd	r17, Y+5	; 0x05
     32c:	76 e0       	ldi	r23, 0x06	; 6
     32e:	c7 2e       	mov	r12, r23
     330:	d1 2c       	mov	r13, r1
     332:	ed e4       	ldi	r30, 0x4D	; 77
     334:	ee 2e       	mov	r14, r30
     336:	e0 e0       	ldi	r30, 0x00	; 0
     338:	fe 2e       	mov	r15, r30
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	a9 01       	movw	r20, r18
     340:	60 e0       	ldi	r22, 0x00	; 0
     342:	70 e0       	ldi	r23, 0x00	; 0
     344:	cb 01       	movw	r24, r22
     346:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
			}
			if (!(self->southQueue) && self->counter == 5 && self->onBridge < 5){
     34a:	8a 85       	ldd	r24, Y+10	; 0x0a
     34c:	9b 85       	ldd	r25, Y+11	; 0x0b
     34e:	89 2b       	or	r24, r25
     350:	09 f0       	breq	.+2      	; 0x354 <switcher+0x124>
     352:	8e cf       	rjmp	.-228    	; 0x270 <switcher+0x40>
     354:	ba cf       	rjmp	.-140    	; 0x2ca <switcher+0x9a>
		if (self->southQueue && self->counter < 5) {
			ASYNC(self->com, transmit, 0b0110);		// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
				self->counter = 0;
     356:	19 8a       	std	Y+17, r1	; 0x11
     358:	18 8a       	std	Y+16, r1	; 0x10
				self->isNorth = 1;
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	99 87       	std	Y+9, r25	; 0x09
     360:	88 87       	std	Y+8, r24	; 0x08
				ASYNC(self->com, transmit, 0b1001);		// Green north 
     362:	0c 81       	ldd	r16, Y+4	; 0x04
     364:	1d 81       	ldd	r17, Y+5	; 0x05
     366:	39 e0       	ldi	r19, 0x09	; 9
     368:	c3 2e       	mov	r12, r19
     36a:	d1 2c       	mov	r13, r1
     36c:	4d e4       	ldi	r20, 0x4D	; 77
     36e:	e4 2e       	mov	r14, r20
     370:	40 e0       	ldi	r20, 0x00	; 0
     372:	f4 2e       	mov	r15, r20
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	a9 01       	movw	r20, r18
     37a:	60 e0       	ldi	r22, 0x00	; 0
     37c:	70 e0       	ldi	r23, 0x00	; 0
     37e:	cb 01       	movw	r24, r22
     380:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
			}
			if (!(self->northQueue) && self->counter == 5 && self->onBridge < 5){
     384:	8c 85       	ldd	r24, Y+12	; 0x0c
     386:	9d 85       	ldd	r25, Y+13	; 0x0d
     388:	89 2b       	or	r24, r25
     38a:	09 f0       	breq	.+2      	; 0x38e <switcher+0x15e>
     38c:	71 cf       	rjmp	.-286    	; 0x270 <switcher+0x40>
     38e:	88 89       	ldd	r24, Y+16	; 0x10
     390:	99 89       	ldd	r25, Y+17	; 0x11
     392:	05 97       	sbiw	r24, 0x05	; 5
     394:	09 f0       	breq	.+2      	; 0x398 <switcher+0x168>
     396:	6c cf       	rjmp	.-296    	; 0x270 <switcher+0x40>
     398:	8e 85       	ldd	r24, Y+14	; 0x0e
     39a:	9f 85       	ldd	r25, Y+15	; 0x0f
     39c:	05 97       	sbiw	r24, 0x05	; 5
     39e:	0c f0       	brlt	.+2      	; 0x3a2 <switcher+0x172>
     3a0:	67 cf       	rjmp	.-306    	; 0x270 <switcher+0x40>
				self->counter--;
     3a2:	84 e0       	ldi	r24, 0x04	; 4
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	99 8b       	std	Y+17, r25	; 0x11
     3a8:	88 8b       	std	Y+16, r24	; 0x10
				ASYNC(self->com, transmit, 0b0110);		// Green south
     3aa:	0c 81       	ldd	r16, Y+4	; 0x04
     3ac:	1d 81       	ldd	r17, Y+5	; 0x05
     3ae:	96 e0       	ldi	r25, 0x06	; 6
     3b0:	c9 2e       	mov	r12, r25
     3b2:	d1 2c       	mov	r13, r1
     3b4:	2d e4       	ldi	r18, 0x4D	; 77
     3b6:	e2 2e       	mov	r14, r18
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	f2 2e       	mov	r15, r18
     3bc:	20 e0       	ldi	r18, 0x00	; 0
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	a9 01       	movw	r20, r18
     3c2:	60 e0       	ldi	r22, 0x00	; 0
     3c4:	70 e0       	ldi	r23, 0x00	; 0
     3c6:	cb 01       	movw	r24, r22
     3c8:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
     3cc:	6d cf       	rjmp	.-294    	; 0x2a8 <switcher+0x78>

000003ce <readValue>:
	self->onBridge++;
	ASYNC(self, updateDisplay, NULL);
	AFTER(MSEC(5000), self, reduceBridge, NULL);
}

int readValue(Handler *self, int value) {
     3ce:	cf 92       	push	r12
     3d0:	df 92       	push	r13
     3d2:	ef 92       	push	r14
     3d4:	ff 92       	push	r15
     3d6:	0f 93       	push	r16
     3d8:	1f 93       	push	r17
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	ec 01       	movw	r28, r24
	if (value == 1) {			// If a car enters northQueue
     3e0:	61 30       	cpi	r22, 0x01	; 1
     3e2:	71 05       	cpc	r23, r1
     3e4:	09 f4       	brne	.+2      	; 0x3e8 <readValue+0x1a>
     3e6:	48 c0       	rjmp	.+144    	; 0x478 <__DATA_REGION_LENGTH__+0x78>
		self->northQueue++;
	}
	if (value == 2) {			// Car enters north
     3e8:	62 30       	cpi	r22, 0x02	; 2
     3ea:	71 05       	cpc	r23, r1
     3ec:	09 f4       	brne	.+2      	; 0x3f0 <readValue+0x22>
     3ee:	4a c0       	rjmp	.+148    	; 0x484 <__DATA_REGION_LENGTH__+0x84>
		self->counter++;
		ASYNC(self, deQueuer, 1);
	}
	if (value == 4) {
     3f0:	64 30       	cpi	r22, 0x04	; 4
     3f2:	71 05       	cpc	r23, r1
     3f4:	c1 f0       	breq	.+48     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
		self->southQueue++;
	}
	if (value == 8) {
     3f6:	68 30       	cpi	r22, 0x08	; 8
     3f8:	71 05       	cpc	r23, r1
     3fa:	d1 f4       	brne	.+52     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
		self->counter++;		
     3fc:	88 89       	ldd	r24, Y+16	; 0x10
     3fe:	99 89       	ldd	r25, Y+17	; 0x11
     400:	01 96       	adiw	r24, 0x01	; 1
     402:	99 8b       	std	Y+17, r25	; 0x11
     404:	88 8b       	std	Y+16, r24	; 0x10
		ASYNC(self, deQueuer, 0);
     406:	c1 2c       	mov	r12, r1
     408:	d1 2c       	mov	r13, r1
     40a:	28 ed       	ldi	r18, 0xD8	; 216
     40c:	e2 2e       	mov	r14, r18
     40e:	20 e0       	ldi	r18, 0x00	; 0
     410:	f2 2e       	mov	r15, r18
     412:	8e 01       	movw	r16, r28
     414:	20 e0       	ldi	r18, 0x00	; 0
     416:	30 e0       	ldi	r19, 0x00	; 0
     418:	a9 01       	movw	r20, r18
     41a:	60 e0       	ldi	r22, 0x00	; 0
     41c:	70 e0       	ldi	r23, 0x00	; 0
     41e:	cb 01       	movw	r24, r22
     420:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
     424:	05 c0       	rjmp	.+10     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
	if (value == 2) {			// Car enters north
		self->counter++;
		ASYNC(self, deQueuer, 1);
	}
	if (value == 4) {
		self->southQueue++;
     426:	8a 85       	ldd	r24, Y+10	; 0x0a
     428:	9b 85       	ldd	r25, Y+11	; 0x0b
     42a:	01 96       	adiw	r24, 0x01	; 1
     42c:	9b 87       	std	Y+11, r25	; 0x0b
     42e:	8a 87       	std	Y+10, r24	; 0x0a
	}
	if (value == 8) {
		self->counter++;		
		ASYNC(self, deQueuer, 0);
	}
	ASYNC(self, updateDisplay, NULL);
     430:	c1 2c       	mov	r12, r1
     432:	d1 2c       	mov	r13, r1
     434:	84 e5       	ldi	r24, 0x54	; 84
     436:	e8 2e       	mov	r14, r24
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	f8 2e       	mov	r15, r24
     43c:	8e 01       	movw	r16, r28
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	a9 01       	movw	r20, r18
     444:	60 e0       	ldi	r22, 0x00	; 0
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	cb 01       	movw	r24, r22
     44a:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
	ASYNC(self, switcher, NULL);
     44e:	98 e1       	ldi	r25, 0x18	; 24
     450:	e9 2e       	mov	r14, r25
     452:	91 e0       	ldi	r25, 0x01	; 1
     454:	f9 2e       	mov	r15, r25
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	a9 01       	movw	r20, r18
     45c:	60 e0       	ldi	r22, 0x00	; 0
     45e:	70 e0       	ldi	r23, 0x00	; 0
     460:	cb 01       	movw	r24, r22
     462:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
}
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	1f 91       	pop	r17
     46c:	0f 91       	pop	r16
     46e:	ff 90       	pop	r15
     470:	ef 90       	pop	r14
     472:	df 90       	pop	r13
     474:	cf 90       	pop	r12
     476:	08 95       	ret
	AFTER(MSEC(5000), self, reduceBridge, NULL);
}

int readValue(Handler *self, int value) {
	if (value == 1) {			// If a car enters northQueue
		self->northQueue++;
     478:	8c 85       	ldd	r24, Y+12	; 0x0c
     47a:	9d 85       	ldd	r25, Y+13	; 0x0d
     47c:	01 96       	adiw	r24, 0x01	; 1
     47e:	9d 87       	std	Y+13, r25	; 0x0d
     480:	8c 87       	std	Y+12, r24	; 0x0c
     482:	d6 cf       	rjmp	.-84     	; 0x430 <__DATA_REGION_LENGTH__+0x30>
	}
	if (value == 2) {			// Car enters north
		self->counter++;
     484:	88 89       	ldd	r24, Y+16	; 0x10
     486:	99 89       	ldd	r25, Y+17	; 0x11
     488:	01 96       	adiw	r24, 0x01	; 1
     48a:	99 8b       	std	Y+17, r25	; 0x11
     48c:	88 8b       	std	Y+16, r24	; 0x10
		ASYNC(self, deQueuer, 1);
     48e:	cc 24       	eor	r12, r12
     490:	c3 94       	inc	r12
     492:	d1 2c       	mov	r13, r1
     494:	ba cf       	rjmp	.-140    	; 0x40a <__DATA_REGION_LENGTH__+0xa>

00000496 <Init>:
#define FOSC 8000000
#define BAUD 9600
#define MYUBRR ((FOSC/(16UL*BAUD))-1)

void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
     496:	e1 e6       	ldi	r30, 0x61	; 97
     498:	f0 e0       	ldi	r31, 0x00	; 0
     49a:	80 e8       	ldi	r24, 0x80	; 128
     49c:	80 83       	st	Z, r24
	CLKPR = 0x00;
     49e:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     4a0:	8f e0       	ldi	r24, 0x0F	; 15
     4a2:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     4a6:	87 eb       	ldi	r24, 0xB7	; 183
     4a8:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     4ac:	87 e0       	ldi	r24, 0x07	; 7
     4ae:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     4b2:	80 ec       	ldi	r24, 0xC0	; 192
     4b4:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// ------------------------- Stuffs for communication -------------------------------------------------
	
	/* Set baud rate */
	UBRR0H = (uint8_t)(MYUBRR<<8);
     4b8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (uint8_t)(MYUBRR);
     4bc:	83 e3       	ldi	r24, 0x33	; 51
     4be:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	/* Enable receiver and transmitter */
	UCSR0B = (1<<TXEN0) | (1<<RXEN0) | (1<<RXCIE0);
     4c2:	88 e9       	ldi	r24, 0x98	; 152
     4c4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
     4c8:	08 95       	ret

000004ca <interrupter>:
 */ 

#include<avr/io.h>
#include "InterruptHandler.h"

int interrupter(InterruptHandler *self) {
     4ca:	cf 92       	push	r12
     4cc:	df 92       	push	r13
     4ce:	ef 92       	push	r14
     4d0:	ff 92       	push	r15
     4d2:	0f 93       	push	r16
     4d4:	1f 93       	push	r17
	/*while ( !(UCSR0A & (1<<UDRE0)) );
	UDR0 = 0b1001;*/
	ASYNC(self->handler, readValue, UDR0);
     4d6:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     4da:	d1 2c       	mov	r13, r1
     4dc:	fc 01       	movw	r30, r24
     4de:	04 81       	ldd	r16, Z+4	; 0x04
     4e0:	15 81       	ldd	r17, Z+5	; 0x05
     4e2:	87 ee       	ldi	r24, 0xE7	; 231
     4e4:	e8 2e       	mov	r14, r24
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	f8 2e       	mov	r15, r24
     4ea:	20 e0       	ldi	r18, 0x00	; 0
     4ec:	30 e0       	ldi	r19, 0x00	; 0
     4ee:	a9 01       	movw	r20, r18
     4f0:	60 e0       	ldi	r22, 0x00	; 0
     4f2:	70 e0       	ldi	r23, 0x00	; 0
     4f4:	cb 01       	movw	r24, r22
     4f6:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
	return 0;
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	1f 91       	pop	r17
     500:	0f 91       	pop	r16
     502:	ff 90       	pop	r15
     504:	ef 90       	pop	r14
     506:	df 90       	pop	r13
     508:	cf 90       	pop	r12
     50a:	08 95       	ret

0000050c <removeOldChar.part.0>:
};

// Switches between two segments 
void switchSegment() {
    LCDDR13 = !(LCDDR13 & 1);
    LCDDR18 = !(LCDDR18 & 1);
     50c:	fc 01       	movw	r30, r24
     50e:	20 81       	ld	r18, Z
     510:	29 70       	andi	r18, 0x09	; 9
     512:	20 83       	st	Z, r18
     514:	35 96       	adiw	r30, 0x05	; 5
     516:	9c 01       	movw	r18, r24
     518:	2c 5e       	subi	r18, 0xEC	; 236
     51a:	3f 4f       	sbci	r19, 0xFF	; 255
     51c:	90 81       	ld	r25, Z
     51e:	9f 70       	andi	r25, 0x0F	; 15
     520:	90 83       	st	Z, r25
     522:	35 96       	adiw	r30, 0x05	; 5
     524:	e2 17       	cp	r30, r18
     526:	f3 07       	cpc	r31, r19
     528:	c9 f7       	brne	.-14     	; 0x51c <removeOldChar.part.0+0x10>
     52a:	08 95       	ret

0000052c <displayChar>:
     52c:	cf 93       	push	r28
     52e:	df 93       	push	r29
     530:	00 d0       	rcall	.+0      	; 0x532 <displayChar+0x6>
     532:	00 d0       	rcall	.+0      	; 0x534 <displayChar+0x8>
     534:	cd b7       	in	r28, 0x3d	; 61
     536:	de b7       	in	r29, 0x3e	; 62
     538:	da 01       	movw	r26, r20
     53a:	90 ed       	ldi	r25, 0xD0	; 208
     53c:	98 0f       	add	r25, r24
     53e:	9a 30       	cpi	r25, 0x0A	; 10
     540:	e8 f1       	brcs	.+122    	; 0x5bc <displayChar+0x90>
     542:	89 e0       	ldi	r24, 0x09	; 9
     544:	89 83       	std	Y+1, r24	; 0x01
     546:	8f e0       	ldi	r24, 0x0F	; 15
     548:	8a 83       	std	Y+2, r24	; 0x02
     54a:	8b 83       	std	Y+3, r24	; 0x03
     54c:	8c 83       	std	Y+4, r24	; 0x04
     54e:	99 e0       	ldi	r25, 0x09	; 9
     550:	66 23       	and	r22, r22
     552:	99 f0       	breq	.+38     	; 0x57a <displayChar+0x4e>
     554:	fe 01       	movw	r30, r28
     556:	31 96       	adiw	r30, 0x01	; 1
     558:	9e 01       	movw	r18, r28
     55a:	2b 5f       	subi	r18, 0xFB	; 251
     55c:	3f 4f       	sbci	r19, 0xFF	; 255
     55e:	92 95       	swap	r25
     560:	90 7f       	andi	r25, 0xF0	; 240
     562:	91 93       	st	Z+, r25
     564:	2e 17       	cp	r18, r30
     566:	3f 07       	cpc	r19, r31
     568:	39 f0       	breq	.+14     	; 0x578 <displayChar+0x4c>
     56a:	90 81       	ld	r25, Z
     56c:	92 95       	swap	r25
     56e:	90 7f       	andi	r25, 0xF0	; 240
     570:	91 93       	st	Z+, r25
     572:	2e 17       	cp	r18, r30
     574:	3f 07       	cpc	r19, r31
     576:	c9 f7       	brne	.-14     	; 0x56a <displayChar+0x3e>
     578:	99 81       	ldd	r25, Y+1	; 0x01
     57a:	8c 91       	ld	r24, X
     57c:	98 2b       	or	r25, r24
     57e:	9c 93       	st	X, r25
     580:	15 96       	adiw	r26, 0x05	; 5
     582:	9c 91       	ld	r25, X
     584:	15 97       	sbiw	r26, 0x05	; 5
     586:	8a 81       	ldd	r24, Y+2	; 0x02
     588:	89 2b       	or	r24, r25
     58a:	15 96       	adiw	r26, 0x05	; 5
     58c:	8c 93       	st	X, r24
     58e:	15 97       	sbiw	r26, 0x05	; 5
     590:	1a 96       	adiw	r26, 0x0a	; 10
     592:	9c 91       	ld	r25, X
     594:	1a 97       	sbiw	r26, 0x0a	; 10
     596:	8b 81       	ldd	r24, Y+3	; 0x03
     598:	89 2b       	or	r24, r25
     59a:	1a 96       	adiw	r26, 0x0a	; 10
     59c:	8c 93       	st	X, r24
     59e:	1a 97       	sbiw	r26, 0x0a	; 10
     5a0:	1f 96       	adiw	r26, 0x0f	; 15
     5a2:	9c 91       	ld	r25, X
     5a4:	1f 97       	sbiw	r26, 0x0f	; 15
     5a6:	8c 81       	ldd	r24, Y+4	; 0x04
     5a8:	89 2b       	or	r24, r25
     5aa:	1f 96       	adiw	r26, 0x0f	; 15
     5ac:	8c 93       	st	X, r24
     5ae:	0f 90       	pop	r0
     5b0:	0f 90       	pop	r0
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	df 91       	pop	r29
     5b8:	cf 91       	pop	r28
     5ba:	08 95       	ret
     5bc:	e8 2f       	mov	r30, r24
     5be:	f0 e0       	ldi	r31, 0x00	; 0
     5c0:	ee 0f       	add	r30, r30
     5c2:	ff 1f       	adc	r31, r31
     5c4:	ee 0f       	add	r30, r30
     5c6:	ff 1f       	adc	r31, r31
     5c8:	e8 5b       	subi	r30, 0xB8	; 184
     5ca:	ff 4f       	sbci	r31, 0xFF	; 255
     5cc:	90 81       	ld	r25, Z
     5ce:	99 83       	std	Y+1, r25	; 0x01
     5d0:	81 81       	ldd	r24, Z+1	; 0x01
     5d2:	8a 83       	std	Y+2, r24	; 0x02
     5d4:	82 81       	ldd	r24, Z+2	; 0x02
     5d6:	8b 83       	std	Y+3, r24	; 0x03
     5d8:	83 81       	ldd	r24, Z+3	; 0x03
     5da:	8c 83       	std	Y+4, r24	; 0x04
     5dc:	b9 cf       	rjmp	.-142    	; 0x550 <displayChar+0x24>

000005de <writeChar>:
     5de:	0f 93       	push	r16
     5e0:	1f 93       	push	r17
     5e2:	cf 93       	push	r28
     5e4:	60 fd       	sbrc	r22, 0
     5e6:	1c c0       	rjmp	.+56     	; 0x620 <writeChar+0x42>
     5e8:	77 fd       	sbrc	r23, 7
     5ea:	30 c0       	rjmp	.+96     	; 0x64c <writeChar+0x6e>
     5ec:	75 95       	asr	r23
     5ee:	67 95       	ror	r22
     5f0:	ab 01       	movw	r20, r22
     5f2:	44 51       	subi	r20, 0x14	; 20
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	fa 01       	movw	r30, r20
     5f8:	90 81       	ld	r25, Z
     5fa:	90 79       	andi	r25, 0x90	; 144
     5fc:	90 83       	st	Z, r25
     5fe:	35 96       	adiw	r30, 0x05	; 5
     600:	9a 01       	movw	r18, r20
     602:	2c 5e       	subi	r18, 0xEC	; 236
     604:	3f 4f       	sbci	r19, 0xFF	; 255
     606:	90 81       	ld	r25, Z
     608:	90 7f       	andi	r25, 0xF0	; 240
     60a:	90 83       	st	Z, r25
     60c:	35 96       	adiw	r30, 0x05	; 5
     60e:	e2 17       	cp	r30, r18
     610:	f3 07       	cpc	r31, r19
     612:	c9 f7       	brne	.-14     	; 0x606 <writeChar+0x28>
     614:	60 e0       	ldi	r22, 0x00	; 0
     616:	cf 91       	pop	r28
     618:	1f 91       	pop	r17
     61a:	0f 91       	pop	r16
     61c:	0c 94 96 02 	jmp	0x52c	; 0x52c <displayChar>
     620:	ab 01       	movw	r20, r22
     622:	41 50       	subi	r20, 0x01	; 1
     624:	51 09       	sbc	r21, r1
     626:	57 fd       	sbrc	r21, 7
     628:	14 c0       	rjmp	.+40     	; 0x652 <writeChar+0x74>
     62a:	c8 2f       	mov	r28, r24
     62c:	55 95       	asr	r21
     62e:	47 95       	ror	r20
     630:	8a 01       	movw	r16, r20
     632:	04 51       	subi	r16, 0x14	; 20
     634:	1f 4f       	sbci	r17, 0xFF	; 255
     636:	c8 01       	movw	r24, r16
     638:	0e 94 86 02 	call	0x50c	; 0x50c <removeOldChar.part.0>
     63c:	a8 01       	movw	r20, r16
     63e:	61 e0       	ldi	r22, 0x01	; 1
     640:	8c 2f       	mov	r24, r28
     642:	cf 91       	pop	r28
     644:	1f 91       	pop	r17
     646:	0f 91       	pop	r16
     648:	0c 94 96 02 	jmp	0x52c	; 0x52c <displayChar>
     64c:	6f 5f       	subi	r22, 0xFF	; 255
     64e:	7f 4f       	sbci	r23, 0xFF	; 255
     650:	cd cf       	rjmp	.-102    	; 0x5ec <writeChar+0xe>
     652:	ab 01       	movw	r20, r22
     654:	ea cf       	rjmp	.-44     	; 0x62a <writeChar+0x4c>

00000656 <printAt>:
}
 
// Displays last two digits of num in pos and pos+1
int  printAt(Lcd *self, int input) {  // [pos, num]
     656:	ef 92       	push	r14
     658:	ff 92       	push	r15
     65a:	0f 93       	push	r16
     65c:	1f 93       	push	r17
     65e:	cf 93       	push	r28
     660:	df 93       	push	r29
     662:	cb 01       	movw	r24, r22
    int pp = input % 10;
     664:	0a e0       	ldi	r16, 0x0A	; 10
     666:	10 e0       	ldi	r17, 0x00	; 0
     668:	b8 01       	movw	r22, r16
     66a:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <__divmodhi4>
     66e:	7b 01       	movw	r14, r22
     670:	ec 01       	movw	r28, r24
    int num = input / 10;
    writeChar((num % 100) / 10 + '0', pp);
     672:	cb 01       	movw	r24, r22
     674:	64 e6       	ldi	r22, 0x64	; 100
     676:	70 e0       	ldi	r23, 0x00	; 0
     678:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <__divmodhi4>
     67c:	b8 01       	movw	r22, r16
     67e:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <__divmodhi4>
     682:	86 2f       	mov	r24, r22
     684:	be 01       	movw	r22, r28
     686:	80 5d       	subi	r24, 0xD0	; 208
     688:	0e 94 ef 02 	call	0x5de	; 0x5de <writeChar>
    pp++;
    writeChar( num % 10 + '0', pp);
     68c:	21 96       	adiw	r28, 0x01	; 1
     68e:	c7 01       	movw	r24, r14
     690:	b8 01       	movw	r22, r16
     692:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <__divmodhi4>
     696:	be 01       	movw	r22, r28
     698:	80 5d       	subi	r24, 0xD0	; 208
     69a:	0e 94 ef 02 	call	0x5de	; 0x5de <writeChar>

    return 0;
     69e:	80 e0       	ldi	r24, 0x00	; 0
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	df 91       	pop	r29
     6a4:	cf 91       	pop	r28
     6a6:	1f 91       	pop	r17
     6a8:	0f 91       	pop	r16
     6aa:	ff 90       	pop	r15
     6ac:	ef 90       	pop	r14
     6ae:	08 95       	ret

000006b0 <main>:
#include "Lcd.h"
#include "TinyTimber.h"
#include "InterruptHandler.h"

int main(void)
{
     6b0:	cf 93       	push	r28
     6b2:	df 93       	push	r29
     6b4:	cd b7       	in	r28, 0x3d	; 61
     6b6:	de b7       	in	r29, 0x3e	; 62
     6b8:	a0 97       	sbiw	r28, 0x20	; 32
     6ba:	0f b6       	in	r0, 0x3f	; 63
     6bc:	f8 94       	cli
     6be:	de bf       	out	0x3e, r29	; 62
     6c0:	0f be       	out	0x3f, r0	; 63
     6c2:	cd bf       	out	0x3d, r28	; 61
    Init();
     6c4:	0e 94 4b 02 	call	0x496	; 0x496 <Init>
	Lcd lcd = initLcd();
     6c8:	1e 8e       	std	Y+30, r1	; 0x1e
     6ca:	1d 8e       	std	Y+29, r1	; 0x1d
     6cc:	18 a2       	std	Y+32, r1	; 0x20
     6ce:	1f 8e       	std	Y+31, r1	; 0x1f
	Communication com = initCommunication();
     6d0:	1a 8e       	std	Y+26, r1	; 0x1a
     6d2:	19 8e       	std	Y+25, r1	; 0x19
     6d4:	1c 8e       	std	Y+28, r1	; 0x1c
     6d6:	1b 8e       	std	Y+27, r1	; 0x1b
	Handler handler = initHandler(&com, &lcd);
     6d8:	1a 82       	std	Y+2, r1	; 0x02
     6da:	19 82       	std	Y+1, r1	; 0x01
     6dc:	1c 82       	std	Y+4, r1	; 0x04
     6de:	1b 82       	std	Y+3, r1	; 0x03
     6e0:	ce 01       	movw	r24, r28
     6e2:	49 96       	adiw	r24, 0x19	; 25
     6e4:	9e 83       	std	Y+6, r25	; 0x06
     6e6:	8d 83       	std	Y+5, r24	; 0x05
     6e8:	04 96       	adiw	r24, 0x04	; 4
     6ea:	98 87       	std	Y+8, r25	; 0x08
     6ec:	8f 83       	std	Y+7, r24	; 0x07
     6ee:	81 e0       	ldi	r24, 0x01	; 1
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	9a 87       	std	Y+10, r25	; 0x0a
     6f4:	89 87       	std	Y+9, r24	; 0x09
     6f6:	1c 86       	std	Y+12, r1	; 0x0c
     6f8:	1b 86       	std	Y+11, r1	; 0x0b
     6fa:	1e 86       	std	Y+14, r1	; 0x0e
     6fc:	1d 86       	std	Y+13, r1	; 0x0d
     6fe:	18 8a       	std	Y+16, r1	; 0x10
     700:	1f 86       	std	Y+15, r1	; 0x0f
     702:	1a 8a       	std	Y+18, r1	; 0x12
     704:	19 8a       	std	Y+17, r1	; 0x11
	InterruptHandler interruptHandler = initInterruptHandler(&handler);
     706:	1c 8a       	std	Y+20, r1	; 0x14
     708:	1b 8a       	std	Y+19, r1	; 0x13
     70a:	1e 8a       	std	Y+22, r1	; 0x16
     70c:	1d 8a       	std	Y+21, r1	; 0x15
     70e:	ce 01       	movw	r24, r28
     710:	01 96       	adiw	r24, 0x01	; 1
     712:	98 8f       	std	Y+24, r25	; 0x18
     714:	8f 8b       	std	Y+23, r24	; 0x17
	INSTALL(&interruptHandler, interrupter, IRQ_USART0_RX);
     716:	48 e0       	ldi	r20, 0x08	; 8
     718:	65 e6       	ldi	r22, 0x65	; 101
     71a:	72 e0       	ldi	r23, 0x02	; 2
     71c:	42 96       	adiw	r24, 0x12	; 18
     71e:	0e 94 46 10 	call	0x208c	; 0x208c <install>
	return tinytimber(NULL, NULL, NULL);
     722:	40 e0       	ldi	r20, 0x00	; 0
     724:	50 e0       	ldi	r21, 0x00	; 0
     726:	60 e0       	ldi	r22, 0x00	; 0
     728:	70 e0       	ldi	r23, 0x00	; 0
     72a:	80 e0       	ldi	r24, 0x00	; 0
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	0e 94 60 10 	call	0x20c0	; 0x20c0 <tinytimber>
}
     732:	a0 96       	adiw	r28, 0x20	; 32
     734:	0f b6       	in	r0, 0x3f	; 63
     736:	f8 94       	cli
     738:	de bf       	out	0x3e, r29	; 62
     73a:	0f be       	out	0x3f, r0	; 63
     73c:	cd bf       	out	0x3d, r28	; 61
     73e:	df 91       	pop	r29
     740:	cf 91       	pop	r28
     742:	08 95       	ret

00000744 <initialize>:
    char status;
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
     744:	cf 93       	push	r28
     746:	df 93       	push	r29
     748:	00 d0       	rcall	.+0      	; 0x74a <initialize+0x6>
     74a:	00 d0       	rcall	.+0      	; 0x74c <initialize+0x8>
     74c:	cd b7       	in	r28, 0x3d	; 61
     74e:	de b7       	in	r29, 0x3e	; 62
     750:	8b e2       	ldi	r24, 0x2B	; 43
     752:	92 e0       	ldi	r25, 0x02	; 2
     754:	2b e0       	ldi	r18, 0x0B	; 11
     756:	33 e0       	ldi	r19, 0x03	; 3
     758:	fc 01       	movw	r30, r24
     75a:	70 97       	sbiw	r30, 0x10	; 16
     75c:	91 83       	std	Z+1, r25	; 0x01
     75e:	80 83       	st	Z, r24
     760:	40 96       	adiw	r24, 0x10	; 16
     762:	82 17       	cp	r24, r18
     764:	93 07       	cpc	r25, r19
     766:	c1 f7       	brne	.-16     	; 0x758 <initialize+0x14>
     768:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     76c:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     770:	e6 e6       	ldi	r30, 0x66	; 102
     772:	f1 e0       	ldi	r31, 0x01	; 1
     774:	83 e8       	ldi	r24, 0x83	; 131
     776:	91 e0       	ldi	r25, 0x01	; 1
     778:	91 83       	std	Z+1, r25	; 0x01
     77a:	80 83       	st	Z, r24
     77c:	80 ea       	ldi	r24, 0xA0	; 160
     77e:	91 e0       	ldi	r25, 0x01	; 1
     780:	96 8f       	std	Z+30, r25	; 0x1e
     782:	85 8f       	std	Z+29, r24	; 0x1d
     784:	ad eb       	ldi	r26, 0xBD	; 189
     786:	b1 e0       	ldi	r27, 0x01	; 1
     788:	b3 af       	std	Z+59, r27	; 0x3b
     78a:	a2 af       	std	Z+58, r26	; 0x3a
     78c:	1d 92       	st	X+, r1
     78e:	1c 92       	st	X, r1
     790:	fa 83       	std	Y+2, r31	; 0x02
     792:	e9 83       	std	Y+1, r30	; 0x01
     794:	e7 e6       	ldi	r30, 0x67	; 103
     796:	f3 e0       	ldi	r31, 0x03	; 3
     798:	fc 83       	std	Y+4, r31	; 0x04
     79a:	eb 83       	std	Y+3, r30	; 0x03
     79c:	89 81       	ldd	r24, Y+1	; 0x01
     79e:	9a 81       	ldd	r25, Y+2	; 0x02
     7a0:	06 96       	adiw	r24, 0x06	; 6
     7a2:	0e 94 a4 10 	call	0x2148	; 0x2148 <setjmp>
     7a6:	8b 81       	ldd	r24, Y+3	; 0x03
     7a8:	9c 81       	ldd	r25, Y+4	; 0x04
     7aa:	e9 81       	ldd	r30, Y+1	; 0x01
     7ac:	fa 81       	ldd	r31, Y+2	; 0x02
     7ae:	97 8b       	std	Z+23, r25	; 0x17
     7b0:	86 8b       	std	Z+22, r24	; 0x16
     7b2:	91 8f       	std	Z+25, r25	; 0x19
     7b4:	80 8f       	std	Z+24, r24	; 0x18
     7b6:	85 e4       	ldi	r24, 0x45	; 69
     7b8:	9f e0       	ldi	r25, 0x0F	; 15
     7ba:	94 8f       	std	Z+28, r25	; 0x1c
     7bc:	83 8f       	std	Z+27, r24	; 0x1b
     7be:	15 82       	std	Z+5, r1	; 0x05
     7c0:	14 82       	std	Z+4, r1	; 0x04
     7c2:	7d 96       	adiw	r30, 0x1d	; 29
     7c4:	fa 83       	std	Y+2, r31	; 0x02
     7c6:	e9 83       	std	Y+1, r30	; 0x01
     7c8:	eb 81       	ldd	r30, Y+3	; 0x03
     7ca:	fc 81       	ldd	r31, Y+4	; 0x04
     7cc:	e0 5a       	subi	r30, 0xA0	; 160
     7ce:	ff 4f       	sbci	r31, 0xFF	; 255
     7d0:	fc 83       	std	Y+4, r31	; 0x04
     7d2:	eb 83       	std	Y+3, r30	; 0x03
     7d4:	89 81       	ldd	r24, Y+1	; 0x01
     7d6:	9a 81       	ldd	r25, Y+2	; 0x02
     7d8:	8a 5d       	subi	r24, 0xDA	; 218
     7da:	91 40       	sbci	r25, 0x01	; 1
     7dc:	f9 f6       	brne	.-66     	; 0x79c <initialize+0x58>
     7de:	ee ef       	ldi	r30, 0xFE	; 254
     7e0:	f1 e0       	ldi	r31, 0x01	; 1
     7e2:	11 82       	std	Z+1, r1	; 0x01
     7e4:	10 82       	st	Z, r1
     7e6:	15 82       	std	Z+5, r1	; 0x05
     7e8:	14 82       	std	Z+4, r1	; 0x04
     7ea:	13 82       	std	Z+3, r1	; 0x03
     7ec:	12 82       	std	Z+2, r1	; 0x02
     7ee:	e1 e6       	ldi	r30, 0x61	; 97
     7f0:	f0 e0       	ldi	r31, 0x00	; 0
     7f2:	80 e8       	ldi	r24, 0x80	; 128
     7f4:	80 83       	st	Z, r24
     7f6:	10 82       	st	Z, r1
     7f8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     7fc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     800:	84 e0       	ldi	r24, 0x04	; 4
     802:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     806:	81 e0       	ldi	r24, 0x01	; 1
     808:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     80c:	0f 90       	pop	r0
     80e:	0f 90       	pop	r0
     810:	0f 90       	pop	r0
     812:	0f 90       	pop	r0
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	08 95       	ret

0000081a <dispatch>:
     81a:	cf 93       	push	r28
     81c:	df 93       	push	r29
     81e:	00 d0       	rcall	.+0      	; 0x820 <dispatch+0x6>
     820:	cd b7       	in	r28, 0x3d	; 61
     822:	de b7       	in	r29, 0x3e	; 62
     824:	9a 83       	std	Y+2, r25	; 0x02
     826:	89 83       	std	Y+1, r24	; 0x01
     828:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     82c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     830:	06 96       	adiw	r24, 0x06	; 6
     832:	0e 94 a4 10 	call	0x2148	; 0x2148 <setjmp>
     836:	89 2b       	or	r24, r25
     838:	29 f0       	breq	.+10     	; 0x844 <dispatch+0x2a>
     83a:	0f 90       	pop	r0
     83c:	0f 90       	pop	r0
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	08 95       	ret
     844:	89 81       	ldd	r24, Y+1	; 0x01
     846:	9a 81       	ldd	r25, Y+2	; 0x02
     848:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     84c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     850:	61 e0       	ldi	r22, 0x01	; 1
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	06 96       	adiw	r24, 0x06	; 6
     856:	0e 94 c4 10 	call	0x2188	; 0x2188 <longjmp>

0000085a <schedule>:
     85a:	0f 93       	push	r16
     85c:	1f 93       	push	r17
     85e:	cf 93       	push	r28
     860:	df 93       	push	r29
     862:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <msgQ>
     866:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <msgQ+0x1>
     86a:	30 97       	sbiw	r30, 0x00	; 0
     86c:	f1 f0       	breq	.+60     	; 0x8aa <schedule+0x50>
     86e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     872:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     876:	00 97       	sbiw	r24, 0x00	; 0
     878:	c1 f0       	breq	.+48     	; 0x8aa <schedule+0x50>
     87a:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     87e:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     882:	aa 81       	ldd	r26, Y+2	; 0x02
     884:	bb 81       	ldd	r27, Y+3	; 0x03
     886:	10 97       	sbiw	r26, 0x00	; 0
     888:	a9 f0       	breq	.+42     	; 0x8b4 <schedule+0x5a>
     88a:	46 81       	ldd	r20, Z+6	; 0x06
     88c:	57 81       	ldd	r21, Z+7	; 0x07
     88e:	60 85       	ldd	r22, Z+8	; 0x08
     890:	71 85       	ldd	r23, Z+9	; 0x09
     892:	16 96       	adiw	r26, 0x06	; 6
     894:	0d 91       	ld	r16, X+
     896:	1d 91       	ld	r17, X+
     898:	2d 91       	ld	r18, X+
     89a:	3c 91       	ld	r19, X
     89c:	19 97       	sbiw	r26, 0x09	; 9
     89e:	40 1b       	sub	r20, r16
     8a0:	51 0b       	sbc	r21, r17
     8a2:	62 0b       	sbc	r22, r18
     8a4:	73 0b       	sbc	r23, r19
     8a6:	77 fd       	sbrc	r23, 7
     8a8:	05 c0       	rjmp	.+10     	; 0x8b4 <schedule+0x5a>
     8aa:	df 91       	pop	r29
     8ac:	cf 91       	pop	r28
     8ae:	1f 91       	pop	r17
     8b0:	0f 91       	pop	r16
     8b2:	08 95       	ret
     8b4:	fc 01       	movw	r30, r24
     8b6:	20 81       	ld	r18, Z
     8b8:	31 81       	ldd	r19, Z+1	; 0x01
     8ba:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     8be:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     8c2:	d1 83       	std	Z+1, r29	; 0x01
     8c4:	c0 83       	st	Z, r28
     8c6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     8ca:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     8ce:	df 91       	pop	r29
     8d0:	cf 91       	pop	r28
     8d2:	1f 91       	pop	r17
     8d4:	0f 91       	pop	r16
     8d6:	0c 94 0d 04 	jmp	0x81a	; 0x81a <dispatch>

000008da <dequeue.part.0>:
     8da:	8f ef       	ldi	r24, 0xFF	; 255
     8dc:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     8e0:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     8e4:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     8e8:	81 e0       	ldi	r24, 0x01	; 1
     8ea:	83 bf       	out	0x33, r24	; 51
     8ec:	88 95       	sleep
     8ee:	fd cf       	rjmp	.-6      	; 0x8ea <dequeue.part.0+0x10>

000008f0 <__vector_1>:
     8f0:	1f 92       	push	r1
     8f2:	0f 92       	push	r0
     8f4:	0f b6       	in	r0, 0x3f	; 63
     8f6:	0f 92       	push	r0
     8f8:	11 24       	eor	r1, r1
     8fa:	2f 93       	push	r18
     8fc:	3f 93       	push	r19
     8fe:	4f 93       	push	r20
     900:	5f 93       	push	r21
     902:	6f 93       	push	r22
     904:	7f 93       	push	r23
     906:	8f 93       	push	r24
     908:	9f 93       	push	r25
     90a:	af 93       	push	r26
     90c:	bf 93       	push	r27
     90e:	ef 93       	push	r30
     910:	ff 93       	push	r31
     912:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     916:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     91a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     91e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     922:	c9 01       	movw	r24, r18
     924:	03 2e       	mov	r0, r19
     926:	00 0c       	add	r0, r0
     928:	aa 0b       	sbc	r26, r26
     92a:	bb 0b       	sbc	r27, r27
     92c:	dc 01       	movw	r26, r24
     92e:	99 27       	eor	r25, r25
     930:	88 27       	eor	r24, r24
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	70 e0       	ldi	r23, 0x00	; 0
     936:	84 2b       	or	r24, r20
     938:	95 2b       	or	r25, r21
     93a:	a6 2b       	or	r26, r22
     93c:	b7 2b       	or	r27, r23
     93e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     942:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     946:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     94a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     94e:	b0 9b       	sbis	0x16, 0	; 22
     950:	1b c0       	rjmp	.+54     	; 0x988 <__vector_1+0x98>
     952:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     956:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     95a:	c9 01       	movw	r24, r18
     95c:	01 96       	adiw	r24, 0x01	; 1
     95e:	09 2e       	mov	r0, r25
     960:	00 0c       	add	r0, r0
     962:	aa 0b       	sbc	r26, r26
     964:	bb 0b       	sbc	r27, r27
     966:	dc 01       	movw	r26, r24
     968:	99 27       	eor	r25, r25
     96a:	88 27       	eor	r24, r24
     96c:	60 e0       	ldi	r22, 0x00	; 0
     96e:	70 e0       	ldi	r23, 0x00	; 0
     970:	84 2b       	or	r24, r20
     972:	95 2b       	or	r25, r21
     974:	a6 2b       	or	r26, r22
     976:	b7 2b       	or	r27, r23
     978:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     97c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     980:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     984:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     988:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     98c:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     990:	30 97       	sbiw	r30, 0x00	; 0
     992:	39 f0       	breq	.+14     	; 0x9a2 <__vector_1+0xb2>
     994:	60 e0       	ldi	r22, 0x00	; 0
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     99c:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     9a0:	09 95       	icall
     9a2:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
     9a6:	ff 91       	pop	r31
     9a8:	ef 91       	pop	r30
     9aa:	bf 91       	pop	r27
     9ac:	af 91       	pop	r26
     9ae:	9f 91       	pop	r25
     9b0:	8f 91       	pop	r24
     9b2:	7f 91       	pop	r23
     9b4:	6f 91       	pop	r22
     9b6:	5f 91       	pop	r21
     9b8:	4f 91       	pop	r20
     9ba:	3f 91       	pop	r19
     9bc:	2f 91       	pop	r18
     9be:	0f 90       	pop	r0
     9c0:	0f be       	out	0x3f, r0	; 63
     9c2:	0f 90       	pop	r0
     9c4:	1f 90       	pop	r1
     9c6:	18 95       	reti

000009c8 <__vector_2>:
     9c8:	1f 92       	push	r1
     9ca:	0f 92       	push	r0
     9cc:	0f b6       	in	r0, 0x3f	; 63
     9ce:	0f 92       	push	r0
     9d0:	11 24       	eor	r1, r1
     9d2:	2f 93       	push	r18
     9d4:	3f 93       	push	r19
     9d6:	4f 93       	push	r20
     9d8:	5f 93       	push	r21
     9da:	6f 93       	push	r22
     9dc:	7f 93       	push	r23
     9de:	8f 93       	push	r24
     9e0:	9f 93       	push	r25
     9e2:	af 93       	push	r26
     9e4:	bf 93       	push	r27
     9e6:	ef 93       	push	r30
     9e8:	ff 93       	push	r31
     9ea:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     9ee:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     9f2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9f6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9fa:	c9 01       	movw	r24, r18
     9fc:	03 2e       	mov	r0, r19
     9fe:	00 0c       	add	r0, r0
     a00:	aa 0b       	sbc	r26, r26
     a02:	bb 0b       	sbc	r27, r27
     a04:	dc 01       	movw	r26, r24
     a06:	99 27       	eor	r25, r25
     a08:	88 27       	eor	r24, r24
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	70 e0       	ldi	r23, 0x00	; 0
     a0e:	84 2b       	or	r24, r20
     a10:	95 2b       	or	r25, r21
     a12:	a6 2b       	or	r26, r22
     a14:	b7 2b       	or	r27, r23
     a16:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     a1a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     a1e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     a22:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     a26:	b0 9b       	sbis	0x16, 0	; 22
     a28:	1b c0       	rjmp	.+54     	; 0xa60 <__vector_2+0x98>
     a2a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a2e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a32:	c9 01       	movw	r24, r18
     a34:	01 96       	adiw	r24, 0x01	; 1
     a36:	09 2e       	mov	r0, r25
     a38:	00 0c       	add	r0, r0
     a3a:	aa 0b       	sbc	r26, r26
     a3c:	bb 0b       	sbc	r27, r27
     a3e:	dc 01       	movw	r26, r24
     a40:	99 27       	eor	r25, r25
     a42:	88 27       	eor	r24, r24
     a44:	60 e0       	ldi	r22, 0x00	; 0
     a46:	70 e0       	ldi	r23, 0x00	; 0
     a48:	84 2b       	or	r24, r20
     a4a:	95 2b       	or	r25, r21
     a4c:	a6 2b       	or	r26, r22
     a4e:	b7 2b       	or	r27, r23
     a50:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     a54:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     a58:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     a5c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     a60:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     a64:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     a68:	30 97       	sbiw	r30, 0x00	; 0
     a6a:	39 f0       	breq	.+14     	; 0xa7a <__vector_2+0xb2>
     a6c:	61 e0       	ldi	r22, 0x01	; 1
     a6e:	70 e0       	ldi	r23, 0x00	; 0
     a70:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     a74:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     a78:	09 95       	icall
     a7a:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
     a7e:	ff 91       	pop	r31
     a80:	ef 91       	pop	r30
     a82:	bf 91       	pop	r27
     a84:	af 91       	pop	r26
     a86:	9f 91       	pop	r25
     a88:	8f 91       	pop	r24
     a8a:	7f 91       	pop	r23
     a8c:	6f 91       	pop	r22
     a8e:	5f 91       	pop	r21
     a90:	4f 91       	pop	r20
     a92:	3f 91       	pop	r19
     a94:	2f 91       	pop	r18
     a96:	0f 90       	pop	r0
     a98:	0f be       	out	0x3f, r0	; 63
     a9a:	0f 90       	pop	r0
     a9c:	1f 90       	pop	r1
     a9e:	18 95       	reti

00000aa0 <__vector_3>:
     aa0:	1f 92       	push	r1
     aa2:	0f 92       	push	r0
     aa4:	0f b6       	in	r0, 0x3f	; 63
     aa6:	0f 92       	push	r0
     aa8:	11 24       	eor	r1, r1
     aaa:	2f 93       	push	r18
     aac:	3f 93       	push	r19
     aae:	4f 93       	push	r20
     ab0:	5f 93       	push	r21
     ab2:	6f 93       	push	r22
     ab4:	7f 93       	push	r23
     ab6:	8f 93       	push	r24
     ab8:	9f 93       	push	r25
     aba:	af 93       	push	r26
     abc:	bf 93       	push	r27
     abe:	ef 93       	push	r30
     ac0:	ff 93       	push	r31
     ac2:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     ac6:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     aca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ace:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ad2:	c9 01       	movw	r24, r18
     ad4:	03 2e       	mov	r0, r19
     ad6:	00 0c       	add	r0, r0
     ad8:	aa 0b       	sbc	r26, r26
     ada:	bb 0b       	sbc	r27, r27
     adc:	dc 01       	movw	r26, r24
     ade:	99 27       	eor	r25, r25
     ae0:	88 27       	eor	r24, r24
     ae2:	60 e0       	ldi	r22, 0x00	; 0
     ae4:	70 e0       	ldi	r23, 0x00	; 0
     ae6:	84 2b       	or	r24, r20
     ae8:	95 2b       	or	r25, r21
     aea:	a6 2b       	or	r26, r22
     aec:	b7 2b       	or	r27, r23
     aee:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     af2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     af6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     afa:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     afe:	b0 9b       	sbis	0x16, 0	; 22
     b00:	1b c0       	rjmp	.+54     	; 0xb38 <__vector_3+0x98>
     b02:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b06:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b0a:	c9 01       	movw	r24, r18
     b0c:	01 96       	adiw	r24, 0x01	; 1
     b0e:	09 2e       	mov	r0, r25
     b10:	00 0c       	add	r0, r0
     b12:	aa 0b       	sbc	r26, r26
     b14:	bb 0b       	sbc	r27, r27
     b16:	dc 01       	movw	r26, r24
     b18:	99 27       	eor	r25, r25
     b1a:	88 27       	eor	r24, r24
     b1c:	60 e0       	ldi	r22, 0x00	; 0
     b1e:	70 e0       	ldi	r23, 0x00	; 0
     b20:	84 2b       	or	r24, r20
     b22:	95 2b       	or	r25, r21
     b24:	a6 2b       	or	r26, r22
     b26:	b7 2b       	or	r27, r23
     b28:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     b2c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     b30:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     b34:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     b38:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     b3c:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     b40:	30 97       	sbiw	r30, 0x00	; 0
     b42:	39 f0       	breq	.+14     	; 0xb52 <__vector_3+0xb2>
     b44:	62 e0       	ldi	r22, 0x02	; 2
     b46:	70 e0       	ldi	r23, 0x00	; 0
     b48:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     b4c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     b50:	09 95       	icall
     b52:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
     b56:	ff 91       	pop	r31
     b58:	ef 91       	pop	r30
     b5a:	bf 91       	pop	r27
     b5c:	af 91       	pop	r26
     b5e:	9f 91       	pop	r25
     b60:	8f 91       	pop	r24
     b62:	7f 91       	pop	r23
     b64:	6f 91       	pop	r22
     b66:	5f 91       	pop	r21
     b68:	4f 91       	pop	r20
     b6a:	3f 91       	pop	r19
     b6c:	2f 91       	pop	r18
     b6e:	0f 90       	pop	r0
     b70:	0f be       	out	0x3f, r0	; 63
     b72:	0f 90       	pop	r0
     b74:	1f 90       	pop	r1
     b76:	18 95       	reti

00000b78 <__vector_4>:
     b78:	1f 92       	push	r1
     b7a:	0f 92       	push	r0
     b7c:	0f b6       	in	r0, 0x3f	; 63
     b7e:	0f 92       	push	r0
     b80:	11 24       	eor	r1, r1
     b82:	2f 93       	push	r18
     b84:	3f 93       	push	r19
     b86:	4f 93       	push	r20
     b88:	5f 93       	push	r21
     b8a:	6f 93       	push	r22
     b8c:	7f 93       	push	r23
     b8e:	8f 93       	push	r24
     b90:	9f 93       	push	r25
     b92:	af 93       	push	r26
     b94:	bf 93       	push	r27
     b96:	ef 93       	push	r30
     b98:	ff 93       	push	r31
     b9a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     b9e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     ba2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ba6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     baa:	c9 01       	movw	r24, r18
     bac:	03 2e       	mov	r0, r19
     bae:	00 0c       	add	r0, r0
     bb0:	aa 0b       	sbc	r26, r26
     bb2:	bb 0b       	sbc	r27, r27
     bb4:	dc 01       	movw	r26, r24
     bb6:	99 27       	eor	r25, r25
     bb8:	88 27       	eor	r24, r24
     bba:	60 e0       	ldi	r22, 0x00	; 0
     bbc:	70 e0       	ldi	r23, 0x00	; 0
     bbe:	84 2b       	or	r24, r20
     bc0:	95 2b       	or	r25, r21
     bc2:	a6 2b       	or	r26, r22
     bc4:	b7 2b       	or	r27, r23
     bc6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     bca:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     bce:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     bd2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     bd6:	b0 9b       	sbis	0x16, 0	; 22
     bd8:	1b c0       	rjmp	.+54     	; 0xc10 <__vector_4+0x98>
     bda:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bde:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     be2:	c9 01       	movw	r24, r18
     be4:	01 96       	adiw	r24, 0x01	; 1
     be6:	09 2e       	mov	r0, r25
     be8:	00 0c       	add	r0, r0
     bea:	aa 0b       	sbc	r26, r26
     bec:	bb 0b       	sbc	r27, r27
     bee:	dc 01       	movw	r26, r24
     bf0:	99 27       	eor	r25, r25
     bf2:	88 27       	eor	r24, r24
     bf4:	60 e0       	ldi	r22, 0x00	; 0
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	84 2b       	or	r24, r20
     bfa:	95 2b       	or	r25, r21
     bfc:	a6 2b       	or	r26, r22
     bfe:	b7 2b       	or	r27, r23
     c00:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     c04:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     c08:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     c0c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     c10:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     c14:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     c18:	30 97       	sbiw	r30, 0x00	; 0
     c1a:	39 f0       	breq	.+14     	; 0xc2a <__vector_4+0xb2>
     c1c:	63 e0       	ldi	r22, 0x03	; 3
     c1e:	70 e0       	ldi	r23, 0x00	; 0
     c20:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     c24:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     c28:	09 95       	icall
     c2a:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
     c2e:	ff 91       	pop	r31
     c30:	ef 91       	pop	r30
     c32:	bf 91       	pop	r27
     c34:	af 91       	pop	r26
     c36:	9f 91       	pop	r25
     c38:	8f 91       	pop	r24
     c3a:	7f 91       	pop	r23
     c3c:	6f 91       	pop	r22
     c3e:	5f 91       	pop	r21
     c40:	4f 91       	pop	r20
     c42:	3f 91       	pop	r19
     c44:	2f 91       	pop	r18
     c46:	0f 90       	pop	r0
     c48:	0f be       	out	0x3f, r0	; 63
     c4a:	0f 90       	pop	r0
     c4c:	1f 90       	pop	r1
     c4e:	18 95       	reti

00000c50 <__vector_5>:
     c50:	1f 92       	push	r1
     c52:	0f 92       	push	r0
     c54:	0f b6       	in	r0, 0x3f	; 63
     c56:	0f 92       	push	r0
     c58:	11 24       	eor	r1, r1
     c5a:	2f 93       	push	r18
     c5c:	3f 93       	push	r19
     c5e:	4f 93       	push	r20
     c60:	5f 93       	push	r21
     c62:	6f 93       	push	r22
     c64:	7f 93       	push	r23
     c66:	8f 93       	push	r24
     c68:	9f 93       	push	r25
     c6a:	af 93       	push	r26
     c6c:	bf 93       	push	r27
     c6e:	ef 93       	push	r30
     c70:	ff 93       	push	r31
     c72:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     c76:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     c7a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c7e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c82:	c9 01       	movw	r24, r18
     c84:	03 2e       	mov	r0, r19
     c86:	00 0c       	add	r0, r0
     c88:	aa 0b       	sbc	r26, r26
     c8a:	bb 0b       	sbc	r27, r27
     c8c:	dc 01       	movw	r26, r24
     c8e:	99 27       	eor	r25, r25
     c90:	88 27       	eor	r24, r24
     c92:	60 e0       	ldi	r22, 0x00	; 0
     c94:	70 e0       	ldi	r23, 0x00	; 0
     c96:	84 2b       	or	r24, r20
     c98:	95 2b       	or	r25, r21
     c9a:	a6 2b       	or	r26, r22
     c9c:	b7 2b       	or	r27, r23
     c9e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     ca2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     ca6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     caa:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     cae:	b0 9b       	sbis	0x16, 0	; 22
     cb0:	1b c0       	rjmp	.+54     	; 0xce8 <__vector_5+0x98>
     cb2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cb6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cba:	c9 01       	movw	r24, r18
     cbc:	01 96       	adiw	r24, 0x01	; 1
     cbe:	09 2e       	mov	r0, r25
     cc0:	00 0c       	add	r0, r0
     cc2:	aa 0b       	sbc	r26, r26
     cc4:	bb 0b       	sbc	r27, r27
     cc6:	dc 01       	movw	r26, r24
     cc8:	99 27       	eor	r25, r25
     cca:	88 27       	eor	r24, r24
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	70 e0       	ldi	r23, 0x00	; 0
     cd0:	84 2b       	or	r24, r20
     cd2:	95 2b       	or	r25, r21
     cd4:	a6 2b       	or	r26, r22
     cd6:	b7 2b       	or	r27, r23
     cd8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     cdc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     ce0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     ce4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     ce8:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
     cec:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
     cf0:	30 97       	sbiw	r30, 0x00	; 0
     cf2:	39 f0       	breq	.+14     	; 0xd02 <__vector_5+0xb2>
     cf4:	64 e0       	ldi	r22, 0x04	; 4
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
     cfc:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
     d00:	09 95       	icall
     d02:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
     d06:	ff 91       	pop	r31
     d08:	ef 91       	pop	r30
     d0a:	bf 91       	pop	r27
     d0c:	af 91       	pop	r26
     d0e:	9f 91       	pop	r25
     d10:	8f 91       	pop	r24
     d12:	7f 91       	pop	r23
     d14:	6f 91       	pop	r22
     d16:	5f 91       	pop	r21
     d18:	4f 91       	pop	r20
     d1a:	3f 91       	pop	r19
     d1c:	2f 91       	pop	r18
     d1e:	0f 90       	pop	r0
     d20:	0f be       	out	0x3f, r0	; 63
     d22:	0f 90       	pop	r0
     d24:	1f 90       	pop	r1
     d26:	18 95       	reti

00000d28 <__vector_10>:
     d28:	1f 92       	push	r1
     d2a:	0f 92       	push	r0
     d2c:	0f b6       	in	r0, 0x3f	; 63
     d2e:	0f 92       	push	r0
     d30:	11 24       	eor	r1, r1
     d32:	2f 93       	push	r18
     d34:	3f 93       	push	r19
     d36:	4f 93       	push	r20
     d38:	5f 93       	push	r21
     d3a:	6f 93       	push	r22
     d3c:	7f 93       	push	r23
     d3e:	8f 93       	push	r24
     d40:	9f 93       	push	r25
     d42:	af 93       	push	r26
     d44:	bf 93       	push	r27
     d46:	ef 93       	push	r30
     d48:	ff 93       	push	r31
     d4a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     d4e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     d52:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d56:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d5a:	c9 01       	movw	r24, r18
     d5c:	03 2e       	mov	r0, r19
     d5e:	00 0c       	add	r0, r0
     d60:	aa 0b       	sbc	r26, r26
     d62:	bb 0b       	sbc	r27, r27
     d64:	dc 01       	movw	r26, r24
     d66:	99 27       	eor	r25, r25
     d68:	88 27       	eor	r24, r24
     d6a:	60 e0       	ldi	r22, 0x00	; 0
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	84 2b       	or	r24, r20
     d70:	95 2b       	or	r25, r21
     d72:	a6 2b       	or	r26, r22
     d74:	b7 2b       	or	r27, r23
     d76:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     d7a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     d7e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     d82:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     d86:	b0 9b       	sbis	0x16, 0	; 22
     d88:	1b c0       	rjmp	.+54     	; 0xdc0 <__vector_10+0x98>
     d8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d92:	c9 01       	movw	r24, r18
     d94:	01 96       	adiw	r24, 0x01	; 1
     d96:	09 2e       	mov	r0, r25
     d98:	00 0c       	add	r0, r0
     d9a:	aa 0b       	sbc	r26, r26
     d9c:	bb 0b       	sbc	r27, r27
     d9e:	dc 01       	movw	r26, r24
     da0:	99 27       	eor	r25, r25
     da2:	88 27       	eor	r24, r24
     da4:	60 e0       	ldi	r22, 0x00	; 0
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	84 2b       	or	r24, r20
     daa:	95 2b       	or	r25, r21
     dac:	a6 2b       	or	r26, r22
     dae:	b7 2b       	or	r27, r23
     db0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     db4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     db8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     dbc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     dc0:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
     dc4:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
     dc8:	30 97       	sbiw	r30, 0x00	; 0
     dca:	39 f0       	breq	.+14     	; 0xdda <__vector_10+0xb2>
     dcc:	65 e0       	ldi	r22, 0x05	; 5
     dce:	70 e0       	ldi	r23, 0x00	; 0
     dd0:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
     dd4:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
     dd8:	09 95       	icall
     dda:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
     dde:	ff 91       	pop	r31
     de0:	ef 91       	pop	r30
     de2:	bf 91       	pop	r27
     de4:	af 91       	pop	r26
     de6:	9f 91       	pop	r25
     de8:	8f 91       	pop	r24
     dea:	7f 91       	pop	r23
     dec:	6f 91       	pop	r22
     dee:	5f 91       	pop	r21
     df0:	4f 91       	pop	r20
     df2:	3f 91       	pop	r19
     df4:	2f 91       	pop	r18
     df6:	0f 90       	pop	r0
     df8:	0f be       	out	0x3f, r0	; 63
     dfa:	0f 90       	pop	r0
     dfc:	1f 90       	pop	r1
     dfe:	18 95       	reti

00000e00 <__vector_11>:
     e00:	1f 92       	push	r1
     e02:	0f 92       	push	r0
     e04:	0f b6       	in	r0, 0x3f	; 63
     e06:	0f 92       	push	r0
     e08:	11 24       	eor	r1, r1
     e0a:	2f 93       	push	r18
     e0c:	3f 93       	push	r19
     e0e:	4f 93       	push	r20
     e10:	5f 93       	push	r21
     e12:	6f 93       	push	r22
     e14:	7f 93       	push	r23
     e16:	8f 93       	push	r24
     e18:	9f 93       	push	r25
     e1a:	af 93       	push	r26
     e1c:	bf 93       	push	r27
     e1e:	ef 93       	push	r30
     e20:	ff 93       	push	r31
     e22:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     e26:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     e2a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e2e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e32:	c9 01       	movw	r24, r18
     e34:	03 2e       	mov	r0, r19
     e36:	00 0c       	add	r0, r0
     e38:	aa 0b       	sbc	r26, r26
     e3a:	bb 0b       	sbc	r27, r27
     e3c:	dc 01       	movw	r26, r24
     e3e:	99 27       	eor	r25, r25
     e40:	88 27       	eor	r24, r24
     e42:	60 e0       	ldi	r22, 0x00	; 0
     e44:	70 e0       	ldi	r23, 0x00	; 0
     e46:	84 2b       	or	r24, r20
     e48:	95 2b       	or	r25, r21
     e4a:	a6 2b       	or	r26, r22
     e4c:	b7 2b       	or	r27, r23
     e4e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e52:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e56:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e5a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e5e:	b0 9b       	sbis	0x16, 0	; 22
     e60:	1b c0       	rjmp	.+54     	; 0xe98 <__vector_11+0x98>
     e62:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e66:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e6a:	c9 01       	movw	r24, r18
     e6c:	01 96       	adiw	r24, 0x01	; 1
     e6e:	09 2e       	mov	r0, r25
     e70:	00 0c       	add	r0, r0
     e72:	aa 0b       	sbc	r26, r26
     e74:	bb 0b       	sbc	r27, r27
     e76:	dc 01       	movw	r26, r24
     e78:	99 27       	eor	r25, r25
     e7a:	88 27       	eor	r24, r24
     e7c:	60 e0       	ldi	r22, 0x00	; 0
     e7e:	70 e0       	ldi	r23, 0x00	; 0
     e80:	84 2b       	or	r24, r20
     e82:	95 2b       	or	r25, r21
     e84:	a6 2b       	or	r26, r22
     e86:	b7 2b       	or	r27, r23
     e88:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e8c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e90:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e94:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e98:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
     e9c:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
     ea0:	30 97       	sbiw	r30, 0x00	; 0
     ea2:	39 f0       	breq	.+14     	; 0xeb2 <__vector_11+0xb2>
     ea4:	66 e0       	ldi	r22, 0x06	; 6
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
     eac:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
     eb0:	09 95       	icall
     eb2:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
     eb6:	ff 91       	pop	r31
     eb8:	ef 91       	pop	r30
     eba:	bf 91       	pop	r27
     ebc:	af 91       	pop	r26
     ebe:	9f 91       	pop	r25
     ec0:	8f 91       	pop	r24
     ec2:	7f 91       	pop	r23
     ec4:	6f 91       	pop	r22
     ec6:	5f 91       	pop	r21
     ec8:	4f 91       	pop	r20
     eca:	3f 91       	pop	r19
     ecc:	2f 91       	pop	r18
     ece:	0f 90       	pop	r0
     ed0:	0f be       	out	0x3f, r0	; 63
     ed2:	0f 90       	pop	r0
     ed4:	1f 90       	pop	r1
     ed6:	18 95       	reti

00000ed8 <__vector_12>:
     ed8:	1f 92       	push	r1
     eda:	0f 92       	push	r0
     edc:	0f b6       	in	r0, 0x3f	; 63
     ede:	0f 92       	push	r0
     ee0:	11 24       	eor	r1, r1
     ee2:	2f 93       	push	r18
     ee4:	3f 93       	push	r19
     ee6:	4f 93       	push	r20
     ee8:	5f 93       	push	r21
     eea:	6f 93       	push	r22
     eec:	7f 93       	push	r23
     eee:	8f 93       	push	r24
     ef0:	9f 93       	push	r25
     ef2:	af 93       	push	r26
     ef4:	bf 93       	push	r27
     ef6:	ef 93       	push	r30
     ef8:	ff 93       	push	r31
     efa:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     efe:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     f02:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f06:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f0a:	c9 01       	movw	r24, r18
     f0c:	03 2e       	mov	r0, r19
     f0e:	00 0c       	add	r0, r0
     f10:	aa 0b       	sbc	r26, r26
     f12:	bb 0b       	sbc	r27, r27
     f14:	dc 01       	movw	r26, r24
     f16:	99 27       	eor	r25, r25
     f18:	88 27       	eor	r24, r24
     f1a:	60 e0       	ldi	r22, 0x00	; 0
     f1c:	70 e0       	ldi	r23, 0x00	; 0
     f1e:	84 2b       	or	r24, r20
     f20:	95 2b       	or	r25, r21
     f22:	a6 2b       	or	r26, r22
     f24:	b7 2b       	or	r27, r23
     f26:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f2a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f2e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f32:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f36:	b0 9b       	sbis	0x16, 0	; 22
     f38:	1b c0       	rjmp	.+54     	; 0xf70 <__vector_12+0x98>
     f3a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f3e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f42:	c9 01       	movw	r24, r18
     f44:	01 96       	adiw	r24, 0x01	; 1
     f46:	09 2e       	mov	r0, r25
     f48:	00 0c       	add	r0, r0
     f4a:	aa 0b       	sbc	r26, r26
     f4c:	bb 0b       	sbc	r27, r27
     f4e:	dc 01       	movw	r26, r24
     f50:	99 27       	eor	r25, r25
     f52:	88 27       	eor	r24, r24
     f54:	60 e0       	ldi	r22, 0x00	; 0
     f56:	70 e0       	ldi	r23, 0x00	; 0
     f58:	84 2b       	or	r24, r20
     f5a:	95 2b       	or	r25, r21
     f5c:	a6 2b       	or	r26, r22
     f5e:	b7 2b       	or	r27, r23
     f60:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f64:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f68:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f6c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f70:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
     f74:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
     f78:	30 97       	sbiw	r30, 0x00	; 0
     f7a:	39 f0       	breq	.+14     	; 0xf8a <__vector_12+0xb2>
     f7c:	67 e0       	ldi	r22, 0x07	; 7
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
     f84:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
     f88:	09 95       	icall
     f8a:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
     f8e:	ff 91       	pop	r31
     f90:	ef 91       	pop	r30
     f92:	bf 91       	pop	r27
     f94:	af 91       	pop	r26
     f96:	9f 91       	pop	r25
     f98:	8f 91       	pop	r24
     f9a:	7f 91       	pop	r23
     f9c:	6f 91       	pop	r22
     f9e:	5f 91       	pop	r21
     fa0:	4f 91       	pop	r20
     fa2:	3f 91       	pop	r19
     fa4:	2f 91       	pop	r18
     fa6:	0f 90       	pop	r0
     fa8:	0f be       	out	0x3f, r0	; 63
     faa:	0f 90       	pop	r0
     fac:	1f 90       	pop	r1
     fae:	18 95       	reti

00000fb0 <__vector_13>:
     fb0:	1f 92       	push	r1
     fb2:	0f 92       	push	r0
     fb4:	0f b6       	in	r0, 0x3f	; 63
     fb6:	0f 92       	push	r0
     fb8:	11 24       	eor	r1, r1
     fba:	2f 93       	push	r18
     fbc:	3f 93       	push	r19
     fbe:	4f 93       	push	r20
     fc0:	5f 93       	push	r21
     fc2:	6f 93       	push	r22
     fc4:	7f 93       	push	r23
     fc6:	8f 93       	push	r24
     fc8:	9f 93       	push	r25
     fca:	af 93       	push	r26
     fcc:	bf 93       	push	r27
     fce:	ef 93       	push	r30
     fd0:	ff 93       	push	r31
     fd2:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     fd6:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     fda:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fde:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fe2:	c9 01       	movw	r24, r18
     fe4:	03 2e       	mov	r0, r19
     fe6:	00 0c       	add	r0, r0
     fe8:	aa 0b       	sbc	r26, r26
     fea:	bb 0b       	sbc	r27, r27
     fec:	dc 01       	movw	r26, r24
     fee:	99 27       	eor	r25, r25
     ff0:	88 27       	eor	r24, r24
     ff2:	60 e0       	ldi	r22, 0x00	; 0
     ff4:	70 e0       	ldi	r23, 0x00	; 0
     ff6:	84 2b       	or	r24, r20
     ff8:	95 2b       	or	r25, r21
     ffa:	a6 2b       	or	r26, r22
     ffc:	b7 2b       	or	r27, r23
     ffe:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1002:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1006:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    100a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    100e:	b0 9b       	sbis	0x16, 0	; 22
    1010:	1b c0       	rjmp	.+54     	; 0x1048 <__vector_13+0x98>
    1012:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1016:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    101a:	c9 01       	movw	r24, r18
    101c:	01 96       	adiw	r24, 0x01	; 1
    101e:	09 2e       	mov	r0, r25
    1020:	00 0c       	add	r0, r0
    1022:	aa 0b       	sbc	r26, r26
    1024:	bb 0b       	sbc	r27, r27
    1026:	dc 01       	movw	r26, r24
    1028:	99 27       	eor	r25, r25
    102a:	88 27       	eor	r24, r24
    102c:	60 e0       	ldi	r22, 0x00	; 0
    102e:	70 e0       	ldi	r23, 0x00	; 0
    1030:	84 2b       	or	r24, r20
    1032:	95 2b       	or	r25, r21
    1034:	a6 2b       	or	r26, r22
    1036:	b7 2b       	or	r27, r23
    1038:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    103c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1040:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1044:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1048:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
    104c:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
    1050:	30 97       	sbiw	r30, 0x00	; 0
    1052:	39 f0       	breq	.+14     	; 0x1062 <__vector_13+0xb2>
    1054:	68 e0       	ldi	r22, 0x08	; 8
    1056:	70 e0       	ldi	r23, 0x00	; 0
    1058:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
    105c:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
    1060:	09 95       	icall
    1062:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    1066:	ff 91       	pop	r31
    1068:	ef 91       	pop	r30
    106a:	bf 91       	pop	r27
    106c:	af 91       	pop	r26
    106e:	9f 91       	pop	r25
    1070:	8f 91       	pop	r24
    1072:	7f 91       	pop	r23
    1074:	6f 91       	pop	r22
    1076:	5f 91       	pop	r21
    1078:	4f 91       	pop	r20
    107a:	3f 91       	pop	r19
    107c:	2f 91       	pop	r18
    107e:	0f 90       	pop	r0
    1080:	0f be       	out	0x3f, r0	; 63
    1082:	0f 90       	pop	r0
    1084:	1f 90       	pop	r1
    1086:	18 95       	reti

00001088 <__vector_14>:
    1088:	1f 92       	push	r1
    108a:	0f 92       	push	r0
    108c:	0f b6       	in	r0, 0x3f	; 63
    108e:	0f 92       	push	r0
    1090:	11 24       	eor	r1, r1
    1092:	2f 93       	push	r18
    1094:	3f 93       	push	r19
    1096:	4f 93       	push	r20
    1098:	5f 93       	push	r21
    109a:	6f 93       	push	r22
    109c:	7f 93       	push	r23
    109e:	8f 93       	push	r24
    10a0:	9f 93       	push	r25
    10a2:	af 93       	push	r26
    10a4:	bf 93       	push	r27
    10a6:	ef 93       	push	r30
    10a8:	ff 93       	push	r31
    10aa:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    10ae:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    10b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ba:	c9 01       	movw	r24, r18
    10bc:	03 2e       	mov	r0, r19
    10be:	00 0c       	add	r0, r0
    10c0:	aa 0b       	sbc	r26, r26
    10c2:	bb 0b       	sbc	r27, r27
    10c4:	dc 01       	movw	r26, r24
    10c6:	99 27       	eor	r25, r25
    10c8:	88 27       	eor	r24, r24
    10ca:	60 e0       	ldi	r22, 0x00	; 0
    10cc:	70 e0       	ldi	r23, 0x00	; 0
    10ce:	84 2b       	or	r24, r20
    10d0:	95 2b       	or	r25, r21
    10d2:	a6 2b       	or	r26, r22
    10d4:	b7 2b       	or	r27, r23
    10d6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    10da:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    10de:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    10e2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    10e6:	b0 9b       	sbis	0x16, 0	; 22
    10e8:	1b c0       	rjmp	.+54     	; 0x1120 <__vector_14+0x98>
    10ea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10ee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10f2:	c9 01       	movw	r24, r18
    10f4:	01 96       	adiw	r24, 0x01	; 1
    10f6:	09 2e       	mov	r0, r25
    10f8:	00 0c       	add	r0, r0
    10fa:	aa 0b       	sbc	r26, r26
    10fc:	bb 0b       	sbc	r27, r27
    10fe:	dc 01       	movw	r26, r24
    1100:	99 27       	eor	r25, r25
    1102:	88 27       	eor	r24, r24
    1104:	60 e0       	ldi	r22, 0x00	; 0
    1106:	70 e0       	ldi	r23, 0x00	; 0
    1108:	84 2b       	or	r24, r20
    110a:	95 2b       	or	r25, r21
    110c:	a6 2b       	or	r26, r22
    110e:	b7 2b       	or	r27, r23
    1110:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1114:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1118:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    111c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1120:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
    1124:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
    1128:	30 97       	sbiw	r30, 0x00	; 0
    112a:	39 f0       	breq	.+14     	; 0x113a <__vector_14+0xb2>
    112c:	69 e0       	ldi	r22, 0x09	; 9
    112e:	70 e0       	ldi	r23, 0x00	; 0
    1130:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
    1134:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
    1138:	09 95       	icall
    113a:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    113e:	ff 91       	pop	r31
    1140:	ef 91       	pop	r30
    1142:	bf 91       	pop	r27
    1144:	af 91       	pop	r26
    1146:	9f 91       	pop	r25
    1148:	8f 91       	pop	r24
    114a:	7f 91       	pop	r23
    114c:	6f 91       	pop	r22
    114e:	5f 91       	pop	r21
    1150:	4f 91       	pop	r20
    1152:	3f 91       	pop	r19
    1154:	2f 91       	pop	r18
    1156:	0f 90       	pop	r0
    1158:	0f be       	out	0x3f, r0	; 63
    115a:	0f 90       	pop	r0
    115c:	1f 90       	pop	r1
    115e:	18 95       	reti

00001160 <__vector_15>:
    1160:	1f 92       	push	r1
    1162:	0f 92       	push	r0
    1164:	0f b6       	in	r0, 0x3f	; 63
    1166:	0f 92       	push	r0
    1168:	11 24       	eor	r1, r1
    116a:	2f 93       	push	r18
    116c:	3f 93       	push	r19
    116e:	4f 93       	push	r20
    1170:	5f 93       	push	r21
    1172:	6f 93       	push	r22
    1174:	7f 93       	push	r23
    1176:	8f 93       	push	r24
    1178:	9f 93       	push	r25
    117a:	af 93       	push	r26
    117c:	bf 93       	push	r27
    117e:	ef 93       	push	r30
    1180:	ff 93       	push	r31
    1182:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1186:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    118a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    118e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1192:	c9 01       	movw	r24, r18
    1194:	03 2e       	mov	r0, r19
    1196:	00 0c       	add	r0, r0
    1198:	aa 0b       	sbc	r26, r26
    119a:	bb 0b       	sbc	r27, r27
    119c:	dc 01       	movw	r26, r24
    119e:	99 27       	eor	r25, r25
    11a0:	88 27       	eor	r24, r24
    11a2:	60 e0       	ldi	r22, 0x00	; 0
    11a4:	70 e0       	ldi	r23, 0x00	; 0
    11a6:	84 2b       	or	r24, r20
    11a8:	95 2b       	or	r25, r21
    11aa:	a6 2b       	or	r26, r22
    11ac:	b7 2b       	or	r27, r23
    11ae:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    11b2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    11b6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    11ba:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    11be:	b0 9b       	sbis	0x16, 0	; 22
    11c0:	1b c0       	rjmp	.+54     	; 0x11f8 <__vector_15+0x98>
    11c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ca:	c9 01       	movw	r24, r18
    11cc:	01 96       	adiw	r24, 0x01	; 1
    11ce:	09 2e       	mov	r0, r25
    11d0:	00 0c       	add	r0, r0
    11d2:	aa 0b       	sbc	r26, r26
    11d4:	bb 0b       	sbc	r27, r27
    11d6:	dc 01       	movw	r26, r24
    11d8:	99 27       	eor	r25, r25
    11da:	88 27       	eor	r24, r24
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	84 2b       	or	r24, r20
    11e2:	95 2b       	or	r25, r21
    11e4:	a6 2b       	or	r26, r22
    11e6:	b7 2b       	or	r27, r23
    11e8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    11ec:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    11f0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    11f4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    11f8:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
    11fc:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    1200:	30 97       	sbiw	r30, 0x00	; 0
    1202:	39 f0       	breq	.+14     	; 0x1212 <__vector_15+0xb2>
    1204:	6a e0       	ldi	r22, 0x0A	; 10
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    120c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    1210:	09 95       	icall
    1212:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    1216:	ff 91       	pop	r31
    1218:	ef 91       	pop	r30
    121a:	bf 91       	pop	r27
    121c:	af 91       	pop	r26
    121e:	9f 91       	pop	r25
    1220:	8f 91       	pop	r24
    1222:	7f 91       	pop	r23
    1224:	6f 91       	pop	r22
    1226:	5f 91       	pop	r21
    1228:	4f 91       	pop	r20
    122a:	3f 91       	pop	r19
    122c:	2f 91       	pop	r18
    122e:	0f 90       	pop	r0
    1230:	0f be       	out	0x3f, r0	; 63
    1232:	0f 90       	pop	r0
    1234:	1f 90       	pop	r1
    1236:	18 95       	reti

00001238 <__vector_16>:
    1238:	1f 92       	push	r1
    123a:	0f 92       	push	r0
    123c:	0f b6       	in	r0, 0x3f	; 63
    123e:	0f 92       	push	r0
    1240:	11 24       	eor	r1, r1
    1242:	2f 93       	push	r18
    1244:	3f 93       	push	r19
    1246:	4f 93       	push	r20
    1248:	5f 93       	push	r21
    124a:	6f 93       	push	r22
    124c:	7f 93       	push	r23
    124e:	8f 93       	push	r24
    1250:	9f 93       	push	r25
    1252:	af 93       	push	r26
    1254:	bf 93       	push	r27
    1256:	ef 93       	push	r30
    1258:	ff 93       	push	r31
    125a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    125e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1262:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1266:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    126a:	c9 01       	movw	r24, r18
    126c:	03 2e       	mov	r0, r19
    126e:	00 0c       	add	r0, r0
    1270:	aa 0b       	sbc	r26, r26
    1272:	bb 0b       	sbc	r27, r27
    1274:	dc 01       	movw	r26, r24
    1276:	99 27       	eor	r25, r25
    1278:	88 27       	eor	r24, r24
    127a:	60 e0       	ldi	r22, 0x00	; 0
    127c:	70 e0       	ldi	r23, 0x00	; 0
    127e:	84 2b       	or	r24, r20
    1280:	95 2b       	or	r25, r21
    1282:	a6 2b       	or	r26, r22
    1284:	b7 2b       	or	r27, r23
    1286:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    128a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    128e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1292:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1296:	b0 9b       	sbis	0x16, 0	; 22
    1298:	1b c0       	rjmp	.+54     	; 0x12d0 <__vector_16+0x98>
    129a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    129e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12a2:	c9 01       	movw	r24, r18
    12a4:	01 96       	adiw	r24, 0x01	; 1
    12a6:	09 2e       	mov	r0, r25
    12a8:	00 0c       	add	r0, r0
    12aa:	aa 0b       	sbc	r26, r26
    12ac:	bb 0b       	sbc	r27, r27
    12ae:	dc 01       	movw	r26, r24
    12b0:	99 27       	eor	r25, r25
    12b2:	88 27       	eor	r24, r24
    12b4:	60 e0       	ldi	r22, 0x00	; 0
    12b6:	70 e0       	ldi	r23, 0x00	; 0
    12b8:	84 2b       	or	r24, r20
    12ba:	95 2b       	or	r25, r21
    12bc:	a6 2b       	or	r26, r22
    12be:	b7 2b       	or	r27, r23
    12c0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    12c4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    12c8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    12cc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    12d0:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    12d4:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    12d8:	30 97       	sbiw	r30, 0x00	; 0
    12da:	39 f0       	breq	.+14     	; 0x12ea <__vector_16+0xb2>
    12dc:	6b e0       	ldi	r22, 0x0B	; 11
    12de:	70 e0       	ldi	r23, 0x00	; 0
    12e0:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    12e4:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    12e8:	09 95       	icall
    12ea:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    12ee:	ff 91       	pop	r31
    12f0:	ef 91       	pop	r30
    12f2:	bf 91       	pop	r27
    12f4:	af 91       	pop	r26
    12f6:	9f 91       	pop	r25
    12f8:	8f 91       	pop	r24
    12fa:	7f 91       	pop	r23
    12fc:	6f 91       	pop	r22
    12fe:	5f 91       	pop	r21
    1300:	4f 91       	pop	r20
    1302:	3f 91       	pop	r19
    1304:	2f 91       	pop	r18
    1306:	0f 90       	pop	r0
    1308:	0f be       	out	0x3f, r0	; 63
    130a:	0f 90       	pop	r0
    130c:	1f 90       	pop	r1
    130e:	18 95       	reti

00001310 <__vector_17>:
    1310:	1f 92       	push	r1
    1312:	0f 92       	push	r0
    1314:	0f b6       	in	r0, 0x3f	; 63
    1316:	0f 92       	push	r0
    1318:	11 24       	eor	r1, r1
    131a:	2f 93       	push	r18
    131c:	3f 93       	push	r19
    131e:	4f 93       	push	r20
    1320:	5f 93       	push	r21
    1322:	6f 93       	push	r22
    1324:	7f 93       	push	r23
    1326:	8f 93       	push	r24
    1328:	9f 93       	push	r25
    132a:	af 93       	push	r26
    132c:	bf 93       	push	r27
    132e:	ef 93       	push	r30
    1330:	ff 93       	push	r31
    1332:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1336:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    133a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    133e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1342:	c9 01       	movw	r24, r18
    1344:	03 2e       	mov	r0, r19
    1346:	00 0c       	add	r0, r0
    1348:	aa 0b       	sbc	r26, r26
    134a:	bb 0b       	sbc	r27, r27
    134c:	dc 01       	movw	r26, r24
    134e:	99 27       	eor	r25, r25
    1350:	88 27       	eor	r24, r24
    1352:	60 e0       	ldi	r22, 0x00	; 0
    1354:	70 e0       	ldi	r23, 0x00	; 0
    1356:	84 2b       	or	r24, r20
    1358:	95 2b       	or	r25, r21
    135a:	a6 2b       	or	r26, r22
    135c:	b7 2b       	or	r27, r23
    135e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1362:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1366:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    136a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    136e:	b0 9b       	sbis	0x16, 0	; 22
    1370:	1b c0       	rjmp	.+54     	; 0x13a8 <__vector_17+0x98>
    1372:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1376:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    137a:	c9 01       	movw	r24, r18
    137c:	01 96       	adiw	r24, 0x01	; 1
    137e:	09 2e       	mov	r0, r25
    1380:	00 0c       	add	r0, r0
    1382:	aa 0b       	sbc	r26, r26
    1384:	bb 0b       	sbc	r27, r27
    1386:	dc 01       	movw	r26, r24
    1388:	99 27       	eor	r25, r25
    138a:	88 27       	eor	r24, r24
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	84 2b       	or	r24, r20
    1392:	95 2b       	or	r25, r21
    1394:	a6 2b       	or	r26, r22
    1396:	b7 2b       	or	r27, r23
    1398:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    139c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    13a0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    13a4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    13a8:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    13ac:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    13b0:	30 97       	sbiw	r30, 0x00	; 0
    13b2:	39 f0       	breq	.+14     	; 0x13c2 <__vector_17+0xb2>
    13b4:	6c e0       	ldi	r22, 0x0C	; 12
    13b6:	70 e0       	ldi	r23, 0x00	; 0
    13b8:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    13bc:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    13c0:	09 95       	icall
    13c2:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    13c6:	ff 91       	pop	r31
    13c8:	ef 91       	pop	r30
    13ca:	bf 91       	pop	r27
    13cc:	af 91       	pop	r26
    13ce:	9f 91       	pop	r25
    13d0:	8f 91       	pop	r24
    13d2:	7f 91       	pop	r23
    13d4:	6f 91       	pop	r22
    13d6:	5f 91       	pop	r21
    13d8:	4f 91       	pop	r20
    13da:	3f 91       	pop	r19
    13dc:	2f 91       	pop	r18
    13de:	0f 90       	pop	r0
    13e0:	0f be       	out	0x3f, r0	; 63
    13e2:	0f 90       	pop	r0
    13e4:	1f 90       	pop	r1
    13e6:	18 95       	reti

000013e8 <__vector_18>:
    13e8:	1f 92       	push	r1
    13ea:	0f 92       	push	r0
    13ec:	0f b6       	in	r0, 0x3f	; 63
    13ee:	0f 92       	push	r0
    13f0:	11 24       	eor	r1, r1
    13f2:	2f 93       	push	r18
    13f4:	3f 93       	push	r19
    13f6:	4f 93       	push	r20
    13f8:	5f 93       	push	r21
    13fa:	6f 93       	push	r22
    13fc:	7f 93       	push	r23
    13fe:	8f 93       	push	r24
    1400:	9f 93       	push	r25
    1402:	af 93       	push	r26
    1404:	bf 93       	push	r27
    1406:	ef 93       	push	r30
    1408:	ff 93       	push	r31
    140a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    140e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1412:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1416:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    141a:	c9 01       	movw	r24, r18
    141c:	03 2e       	mov	r0, r19
    141e:	00 0c       	add	r0, r0
    1420:	aa 0b       	sbc	r26, r26
    1422:	bb 0b       	sbc	r27, r27
    1424:	dc 01       	movw	r26, r24
    1426:	99 27       	eor	r25, r25
    1428:	88 27       	eor	r24, r24
    142a:	60 e0       	ldi	r22, 0x00	; 0
    142c:	70 e0       	ldi	r23, 0x00	; 0
    142e:	84 2b       	or	r24, r20
    1430:	95 2b       	or	r25, r21
    1432:	a6 2b       	or	r26, r22
    1434:	b7 2b       	or	r27, r23
    1436:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    143a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    143e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1442:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1446:	b0 9b       	sbis	0x16, 0	; 22
    1448:	1b c0       	rjmp	.+54     	; 0x1480 <__vector_18+0x98>
    144a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    144e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1452:	c9 01       	movw	r24, r18
    1454:	01 96       	adiw	r24, 0x01	; 1
    1456:	09 2e       	mov	r0, r25
    1458:	00 0c       	add	r0, r0
    145a:	aa 0b       	sbc	r26, r26
    145c:	bb 0b       	sbc	r27, r27
    145e:	dc 01       	movw	r26, r24
    1460:	99 27       	eor	r25, r25
    1462:	88 27       	eor	r24, r24
    1464:	60 e0       	ldi	r22, 0x00	; 0
    1466:	70 e0       	ldi	r23, 0x00	; 0
    1468:	84 2b       	or	r24, r20
    146a:	95 2b       	or	r25, r21
    146c:	a6 2b       	or	r26, r22
    146e:	b7 2b       	or	r27, r23
    1470:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1474:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1478:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    147c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1480:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    1484:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    1488:	30 97       	sbiw	r30, 0x00	; 0
    148a:	39 f0       	breq	.+14     	; 0x149a <__vector_18+0xb2>
    148c:	6d e0       	ldi	r22, 0x0D	; 13
    148e:	70 e0       	ldi	r23, 0x00	; 0
    1490:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    1494:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    1498:	09 95       	icall
    149a:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    149e:	ff 91       	pop	r31
    14a0:	ef 91       	pop	r30
    14a2:	bf 91       	pop	r27
    14a4:	af 91       	pop	r26
    14a6:	9f 91       	pop	r25
    14a8:	8f 91       	pop	r24
    14aa:	7f 91       	pop	r23
    14ac:	6f 91       	pop	r22
    14ae:	5f 91       	pop	r21
    14b0:	4f 91       	pop	r20
    14b2:	3f 91       	pop	r19
    14b4:	2f 91       	pop	r18
    14b6:	0f 90       	pop	r0
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	0f 90       	pop	r0
    14bc:	1f 90       	pop	r1
    14be:	18 95       	reti

000014c0 <__vector_19>:
    14c0:	1f 92       	push	r1
    14c2:	0f 92       	push	r0
    14c4:	0f b6       	in	r0, 0x3f	; 63
    14c6:	0f 92       	push	r0
    14c8:	11 24       	eor	r1, r1
    14ca:	2f 93       	push	r18
    14cc:	3f 93       	push	r19
    14ce:	4f 93       	push	r20
    14d0:	5f 93       	push	r21
    14d2:	6f 93       	push	r22
    14d4:	7f 93       	push	r23
    14d6:	8f 93       	push	r24
    14d8:	9f 93       	push	r25
    14da:	af 93       	push	r26
    14dc:	bf 93       	push	r27
    14de:	ef 93       	push	r30
    14e0:	ff 93       	push	r31
    14e2:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    14e6:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    14ea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14f2:	c9 01       	movw	r24, r18
    14f4:	03 2e       	mov	r0, r19
    14f6:	00 0c       	add	r0, r0
    14f8:	aa 0b       	sbc	r26, r26
    14fa:	bb 0b       	sbc	r27, r27
    14fc:	dc 01       	movw	r26, r24
    14fe:	99 27       	eor	r25, r25
    1500:	88 27       	eor	r24, r24
    1502:	60 e0       	ldi	r22, 0x00	; 0
    1504:	70 e0       	ldi	r23, 0x00	; 0
    1506:	84 2b       	or	r24, r20
    1508:	95 2b       	or	r25, r21
    150a:	a6 2b       	or	r26, r22
    150c:	b7 2b       	or	r27, r23
    150e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1512:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1516:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    151a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    151e:	b0 9b       	sbis	0x16, 0	; 22
    1520:	1b c0       	rjmp	.+54     	; 0x1558 <__vector_19+0x98>
    1522:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1526:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    152a:	c9 01       	movw	r24, r18
    152c:	01 96       	adiw	r24, 0x01	; 1
    152e:	09 2e       	mov	r0, r25
    1530:	00 0c       	add	r0, r0
    1532:	aa 0b       	sbc	r26, r26
    1534:	bb 0b       	sbc	r27, r27
    1536:	dc 01       	movw	r26, r24
    1538:	99 27       	eor	r25, r25
    153a:	88 27       	eor	r24, r24
    153c:	60 e0       	ldi	r22, 0x00	; 0
    153e:	70 e0       	ldi	r23, 0x00	; 0
    1540:	84 2b       	or	r24, r20
    1542:	95 2b       	or	r25, r21
    1544:	a6 2b       	or	r26, r22
    1546:	b7 2b       	or	r27, r23
    1548:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    154c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1550:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1554:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1558:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    155c:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    1560:	30 97       	sbiw	r30, 0x00	; 0
    1562:	39 f0       	breq	.+14     	; 0x1572 <__vector_19+0xb2>
    1564:	6e e0       	ldi	r22, 0x0E	; 14
    1566:	70 e0       	ldi	r23, 0x00	; 0
    1568:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    156c:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    1570:	09 95       	icall
    1572:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    1576:	ff 91       	pop	r31
    1578:	ef 91       	pop	r30
    157a:	bf 91       	pop	r27
    157c:	af 91       	pop	r26
    157e:	9f 91       	pop	r25
    1580:	8f 91       	pop	r24
    1582:	7f 91       	pop	r23
    1584:	6f 91       	pop	r22
    1586:	5f 91       	pop	r21
    1588:	4f 91       	pop	r20
    158a:	3f 91       	pop	r19
    158c:	2f 91       	pop	r18
    158e:	0f 90       	pop	r0
    1590:	0f be       	out	0x3f, r0	; 63
    1592:	0f 90       	pop	r0
    1594:	1f 90       	pop	r1
    1596:	18 95       	reti

00001598 <__vector_20>:
    1598:	1f 92       	push	r1
    159a:	0f 92       	push	r0
    159c:	0f b6       	in	r0, 0x3f	; 63
    159e:	0f 92       	push	r0
    15a0:	11 24       	eor	r1, r1
    15a2:	2f 93       	push	r18
    15a4:	3f 93       	push	r19
    15a6:	4f 93       	push	r20
    15a8:	5f 93       	push	r21
    15aa:	6f 93       	push	r22
    15ac:	7f 93       	push	r23
    15ae:	8f 93       	push	r24
    15b0:	9f 93       	push	r25
    15b2:	af 93       	push	r26
    15b4:	bf 93       	push	r27
    15b6:	ef 93       	push	r30
    15b8:	ff 93       	push	r31
    15ba:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    15be:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    15c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15ca:	c9 01       	movw	r24, r18
    15cc:	03 2e       	mov	r0, r19
    15ce:	00 0c       	add	r0, r0
    15d0:	aa 0b       	sbc	r26, r26
    15d2:	bb 0b       	sbc	r27, r27
    15d4:	dc 01       	movw	r26, r24
    15d6:	99 27       	eor	r25, r25
    15d8:	88 27       	eor	r24, r24
    15da:	60 e0       	ldi	r22, 0x00	; 0
    15dc:	70 e0       	ldi	r23, 0x00	; 0
    15de:	84 2b       	or	r24, r20
    15e0:	95 2b       	or	r25, r21
    15e2:	a6 2b       	or	r26, r22
    15e4:	b7 2b       	or	r27, r23
    15e6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    15ea:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    15ee:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    15f2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    15f6:	b0 9b       	sbis	0x16, 0	; 22
    15f8:	1b c0       	rjmp	.+54     	; 0x1630 <__vector_20+0x98>
    15fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1602:	c9 01       	movw	r24, r18
    1604:	01 96       	adiw	r24, 0x01	; 1
    1606:	09 2e       	mov	r0, r25
    1608:	00 0c       	add	r0, r0
    160a:	aa 0b       	sbc	r26, r26
    160c:	bb 0b       	sbc	r27, r27
    160e:	dc 01       	movw	r26, r24
    1610:	99 27       	eor	r25, r25
    1612:	88 27       	eor	r24, r24
    1614:	60 e0       	ldi	r22, 0x00	; 0
    1616:	70 e0       	ldi	r23, 0x00	; 0
    1618:	84 2b       	or	r24, r20
    161a:	95 2b       	or	r25, r21
    161c:	a6 2b       	or	r26, r22
    161e:	b7 2b       	or	r27, r23
    1620:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1624:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1628:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    162c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1630:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    1634:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    1638:	30 97       	sbiw	r30, 0x00	; 0
    163a:	39 f0       	breq	.+14     	; 0x164a <__vector_20+0xb2>
    163c:	6f e0       	ldi	r22, 0x0F	; 15
    163e:	70 e0       	ldi	r23, 0x00	; 0
    1640:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    1644:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    1648:	09 95       	icall
    164a:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    164e:	ff 91       	pop	r31
    1650:	ef 91       	pop	r30
    1652:	bf 91       	pop	r27
    1654:	af 91       	pop	r26
    1656:	9f 91       	pop	r25
    1658:	8f 91       	pop	r24
    165a:	7f 91       	pop	r23
    165c:	6f 91       	pop	r22
    165e:	5f 91       	pop	r21
    1660:	4f 91       	pop	r20
    1662:	3f 91       	pop	r19
    1664:	2f 91       	pop	r18
    1666:	0f 90       	pop	r0
    1668:	0f be       	out	0x3f, r0	; 63
    166a:	0f 90       	pop	r0
    166c:	1f 90       	pop	r1
    166e:	18 95       	reti

00001670 <__vector_21>:
    1670:	1f 92       	push	r1
    1672:	0f 92       	push	r0
    1674:	0f b6       	in	r0, 0x3f	; 63
    1676:	0f 92       	push	r0
    1678:	11 24       	eor	r1, r1
    167a:	2f 93       	push	r18
    167c:	3f 93       	push	r19
    167e:	4f 93       	push	r20
    1680:	5f 93       	push	r21
    1682:	6f 93       	push	r22
    1684:	7f 93       	push	r23
    1686:	8f 93       	push	r24
    1688:	9f 93       	push	r25
    168a:	af 93       	push	r26
    168c:	bf 93       	push	r27
    168e:	ef 93       	push	r30
    1690:	ff 93       	push	r31
    1692:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1696:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    169a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    169e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16a2:	c9 01       	movw	r24, r18
    16a4:	03 2e       	mov	r0, r19
    16a6:	00 0c       	add	r0, r0
    16a8:	aa 0b       	sbc	r26, r26
    16aa:	bb 0b       	sbc	r27, r27
    16ac:	dc 01       	movw	r26, r24
    16ae:	99 27       	eor	r25, r25
    16b0:	88 27       	eor	r24, r24
    16b2:	60 e0       	ldi	r22, 0x00	; 0
    16b4:	70 e0       	ldi	r23, 0x00	; 0
    16b6:	84 2b       	or	r24, r20
    16b8:	95 2b       	or	r25, r21
    16ba:	a6 2b       	or	r26, r22
    16bc:	b7 2b       	or	r27, r23
    16be:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    16c2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    16c6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    16ca:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    16ce:	b0 9b       	sbis	0x16, 0	; 22
    16d0:	1b c0       	rjmp	.+54     	; 0x1708 <__vector_21+0x98>
    16d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16da:	c9 01       	movw	r24, r18
    16dc:	01 96       	adiw	r24, 0x01	; 1
    16de:	09 2e       	mov	r0, r25
    16e0:	00 0c       	add	r0, r0
    16e2:	aa 0b       	sbc	r26, r26
    16e4:	bb 0b       	sbc	r27, r27
    16e6:	dc 01       	movw	r26, r24
    16e8:	99 27       	eor	r25, r25
    16ea:	88 27       	eor	r24, r24
    16ec:	60 e0       	ldi	r22, 0x00	; 0
    16ee:	70 e0       	ldi	r23, 0x00	; 0
    16f0:	84 2b       	or	r24, r20
    16f2:	95 2b       	or	r25, r21
    16f4:	a6 2b       	or	r26, r22
    16f6:	b7 2b       	or	r27, r23
    16f8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    16fc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1700:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1704:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1708:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    170c:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    1710:	30 97       	sbiw	r30, 0x00	; 0
    1712:	39 f0       	breq	.+14     	; 0x1722 <__vector_21+0xb2>
    1714:	60 e1       	ldi	r22, 0x10	; 16
    1716:	70 e0       	ldi	r23, 0x00	; 0
    1718:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    171c:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    1720:	09 95       	icall
    1722:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    1726:	ff 91       	pop	r31
    1728:	ef 91       	pop	r30
    172a:	bf 91       	pop	r27
    172c:	af 91       	pop	r26
    172e:	9f 91       	pop	r25
    1730:	8f 91       	pop	r24
    1732:	7f 91       	pop	r23
    1734:	6f 91       	pop	r22
    1736:	5f 91       	pop	r21
    1738:	4f 91       	pop	r20
    173a:	3f 91       	pop	r19
    173c:	2f 91       	pop	r18
    173e:	0f 90       	pop	r0
    1740:	0f be       	out	0x3f, r0	; 63
    1742:	0f 90       	pop	r0
    1744:	1f 90       	pop	r1
    1746:	18 95       	reti

00001748 <__vector_22>:
    1748:	1f 92       	push	r1
    174a:	0f 92       	push	r0
    174c:	0f b6       	in	r0, 0x3f	; 63
    174e:	0f 92       	push	r0
    1750:	11 24       	eor	r1, r1
    1752:	2f 93       	push	r18
    1754:	3f 93       	push	r19
    1756:	4f 93       	push	r20
    1758:	5f 93       	push	r21
    175a:	6f 93       	push	r22
    175c:	7f 93       	push	r23
    175e:	8f 93       	push	r24
    1760:	9f 93       	push	r25
    1762:	af 93       	push	r26
    1764:	bf 93       	push	r27
    1766:	ef 93       	push	r30
    1768:	ff 93       	push	r31
    176a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    176e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1772:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1776:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    177a:	c9 01       	movw	r24, r18
    177c:	03 2e       	mov	r0, r19
    177e:	00 0c       	add	r0, r0
    1780:	aa 0b       	sbc	r26, r26
    1782:	bb 0b       	sbc	r27, r27
    1784:	dc 01       	movw	r26, r24
    1786:	99 27       	eor	r25, r25
    1788:	88 27       	eor	r24, r24
    178a:	60 e0       	ldi	r22, 0x00	; 0
    178c:	70 e0       	ldi	r23, 0x00	; 0
    178e:	84 2b       	or	r24, r20
    1790:	95 2b       	or	r25, r21
    1792:	a6 2b       	or	r26, r22
    1794:	b7 2b       	or	r27, r23
    1796:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    179a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    179e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    17a2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    17a6:	b0 9b       	sbis	0x16, 0	; 22
    17a8:	1b c0       	rjmp	.+54     	; 0x17e0 <__vector_22+0x98>
    17aa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17ae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17b2:	c9 01       	movw	r24, r18
    17b4:	01 96       	adiw	r24, 0x01	; 1
    17b6:	09 2e       	mov	r0, r25
    17b8:	00 0c       	add	r0, r0
    17ba:	aa 0b       	sbc	r26, r26
    17bc:	bb 0b       	sbc	r27, r27
    17be:	dc 01       	movw	r26, r24
    17c0:	99 27       	eor	r25, r25
    17c2:	88 27       	eor	r24, r24
    17c4:	60 e0       	ldi	r22, 0x00	; 0
    17c6:	70 e0       	ldi	r23, 0x00	; 0
    17c8:	84 2b       	or	r24, r20
    17ca:	95 2b       	or	r25, r21
    17cc:	a6 2b       	or	r26, r22
    17ce:	b7 2b       	or	r27, r23
    17d0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    17d4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    17d8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    17dc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    17e0:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    17e4:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    17e8:	30 97       	sbiw	r30, 0x00	; 0
    17ea:	39 f0       	breq	.+14     	; 0x17fa <__vector_22+0xb2>
    17ec:	61 e1       	ldi	r22, 0x11	; 17
    17ee:	70 e0       	ldi	r23, 0x00	; 0
    17f0:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    17f4:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    17f8:	09 95       	icall
    17fa:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    17fe:	ff 91       	pop	r31
    1800:	ef 91       	pop	r30
    1802:	bf 91       	pop	r27
    1804:	af 91       	pop	r26
    1806:	9f 91       	pop	r25
    1808:	8f 91       	pop	r24
    180a:	7f 91       	pop	r23
    180c:	6f 91       	pop	r22
    180e:	5f 91       	pop	r21
    1810:	4f 91       	pop	r20
    1812:	3f 91       	pop	r19
    1814:	2f 91       	pop	r18
    1816:	0f 90       	pop	r0
    1818:	0f be       	out	0x3f, r0	; 63
    181a:	0f 90       	pop	r0
    181c:	1f 90       	pop	r1
    181e:	18 95       	reti

00001820 <__vector_9>:
    1820:	1f 92       	push	r1
    1822:	0f 92       	push	r0
    1824:	0f b6       	in	r0, 0x3f	; 63
    1826:	0f 92       	push	r0
    1828:	11 24       	eor	r1, r1
    182a:	2f 93       	push	r18
    182c:	3f 93       	push	r19
    182e:	4f 93       	push	r20
    1830:	5f 93       	push	r21
    1832:	6f 93       	push	r22
    1834:	7f 93       	push	r23
    1836:	8f 93       	push	r24
    1838:	9f 93       	push	r25
    183a:	ef 93       	push	r30
    183c:	ff 93       	push	r31
    183e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1842:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1846:	01 96       	adiw	r24, 0x01	; 1
    1848:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
    184c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
    1850:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <timerQ>
    1854:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <timerQ+0x1>
    1858:	30 97       	sbiw	r30, 0x00	; 0
    185a:	39 f0       	breq	.+14     	; 0x186a <__vector_9+0x4a>
    185c:	42 81       	ldd	r20, Z+2	; 0x02
    185e:	53 81       	ldd	r21, Z+3	; 0x03
    1860:	64 81       	ldd	r22, Z+4	; 0x04
    1862:	75 81       	ldd	r23, Z+5	; 0x05
    1864:	86 17       	cp	r24, r22
    1866:	97 07       	cpc	r25, r23
    1868:	a1 f0       	breq	.+40     	; 0x1892 <__vector_9+0x72>
    186a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    186e:	8d 7f       	andi	r24, 0xFD	; 253
    1870:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1874:	ff 91       	pop	r31
    1876:	ef 91       	pop	r30
    1878:	9f 91       	pop	r25
    187a:	8f 91       	pop	r24
    187c:	7f 91       	pop	r23
    187e:	6f 91       	pop	r22
    1880:	5f 91       	pop	r21
    1882:	4f 91       	pop	r20
    1884:	3f 91       	pop	r19
    1886:	2f 91       	pop	r18
    1888:	0f 90       	pop	r0
    188a:	0f be       	out	0x3f, r0	; 63
    188c:	0f 90       	pop	r0
    188e:	1f 90       	pop	r1
    1890:	18 95       	reti
    1892:	ca 01       	movw	r24, r20
    1894:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1898:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    189c:	42 1b       	sub	r20, r18
    189e:	53 0b       	sbc	r21, r19
    18a0:	41 30       	cpi	r20, 0x01	; 1
    18a2:	51 05       	cpc	r21, r1
    18a4:	51 f0       	breq	.+20     	; 0x18ba <__vector_9+0x9a>
    18a6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    18aa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    18ae:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    18b2:	82 60       	ori	r24, 0x02	; 2
    18b4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    18b8:	dd cf       	rjmp	.-70     	; 0x1874 <__vector_9+0x54>
    18ba:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18be:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18c2:	01 96       	adiw	r24, 0x01	; 1
    18c4:	f0 cf       	rjmp	.-32     	; 0x18a6 <__vector_9+0x86>

000018c6 <__vector_7>:
    18c6:	1f 92       	push	r1
    18c8:	0f 92       	push	r0
    18ca:	0f b6       	in	r0, 0x3f	; 63
    18cc:	0f 92       	push	r0
    18ce:	11 24       	eor	r1, r1
    18d0:	8f 92       	push	r8
    18d2:	9f 92       	push	r9
    18d4:	af 92       	push	r10
    18d6:	bf 92       	push	r11
    18d8:	cf 92       	push	r12
    18da:	df 92       	push	r13
    18dc:	ef 92       	push	r14
    18de:	ff 92       	push	r15
    18e0:	0f 93       	push	r16
    18e2:	1f 93       	push	r17
    18e4:	2f 93       	push	r18
    18e6:	3f 93       	push	r19
    18e8:	4f 93       	push	r20
    18ea:	5f 93       	push	r21
    18ec:	6f 93       	push	r22
    18ee:	7f 93       	push	r23
    18f0:	8f 93       	push	r24
    18f2:	9f 93       	push	r25
    18f4:	af 93       	push	r26
    18f6:	bf 93       	push	r27
    18f8:	cf 93       	push	r28
    18fa:	df 93       	push	r29
    18fc:	ef 93       	push	r30
    18fe:	ff 93       	push	r31
    1900:	e0 90 34 01 	lds	r14, 0x0134	; 0x800134 <__data_end>
    1904:	f0 90 35 01 	lds	r15, 0x0135	; 0x800135 <__data_end+0x1>
    1908:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    190c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1910:	b0 99       	sbic	0x16, 0	; 22
    1912:	98 c0       	rjmp	.+304    	; 0x1a44 <__vector_7+0x17e>
    1914:	47 01       	movw	r8, r14
    1916:	0f 2c       	mov	r0, r15
    1918:	00 0c       	add	r0, r0
    191a:	aa 08       	sbc	r10, r10
    191c:	bb 08       	sbc	r11, r11
    191e:	54 01       	movw	r10, r8
    1920:	99 24       	eor	r9, r9
    1922:	88 24       	eor	r8, r8
    1924:	a0 e0       	ldi	r26, 0x00	; 0
    1926:	b0 e0       	ldi	r27, 0x00	; 0
    1928:	88 2a       	or	r8, r24
    192a:	99 2a       	or	r9, r25
    192c:	aa 2a       	or	r10, r26
    192e:	bb 2a       	or	r11, r27
    1930:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    1934:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    1938:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <msgQ>
    193c:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <msgQ+0x1>
    1940:	20 97       	sbiw	r28, 0x00	; 0
    1942:	09 f4       	brne	.+2      	; 0x1946 <__vector_7+0x80>
    1944:	3f c0       	rjmp	.+126    	; 0x19c4 <__vector_7+0xfe>
    1946:	4a 81       	ldd	r20, Y+2	; 0x02
    1948:	5b 81       	ldd	r21, Y+3	; 0x03
    194a:	6c 81       	ldd	r22, Y+4	; 0x04
    194c:	7d 81       	ldd	r23, Y+5	; 0x05
    194e:	8a 01       	movw	r16, r20
    1950:	9b 01       	movw	r18, r22
    1952:	08 19       	sub	r16, r8
    1954:	19 09       	sbc	r17, r9
    1956:	2a 09       	sbc	r18, r10
    1958:	3b 09       	sbc	r19, r11
    195a:	10 16       	cp	r1, r16
    195c:	11 06       	cpc	r1, r17
    195e:	12 06       	cpc	r1, r18
    1960:	13 06       	cpc	r1, r19
    1962:	0c f4       	brge	.+2      	; 0x1966 <__vector_7+0xa0>
    1964:	40 c0       	rjmp	.+128    	; 0x19e6 <__vector_7+0x120>
    1966:	d8 80       	ld	r13, Y
    1968:	c9 80       	ldd	r12, Y+1	; 0x01
    196a:	00 97       	sbiw	r24, 0x00	; 0
    196c:	b9 f1       	breq	.+110    	; 0x19dc <__vector_7+0x116>
    196e:	0e 81       	ldd	r16, Y+6	; 0x06
    1970:	1f 81       	ldd	r17, Y+7	; 0x07
    1972:	28 85       	ldd	r18, Y+8	; 0x08
    1974:	39 85       	ldd	r19, Y+9	; 0x09
    1976:	fc 01       	movw	r30, r24
    1978:	46 81       	ldd	r20, Z+6	; 0x06
    197a:	57 81       	ldd	r21, Z+7	; 0x07
    197c:	60 85       	ldd	r22, Z+8	; 0x08
    197e:	71 85       	ldd	r23, Z+9	; 0x09
    1980:	04 17       	cp	r16, r20
    1982:	15 07       	cpc	r17, r21
    1984:	26 07       	cpc	r18, r22
    1986:	37 07       	cpc	r19, r23
    1988:	4c f1       	brlt	.+82     	; 0x19dc <__vector_7+0x116>
    198a:	dc 01       	movw	r26, r24
    198c:	0a c0       	rjmp	.+20     	; 0x19a2 <__vector_7+0xdc>
    198e:	46 81       	ldd	r20, Z+6	; 0x06
    1990:	57 81       	ldd	r21, Z+7	; 0x07
    1992:	60 85       	ldd	r22, Z+8	; 0x08
    1994:	71 85       	ldd	r23, Z+9	; 0x09
    1996:	04 17       	cp	r16, r20
    1998:	15 07       	cpc	r17, r21
    199a:	26 07       	cpc	r18, r22
    199c:	37 07       	cpc	r19, r23
    199e:	dc f0       	brlt	.+54     	; 0x19d6 <__vector_7+0x110>
    19a0:	df 01       	movw	r26, r30
    19a2:	ed 91       	ld	r30, X+
    19a4:	fc 91       	ld	r31, X
    19a6:	11 97       	sbiw	r26, 0x01	; 1
    19a8:	30 97       	sbiw	r30, 0x00	; 0
    19aa:	89 f7       	brne	.-30     	; 0x198e <__vector_7+0xc8>
    19ac:	19 82       	std	Y+1, r1	; 0x01
    19ae:	18 82       	st	Y, r1
    19b0:	cd 93       	st	X+, r28
    19b2:	dc 93       	st	X, r29
    19b4:	38 2f       	mov	r19, r24
    19b6:	29 2f       	mov	r18, r25
    19b8:	cd 2d       	mov	r28, r13
    19ba:	dc 2d       	mov	r29, r12
    19bc:	83 2f       	mov	r24, r19
    19be:	92 2f       	mov	r25, r18
    19c0:	20 97       	sbiw	r28, 0x00	; 0
    19c2:	09 f6       	brne	.-126    	; 0x1946 <__vector_7+0x80>
    19c4:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <timerQ+0x1>
    19c8:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <timerQ>
    19cc:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    19d0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    19d4:	13 c0       	rjmp	.+38     	; 0x19fc <__vector_7+0x136>
    19d6:	f9 83       	std	Y+1, r31	; 0x01
    19d8:	e8 83       	st	Y, r30
    19da:	ea cf       	rjmp	.-44     	; 0x19b0 <__vector_7+0xea>
    19dc:	99 83       	std	Y+1, r25	; 0x01
    19de:	88 83       	st	Y, r24
    19e0:	3c 2f       	mov	r19, r28
    19e2:	2d 2f       	mov	r18, r29
    19e4:	e9 cf       	rjmp	.-46     	; 0x19b8 <__vector_7+0xf2>
    19e6:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    19ea:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    19ee:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    19f2:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    19f6:	e6 16       	cp	r14, r22
    19f8:	f7 06       	cpc	r15, r23
    19fa:	d9 f1       	breq	.+118    	; 0x1a72 <__vector_7+0x1ac>
    19fc:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a00:	8d 7f       	andi	r24, 0xFD	; 253
    1a02:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a06:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    1a0a:	ff 91       	pop	r31
    1a0c:	ef 91       	pop	r30
    1a0e:	df 91       	pop	r29
    1a10:	cf 91       	pop	r28
    1a12:	bf 91       	pop	r27
    1a14:	af 91       	pop	r26
    1a16:	9f 91       	pop	r25
    1a18:	8f 91       	pop	r24
    1a1a:	7f 91       	pop	r23
    1a1c:	6f 91       	pop	r22
    1a1e:	5f 91       	pop	r21
    1a20:	4f 91       	pop	r20
    1a22:	3f 91       	pop	r19
    1a24:	2f 91       	pop	r18
    1a26:	1f 91       	pop	r17
    1a28:	0f 91       	pop	r16
    1a2a:	ff 90       	pop	r15
    1a2c:	ef 90       	pop	r14
    1a2e:	df 90       	pop	r13
    1a30:	cf 90       	pop	r12
    1a32:	bf 90       	pop	r11
    1a34:	af 90       	pop	r10
    1a36:	9f 90       	pop	r9
    1a38:	8f 90       	pop	r8
    1a3a:	0f 90       	pop	r0
    1a3c:	0f be       	out	0x3f, r0	; 63
    1a3e:	0f 90       	pop	r0
    1a40:	1f 90       	pop	r1
    1a42:	18 95       	reti
    1a44:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a48:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a4c:	47 01       	movw	r8, r14
    1a4e:	8f ef       	ldi	r24, 0xFF	; 255
    1a50:	88 1a       	sub	r8, r24
    1a52:	98 0a       	sbc	r9, r24
    1a54:	09 2c       	mov	r0, r9
    1a56:	00 0c       	add	r0, r0
    1a58:	aa 08       	sbc	r10, r10
    1a5a:	bb 08       	sbc	r11, r11
    1a5c:	d4 01       	movw	r26, r8
    1a5e:	99 27       	eor	r25, r25
    1a60:	88 27       	eor	r24, r24
    1a62:	49 01       	movw	r8, r18
    1a64:	a1 2c       	mov	r10, r1
    1a66:	b1 2c       	mov	r11, r1
    1a68:	88 2a       	or	r8, r24
    1a6a:	99 2a       	or	r9, r25
    1a6c:	aa 2a       	or	r10, r26
    1a6e:	bb 2a       	or	r11, r27
    1a70:	5f cf       	rjmp	.-322    	; 0x1930 <__vector_7+0x6a>
    1a72:	ca 01       	movw	r24, r20
    1a74:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a78:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a7c:	42 1b       	sub	r20, r18
    1a7e:	53 0b       	sbc	r21, r19
    1a80:	41 30       	cpi	r20, 0x01	; 1
    1a82:	51 05       	cpc	r21, r1
    1a84:	51 f0       	breq	.+20     	; 0x1a9a <__vector_7+0x1d4>
    1a86:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a8a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a8e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a92:	82 60       	ori	r24, 0x02	; 2
    1a94:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a98:	b6 cf       	rjmp	.-148    	; 0x1a06 <__vector_7+0x140>
    1a9a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a9e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1aa2:	01 96       	adiw	r24, 0x01	; 1
    1aa4:	f0 cf       	rjmp	.-32     	; 0x1a86 <__vector_7+0x1c0>

00001aa6 <async>:
    1aa6:	3f 92       	push	r3
    1aa8:	4f 92       	push	r4
    1aaa:	5f 92       	push	r5
    1aac:	6f 92       	push	r6
    1aae:	7f 92       	push	r7
    1ab0:	8f 92       	push	r8
    1ab2:	9f 92       	push	r9
    1ab4:	af 92       	push	r10
    1ab6:	bf 92       	push	r11
    1ab8:	cf 92       	push	r12
    1aba:	df 92       	push	r13
    1abc:	ef 92       	push	r14
    1abe:	ff 92       	push	r15
    1ac0:	0f 93       	push	r16
    1ac2:	1f 93       	push	r17
    1ac4:	cf 93       	push	r28
    1ac6:	df 93       	push	r29
    1ac8:	ef b7       	in	r30, 0x3f	; 63
    1aca:	e0 78       	andi	r30, 0x80	; 128
    1acc:	3e 2e       	mov	r3, r30
    1ace:	f8 94       	cli
    1ad0:	c0 91 06 01 	lds	r28, 0x0106	; 0x800106 <msgPool>
    1ad4:	d0 91 07 01 	lds	r29, 0x0107	; 0x800107 <msgPool+0x1>
    1ad8:	20 97       	sbiw	r28, 0x00	; 0
    1ada:	09 f4       	brne	.+2      	; 0x1ade <async+0x38>
    1adc:	52 c1       	rjmp	.+676    	; 0x1d82 <async+0x2dc>
    1ade:	e8 81       	ld	r30, Y
    1ae0:	f9 81       	ldd	r31, Y+1	; 0x01
    1ae2:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <msgPool+0x1>
    1ae6:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <msgPool>
    1aea:	1b 87       	std	Y+11, r17	; 0x0b
    1aec:	0a 87       	std	Y+10, r16	; 0x0a
    1aee:	fd 86       	std	Y+13, r15	; 0x0d
    1af0:	ec 86       	std	Y+12, r14	; 0x0c
    1af2:	df 86       	std	Y+15, r13	; 0x0f
    1af4:	ce 86       	std	Y+14, r12	; 0x0e
    1af6:	33 20       	and	r3, r3
    1af8:	09 f4       	brne	.+2      	; 0x1afc <async+0x56>
    1afa:	6f c0       	rjmp	.+222    	; 0x1bda <async+0x134>
    1afc:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b00:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b04:	02 80       	ldd	r0, Z+2	; 0x02
    1b06:	f3 81       	ldd	r31, Z+3	; 0x03
    1b08:	e0 2d       	mov	r30, r0
    1b0a:	c2 80       	ldd	r12, Z+2	; 0x02
    1b0c:	d3 80       	ldd	r13, Z+3	; 0x03
    1b0e:	e4 80       	ldd	r14, Z+4	; 0x04
    1b10:	f5 80       	ldd	r15, Z+5	; 0x05
    1b12:	c6 0e       	add	r12, r22
    1b14:	d7 1e       	adc	r13, r23
    1b16:	e8 1e       	adc	r14, r24
    1b18:	f9 1e       	adc	r15, r25
    1b1a:	ca 82       	std	Y+2, r12	; 0x02
    1b1c:	db 82       	std	Y+3, r13	; 0x03
    1b1e:	ec 82       	std	Y+4, r14	; 0x04
    1b20:	fd 82       	std	Y+5, r15	; 0x05
    1b22:	12 16       	cp	r1, r18
    1b24:	13 06       	cpc	r1, r19
    1b26:	14 06       	cpc	r1, r20
    1b28:	15 06       	cpc	r1, r21
    1b2a:	0c f0       	brlt	.+2      	; 0x1b2e <async+0x88>
    1b2c:	f8 c0       	rjmp	.+496    	; 0x1d1e <async+0x278>
    1b2e:	da 01       	movw	r26, r20
    1b30:	c9 01       	movw	r24, r18
    1b32:	8c 01       	movw	r16, r24
    1b34:	9d 01       	movw	r18, r26
    1b36:	0c 0d       	add	r16, r12
    1b38:	1d 1d       	adc	r17, r13
    1b3a:	2e 1d       	adc	r18, r14
    1b3c:	3f 1d       	adc	r19, r15
    1b3e:	0e 83       	std	Y+6, r16	; 0x06
    1b40:	1f 83       	std	Y+7, r17	; 0x07
    1b42:	28 87       	std	Y+8, r18	; 0x08
    1b44:	39 87       	std	Y+9, r19	; 0x09
    1b46:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1b4a:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1b4e:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b52:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b56:	b0 99       	sbic	0x16, 0	; 22
    1b58:	49 c0       	rjmp	.+146    	; 0x1bec <async+0x146>
    1b5a:	2c 01       	movw	r4, r24
    1b5c:	09 2e       	mov	r0, r25
    1b5e:	00 0c       	add	r0, r0
    1b60:	66 08       	sbc	r6, r6
    1b62:	77 08       	sbc	r7, r7
    1b64:	52 01       	movw	r10, r4
    1b66:	99 24       	eor	r9, r9
    1b68:	88 24       	eor	r8, r8
    1b6a:	2b 01       	movw	r4, r22
    1b6c:	61 2c       	mov	r6, r1
    1b6e:	71 2c       	mov	r7, r1
    1b70:	48 28       	or	r4, r8
    1b72:	59 28       	or	r5, r9
    1b74:	6a 28       	or	r6, r10
    1b76:	7b 28       	or	r7, r11
    1b78:	b7 01       	movw	r22, r14
    1b7a:	a6 01       	movw	r20, r12
    1b7c:	44 19       	sub	r20, r4
    1b7e:	55 09       	sbc	r21, r5
    1b80:	66 09       	sbc	r22, r6
    1b82:	77 09       	sbc	r23, r7
    1b84:	14 16       	cp	r1, r20
    1b86:	15 06       	cpc	r1, r21
    1b88:	16 06       	cpc	r1, r22
    1b8a:	17 06       	cpc	r1, r23
    1b8c:	0c f0       	brlt	.+2      	; 0x1b90 <async+0xea>
    1b8e:	68 c0       	rjmp	.+208    	; 0x1c60 <async+0x1ba>
    1b90:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <timerQ>
    1b94:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <timerQ+0x1>
    1b98:	10 97       	sbiw	r26, 0x00	; 0
    1b9a:	09 f4       	brne	.+2      	; 0x1b9e <async+0xf8>
    1b9c:	dc c0       	rjmp	.+440    	; 0x1d56 <async+0x2b0>
    1b9e:	12 96       	adiw	r26, 0x02	; 2
    1ba0:	0d 91       	ld	r16, X+
    1ba2:	1d 91       	ld	r17, X+
    1ba4:	2d 91       	ld	r18, X+
    1ba6:	3c 91       	ld	r19, X
    1ba8:	15 97       	sbiw	r26, 0x05	; 5
    1baa:	c0 16       	cp	r12, r16
    1bac:	d1 06       	cpc	r13, r17
    1bae:	e2 06       	cpc	r14, r18
    1bb0:	f3 06       	cpc	r15, r19
    1bb2:	5c f4       	brge	.+22     	; 0x1bca <async+0x124>
    1bb4:	d0 c0       	rjmp	.+416    	; 0x1d56 <async+0x2b0>
    1bb6:	42 81       	ldd	r20, Z+2	; 0x02
    1bb8:	53 81       	ldd	r21, Z+3	; 0x03
    1bba:	64 81       	ldd	r22, Z+4	; 0x04
    1bbc:	75 81       	ldd	r23, Z+5	; 0x05
    1bbe:	c4 16       	cp	r12, r20
    1bc0:	d5 06       	cpc	r13, r21
    1bc2:	e6 06       	cpc	r14, r22
    1bc4:	f7 06       	cpc	r15, r23
    1bc6:	4c f1       	brlt	.+82     	; 0x1c1a <async+0x174>
    1bc8:	df 01       	movw	r26, r30
    1bca:	ed 91       	ld	r30, X+
    1bcc:	fc 91       	ld	r31, X
    1bce:	11 97       	sbiw	r26, 0x01	; 1
    1bd0:	30 97       	sbiw	r30, 0x00	; 0
    1bd2:	89 f7       	brne	.-30     	; 0x1bb6 <async+0x110>
    1bd4:	19 82       	std	Y+1, r1	; 0x01
    1bd6:	18 82       	st	Y, r1
    1bd8:	22 c0       	rjmp	.+68     	; 0x1c1e <async+0x178>
    1bda:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <timestamp>
    1bde:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <timestamp+0x1>
    1be2:	e0 90 38 01 	lds	r14, 0x0138	; 0x800138 <timestamp+0x2>
    1be6:	f0 90 39 01 	lds	r15, 0x0139	; 0x800139 <timestamp+0x3>
    1bea:	93 cf       	rjmp	.-218    	; 0x1b12 <async+0x6c>
    1bec:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bf0:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bf4:	2c 01       	movw	r4, r24
    1bf6:	4f ef       	ldi	r20, 0xFF	; 255
    1bf8:	44 1a       	sub	r4, r20
    1bfa:	54 0a       	sbc	r5, r20
    1bfc:	05 2c       	mov	r0, r5
    1bfe:	00 0c       	add	r0, r0
    1c00:	66 08       	sbc	r6, r6
    1c02:	77 08       	sbc	r7, r7
    1c04:	b2 01       	movw	r22, r4
    1c06:	55 27       	eor	r21, r21
    1c08:	44 27       	eor	r20, r20
    1c0a:	2f 01       	movw	r4, r30
    1c0c:	61 2c       	mov	r6, r1
    1c0e:	71 2c       	mov	r7, r1
    1c10:	44 2a       	or	r4, r20
    1c12:	55 2a       	or	r5, r21
    1c14:	66 2a       	or	r6, r22
    1c16:	77 2a       	or	r7, r23
    1c18:	af cf       	rjmp	.-162    	; 0x1b78 <async+0xd2>
    1c1a:	f9 83       	std	Y+1, r31	; 0x01
    1c1c:	e8 83       	st	Y, r30
    1c1e:	cd 93       	st	X+, r28
    1c20:	dc 93       	st	X, r29
    1c22:	82 17       	cp	r24, r18
    1c24:	93 07       	cpc	r25, r19
    1c26:	09 f4       	brne	.+2      	; 0x1c2a <async+0x184>
    1c28:	7f c0       	rjmp	.+254    	; 0x1d28 <async+0x282>
    1c2a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c2e:	8d 7f       	andi	r24, 0xFD	; 253
    1c30:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c34:	33 20       	and	r3, r3
    1c36:	09 f0       	breq	.+2      	; 0x1c3a <async+0x194>
    1c38:	78 94       	sei
    1c3a:	ce 01       	movw	r24, r28
    1c3c:	df 91       	pop	r29
    1c3e:	cf 91       	pop	r28
    1c40:	1f 91       	pop	r17
    1c42:	0f 91       	pop	r16
    1c44:	ff 90       	pop	r15
    1c46:	ef 90       	pop	r14
    1c48:	df 90       	pop	r13
    1c4a:	cf 90       	pop	r12
    1c4c:	bf 90       	pop	r11
    1c4e:	af 90       	pop	r10
    1c50:	9f 90       	pop	r9
    1c52:	8f 90       	pop	r8
    1c54:	7f 90       	pop	r7
    1c56:	6f 90       	pop	r6
    1c58:	5f 90       	pop	r5
    1c5a:	4f 90       	pop	r4
    1c5c:	3f 90       	pop	r3
    1c5e:	08 95       	ret
    1c60:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <msgQ>
    1c64:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <msgQ+0x1>
    1c68:	10 97       	sbiw	r26, 0x00	; 0
    1c6a:	09 f4       	brne	.+2      	; 0x1c6e <async+0x1c8>
    1c6c:	83 c0       	rjmp	.+262    	; 0x1d74 <async+0x2ce>
    1c6e:	16 96       	adiw	r26, 0x06	; 6
    1c70:	cd 90       	ld	r12, X+
    1c72:	dd 90       	ld	r13, X+
    1c74:	ed 90       	ld	r14, X+
    1c76:	fc 90       	ld	r15, X
    1c78:	19 97       	sbiw	r26, 0x09	; 9
    1c7a:	0c 15       	cp	r16, r12
    1c7c:	1d 05       	cpc	r17, r13
    1c7e:	2e 05       	cpc	r18, r14
    1c80:	3f 05       	cpc	r19, r15
    1c82:	64 f4       	brge	.+24     	; 0x1c9c <async+0x1f6>
    1c84:	77 c0       	rjmp	.+238    	; 0x1d74 <async+0x2ce>
    1c86:	c6 80       	ldd	r12, Z+6	; 0x06
    1c88:	d7 80       	ldd	r13, Z+7	; 0x07
    1c8a:	e0 84       	ldd	r14, Z+8	; 0x08
    1c8c:	f1 84       	ldd	r15, Z+9	; 0x09
    1c8e:	0c 15       	cp	r16, r12
    1c90:	1d 05       	cpc	r17, r13
    1c92:	2e 05       	cpc	r18, r14
    1c94:	3f 05       	cpc	r19, r15
    1c96:	0c f4       	brge	.+2      	; 0x1c9a <async+0x1f4>
    1c98:	5b c0       	rjmp	.+182    	; 0x1d50 <async+0x2aa>
    1c9a:	df 01       	movw	r26, r30
    1c9c:	ed 91       	ld	r30, X+
    1c9e:	fc 91       	ld	r31, X
    1ca0:	11 97       	sbiw	r26, 0x01	; 1
    1ca2:	30 97       	sbiw	r30, 0x00	; 0
    1ca4:	81 f7       	brne	.-32     	; 0x1c86 <async+0x1e0>
    1ca6:	19 82       	std	Y+1, r1	; 0x01
    1ca8:	18 82       	st	Y, r1
    1caa:	cd 93       	st	X+, r28
    1cac:	dc 93       	st	X, r29
    1cae:	33 20       	and	r3, r3
    1cb0:	21 f2       	breq	.-120    	; 0x1c3a <async+0x194>
    1cb2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1cb6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1cba:	00 97       	sbiw	r24, 0x00	; 0
    1cbc:	09 f4       	brne	.+2      	; 0x1cc0 <async+0x21a>
    1cbe:	bc cf       	rjmp	.-136    	; 0x1c38 <async+0x192>
    1cc0:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1cc4:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1cc8:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <msgQ>
    1ccc:	30 91 3d 01 	lds	r19, 0x013D	; 0x80013d <msgQ+0x1>
    1cd0:	02 81       	ldd	r16, Z+2	; 0x02
    1cd2:	13 81       	ldd	r17, Z+3	; 0x03
    1cd4:	d9 01       	movw	r26, r18
    1cd6:	16 96       	adiw	r26, 0x06	; 6
    1cd8:	4d 91       	ld	r20, X+
    1cda:	5d 91       	ld	r21, X+
    1cdc:	6d 91       	ld	r22, X+
    1cde:	7c 91       	ld	r23, X
    1ce0:	19 97       	sbiw	r26, 0x09	; 9
    1ce2:	d8 01       	movw	r26, r16
    1ce4:	16 96       	adiw	r26, 0x06	; 6
    1ce6:	0d 91       	ld	r16, X+
    1ce8:	1d 91       	ld	r17, X+
    1cea:	2d 91       	ld	r18, X+
    1cec:	3c 91       	ld	r19, X
    1cee:	19 97       	sbiw	r26, 0x09	; 9
    1cf0:	40 1b       	sub	r20, r16
    1cf2:	51 0b       	sbc	r21, r17
    1cf4:	62 0b       	sbc	r22, r18
    1cf6:	73 0b       	sbc	r23, r19
    1cf8:	77 ff       	sbrs	r23, 7
    1cfa:	9e cf       	rjmp	.-196    	; 0x1c38 <async+0x192>
    1cfc:	dc 01       	movw	r26, r24
    1cfe:	2d 91       	ld	r18, X+
    1d00:	3c 91       	ld	r19, X
    1d02:	11 97       	sbiw	r26, 0x01	; 1
    1d04:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1d08:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1d0c:	ed 93       	st	X+, r30
    1d0e:	fc 93       	st	X, r31
    1d10:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1d14:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1d18:	0e 94 0d 04 	call	0x81a	; 0x81a <dispatch>
    1d1c:	8d cf       	rjmp	.-230    	; 0x1c38 <async+0x192>
    1d1e:	8f ef       	ldi	r24, 0xFF	; 255
    1d20:	9f ef       	ldi	r25, 0xFF	; 255
    1d22:	af ef       	ldi	r26, 0xFF	; 255
    1d24:	bf e7       	ldi	r27, 0x7F	; 127
    1d26:	05 cf       	rjmp	.-502    	; 0x1b32 <async+0x8c>
    1d28:	c8 01       	movw	r24, r16
    1d2a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d2e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d32:	04 1b       	sub	r16, r20
    1d34:	15 0b       	sbc	r17, r21
    1d36:	01 30       	cpi	r16, 0x01	; 1
    1d38:	11 05       	cpc	r17, r1
    1d3a:	b1 f0       	breq	.+44     	; 0x1d68 <async+0x2c2>
    1d3c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d40:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d44:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1d48:	82 60       	ori	r24, 0x02	; 2
    1d4a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1d4e:	72 cf       	rjmp	.-284    	; 0x1c34 <async+0x18e>
    1d50:	f9 83       	std	Y+1, r31	; 0x01
    1d52:	e8 83       	st	Y, r30
    1d54:	aa cf       	rjmp	.-172    	; 0x1caa <async+0x204>
    1d56:	b9 83       	std	Y+1, r27	; 0x01
    1d58:	a8 83       	st	Y, r26
    1d5a:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    1d5e:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    1d62:	97 01       	movw	r18, r14
    1d64:	86 01       	movw	r16, r12
    1d66:	5d cf       	rjmp	.-326    	; 0x1c22 <async+0x17c>
    1d68:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d6c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d70:	01 96       	adiw	r24, 0x01	; 1
    1d72:	e4 cf       	rjmp	.-56     	; 0x1d3c <async+0x296>
    1d74:	b9 83       	std	Y+1, r27	; 0x01
    1d76:	a8 83       	st	Y, r26
    1d78:	d0 93 3d 01 	sts	0x013D, r29	; 0x80013d <msgQ+0x1>
    1d7c:	c0 93 3c 01 	sts	0x013C, r28	; 0x80013c <msgQ>
    1d80:	96 cf       	rjmp	.-212    	; 0x1cae <async+0x208>
    1d82:	0e 94 6d 04 	call	0x8da	; 0x8da <dequeue.part.0>

00001d86 <sync>:
    1d86:	cf 92       	push	r12
    1d88:	df 92       	push	r13
    1d8a:	ef 92       	push	r14
    1d8c:	ff 92       	push	r15
    1d8e:	0f 93       	push	r16
    1d90:	1f 93       	push	r17
    1d92:	cf 93       	push	r28
    1d94:	df 93       	push	r29
    1d96:	ec 01       	movw	r28, r24
    1d98:	7b 01       	movw	r14, r22
    1d9a:	6a 01       	movw	r12, r20
    1d9c:	1f b7       	in	r17, 0x3f	; 63
    1d9e:	10 78       	andi	r17, 0x80	; 128
    1da0:	f8 94       	cli
    1da2:	a8 81       	ld	r26, Y
    1da4:	b9 81       	ldd	r27, Y+1	; 0x01
    1da6:	10 97       	sbiw	r26, 0x00	; 0
    1da8:	19 f4       	brne	.+6      	; 0x1db0 <sync+0x2a>
    1daa:	62 c0       	rjmp	.+196    	; 0x1e70 <sync+0xea>
    1dac:	a0 81       	ld	r26, Z
    1dae:	b1 81       	ldd	r27, Z+1	; 0x01
    1db0:	14 96       	adiw	r26, 0x04	; 4
    1db2:	ed 91       	ld	r30, X+
    1db4:	fc 91       	ld	r31, X
    1db6:	15 97       	sbiw	r26, 0x05	; 5
    1db8:	30 97       	sbiw	r30, 0x00	; 0
    1dba:	c1 f7       	brne	.-16     	; 0x1dac <sync+0x26>
    1dbc:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1dc0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dc4:	2a 17       	cp	r18, r26
    1dc6:	3b 07       	cpc	r19, r27
    1dc8:	09 f4       	brne	.+2      	; 0x1dcc <sync+0x46>
    1dca:	4c c0       	rjmp	.+152    	; 0x1e64 <sync+0xde>
    1dcc:	11 23       	and	r17, r17
    1dce:	a1 f1       	breq	.+104    	; 0x1e38 <sync+0xb2>
    1dd0:	8a 81       	ldd	r24, Y+2	; 0x02
    1dd2:	9b 81       	ldd	r25, Y+3	; 0x03
    1dd4:	00 97       	sbiw	r24, 0x00	; 0
    1dd6:	19 f0       	breq	.+6      	; 0x1dde <sync+0x58>
    1dd8:	fc 01       	movw	r30, r24
    1dda:	15 82       	std	Z+5, r1	; 0x05
    1ddc:	14 82       	std	Z+4, r1	; 0x04
    1dde:	3b 83       	std	Y+3, r19	; 0x03
    1de0:	2a 83       	std	Y+2, r18	; 0x02
    1de2:	f9 01       	movw	r30, r18
    1de4:	d5 83       	std	Z+5, r29	; 0x05
    1de6:	c4 83       	std	Z+4, r28	; 0x04
    1de8:	cd 01       	movw	r24, r26
    1dea:	0e 94 0d 04 	call	0x81a	; 0x81a <dispatch>
    1dee:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1df2:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1df6:	82 81       	ldd	r24, Z+2	; 0x02
    1df8:	93 81       	ldd	r25, Z+3	; 0x03
    1dfa:	89 2b       	or	r24, r25
    1dfc:	09 f4       	brne	.+2      	; 0x1e00 <sync+0x7a>
    1dfe:	41 c0       	rjmp	.+130    	; 0x1e82 <sync+0xfc>
    1e00:	f9 83       	std	Y+1, r31	; 0x01
    1e02:	e8 83       	st	Y, r30
    1e04:	8a 81       	ldd	r24, Y+2	; 0x02
    1e06:	9b 81       	ldd	r25, Y+3	; 0x03
    1e08:	01 97       	sbiw	r24, 0x01	; 1
    1e0a:	09 f0       	breq	.+2      	; 0x1e0e <sync+0x88>
    1e0c:	78 94       	sei
    1e0e:	b6 01       	movw	r22, r12
    1e10:	ce 01       	movw	r24, r28
    1e12:	f7 01       	movw	r30, r14
    1e14:	09 95       	icall
    1e16:	f8 2e       	mov	r15, r24
    1e18:	09 2f       	mov	r16, r25
    1e1a:	8f b7       	in	r24, 0x3f	; 63
    1e1c:	f8 94       	cli
    1e1e:	19 82       	std	Y+1, r1	; 0x01
    1e20:	18 82       	st	Y, r1
    1e22:	8a 81       	ldd	r24, Y+2	; 0x02
    1e24:	9b 81       	ldd	r25, Y+3	; 0x03
    1e26:	82 30       	cpi	r24, 0x02	; 2
    1e28:	91 05       	cpc	r25, r1
    1e2a:	a0 f4       	brcc	.+40     	; 0x1e54 <sync+0xce>
    1e2c:	11 23       	and	r17, r17
    1e2e:	79 f0       	breq	.+30     	; 0x1e4e <sync+0xc8>
    1e30:	78 94       	sei
    1e32:	8f 2d       	mov	r24, r15
    1e34:	90 2f       	mov	r25, r16
    1e36:	02 c0       	rjmp	.+4      	; 0x1e3c <sync+0xb6>
    1e38:	8f ef       	ldi	r24, 0xFF	; 255
    1e3a:	9f ef       	ldi	r25, 0xFF	; 255
    1e3c:	df 91       	pop	r29
    1e3e:	cf 91       	pop	r28
    1e40:	1f 91       	pop	r17
    1e42:	0f 91       	pop	r16
    1e44:	ff 90       	pop	r15
    1e46:	ef 90       	pop	r14
    1e48:	df 90       	pop	r13
    1e4a:	cf 90       	pop	r12
    1e4c:	08 95       	ret
    1e4e:	8f 2d       	mov	r24, r15
    1e50:	90 2f       	mov	r25, r16
    1e52:	f4 cf       	rjmp	.-24     	; 0x1e3c <sync+0xb6>
    1e54:	1b 82       	std	Y+3, r1	; 0x03
    1e56:	1a 82       	std	Y+2, r1	; 0x02
    1e58:	fc 01       	movw	r30, r24
    1e5a:	15 82       	std	Z+5, r1	; 0x05
    1e5c:	14 82       	std	Z+4, r1	; 0x04
    1e5e:	0e 94 0d 04 	call	0x81a	; 0x81a <dispatch>
    1e62:	e4 cf       	rjmp	.-56     	; 0x1e2c <sync+0xa6>
    1e64:	11 23       	and	r17, r17
    1e66:	41 f3       	breq	.-48     	; 0x1e38 <sync+0xb2>
    1e68:	78 94       	sei
    1e6a:	8f ef       	ldi	r24, 0xFF	; 255
    1e6c:	9f ef       	ldi	r25, 0xFF	; 255
    1e6e:	e6 cf       	rjmp	.-52     	; 0x1e3c <sync+0xb6>
    1e70:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e74:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e78:	99 83       	std	Y+1, r25	; 0x01
    1e7a:	88 83       	st	Y, r24
    1e7c:	11 23       	and	r17, r17
    1e7e:	39 f2       	breq	.-114    	; 0x1e0e <sync+0x88>
    1e80:	c1 cf       	rjmp	.-126    	; 0x1e04 <sync+0x7e>
    1e82:	78 94       	sei
    1e84:	80 e0       	ldi	r24, 0x00	; 0
    1e86:	90 e0       	ldi	r25, 0x00	; 0
    1e88:	d9 cf       	rjmp	.-78     	; 0x1e3c <sync+0xb6>

00001e8a <run>:
    1e8a:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1e8e:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1e92:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e96:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e9a:	20 97       	sbiw	r28, 0x00	; 0
    1e9c:	09 f4       	brne	.+2      	; 0x1ea0 <run+0x16>
    1e9e:	6e c0       	rjmp	.+220    	; 0x1f7c <run+0xf2>
    1ea0:	88 81       	ld	r24, Y
    1ea2:	99 81       	ldd	r25, Y+1	; 0x01
    1ea4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    1ea8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    1eac:	d3 83       	std	Z+3, r29	; 0x03
    1eae:	c2 83       	std	Z+2, r28	; 0x02
    1eb0:	78 94       	sei
    1eb2:	4e 85       	ldd	r20, Y+14	; 0x0e
    1eb4:	5f 85       	ldd	r21, Y+15	; 0x0f
    1eb6:	6c 85       	ldd	r22, Y+12	; 0x0c
    1eb8:	7d 85       	ldd	r23, Y+13	; 0x0d
    1eba:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ebc:	9b 85       	ldd	r25, Y+11	; 0x0b
    1ebe:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <sync>
    1ec2:	8f b7       	in	r24, 0x3f	; 63
    1ec4:	f8 94       	cli
    1ec6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1eca:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1ece:	99 83       	std	Y+1, r25	; 0x01
    1ed0:	88 83       	st	Y, r24
    1ed2:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    1ed6:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    1eda:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <activeStack>
    1ede:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <activeStack+0x1>
    1ee2:	f7 01       	movw	r30, r14
    1ee4:	a0 81       	ld	r26, Z
    1ee6:	b1 81       	ldd	r27, Z+1	; 0x01
    1ee8:	12 96       	adiw	r26, 0x02	; 2
    1eea:	8d 91       	ld	r24, X+
    1eec:	9c 91       	ld	r25, X
    1eee:	13 97       	sbiw	r26, 0x03	; 3
    1ef0:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1ef4:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1ef8:	20 97       	sbiw	r28, 0x00	; 0
    1efa:	a9 f0       	breq	.+42     	; 0x1f26 <run+0x9c>
    1efc:	00 97       	sbiw	r24, 0x00	; 0
    1efe:	49 f2       	breq	.-110    	; 0x1e92 <run+0x8>
    1f00:	4e 81       	ldd	r20, Y+6	; 0x06
    1f02:	5f 81       	ldd	r21, Y+7	; 0x07
    1f04:	68 85       	ldd	r22, Y+8	; 0x08
    1f06:	79 85       	ldd	r23, Y+9	; 0x09
    1f08:	fc 01       	movw	r30, r24
    1f0a:	06 81       	ldd	r16, Z+6	; 0x06
    1f0c:	17 81       	ldd	r17, Z+7	; 0x07
    1f0e:	20 85       	ldd	r18, Z+8	; 0x08
    1f10:	31 85       	ldd	r19, Z+9	; 0x09
    1f12:	40 1b       	sub	r20, r16
    1f14:	51 0b       	sbc	r21, r17
    1f16:	62 0b       	sbc	r22, r18
    1f18:	73 0b       	sbc	r23, r19
    1f1a:	14 16       	cp	r1, r20
    1f1c:	15 06       	cpc	r1, r21
    1f1e:	16 06       	cpc	r1, r22
    1f20:	17 06       	cpc	r1, r23
    1f22:	0c f0       	brlt	.+2      	; 0x1f26 <run+0x9c>
    1f24:	b6 cf       	rjmp	.-148    	; 0x1e92 <run+0x8>
    1f26:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <activeStack+0x1>
    1f2a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <activeStack>
    1f2e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1f32:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1f36:	f7 01       	movw	r30, r14
    1f38:	91 83       	std	Z+1, r25	; 0x01
    1f3a:	80 83       	st	Z, r24
    1f3c:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <threadPool+0x1>
    1f40:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <threadPool>
    1f44:	14 96       	adiw	r26, 0x04	; 4
    1f46:	ed 91       	ld	r30, X+
    1f48:	fc 91       	ld	r31, X
    1f4a:	15 97       	sbiw	r26, 0x05	; 5
    1f4c:	30 97       	sbiw	r30, 0x00	; 0
    1f4e:	41 f0       	breq	.+16     	; 0x1f60 <run+0xd6>
    1f50:	a0 81       	ld	r26, Z
    1f52:	b1 81       	ldd	r27, Z+1	; 0x01
    1f54:	14 96       	adiw	r26, 0x04	; 4
    1f56:	ed 91       	ld	r30, X+
    1f58:	fc 91       	ld	r31, X
    1f5a:	15 97       	sbiw	r26, 0x05	; 5
    1f5c:	30 97       	sbiw	r30, 0x00	; 0
    1f5e:	c1 f7       	brne	.-16     	; 0x1f50 <run+0xc6>
    1f60:	cd 01       	movw	r24, r26
    1f62:	0e 94 0d 04 	call	0x81a	; 0x81a <dispatch>
    1f66:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1f6a:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1f6e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f72:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f76:	20 97       	sbiw	r28, 0x00	; 0
    1f78:	09 f0       	breq	.+2      	; 0x1f7c <run+0xf2>
    1f7a:	92 cf       	rjmp	.-220    	; 0x1ea0 <run+0x16>
    1f7c:	0e 94 6d 04 	call	0x8da	; 0x8da <dequeue.part.0>

00001f80 <ABORT>:
    1f80:	cf 93       	push	r28
    1f82:	df 93       	push	r29
    1f84:	dc 01       	movw	r26, r24
    1f86:	4f b7       	in	r20, 0x3f	; 63
    1f88:	40 78       	andi	r20, 0x80	; 128
    1f8a:	f8 94       	cli
    1f8c:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    1f90:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    1f94:	20 97       	sbiw	r28, 0x00	; 0
    1f96:	69 f0       	breq	.+26     	; 0x1fb2 <ABORT+0x32>
    1f98:	8c 17       	cp	r24, r28
    1f9a:	9d 07       	cpc	r25, r29
    1f9c:	31 f4       	brne	.+12     	; 0x1faa <ABORT+0x2a>
    1f9e:	6c c0       	rjmp	.+216    	; 0x2078 <ABORT+0xf8>
    1fa0:	ae 17       	cp	r26, r30
    1fa2:	bf 07       	cpc	r27, r31
    1fa4:	09 f4       	brne	.+2      	; 0x1fa8 <ABORT+0x28>
    1fa6:	47 c0       	rjmp	.+142    	; 0x2036 <ABORT+0xb6>
    1fa8:	ef 01       	movw	r28, r30
    1faa:	e8 81       	ld	r30, Y
    1fac:	f9 81       	ldd	r31, Y+1	; 0x01
    1fae:	30 97       	sbiw	r30, 0x00	; 0
    1fb0:	b9 f7       	brne	.-18     	; 0x1fa0 <ABORT+0x20>
    1fb2:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1fb6:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1fba:	20 97       	sbiw	r28, 0x00	; 0
    1fbc:	69 f0       	breq	.+26     	; 0x1fd8 <ABORT+0x58>
    1fbe:	ac 17       	cp	r26, r28
    1fc0:	bd 07       	cpc	r27, r29
    1fc2:	31 f4       	brne	.+12     	; 0x1fd0 <ABORT+0x50>
    1fc4:	61 c0       	rjmp	.+194    	; 0x2088 <ABORT+0x108>
    1fc6:	ae 17       	cp	r26, r30
    1fc8:	bf 07       	cpc	r27, r31
    1fca:	09 f4       	brne	.+2      	; 0x1fce <ABORT+0x4e>
    1fcc:	4c c0       	rjmp	.+152    	; 0x2066 <ABORT+0xe6>
    1fce:	ef 01       	movw	r28, r30
    1fd0:	e8 81       	ld	r30, Y
    1fd2:	f9 81       	ldd	r31, Y+1	; 0x01
    1fd4:	30 97       	sbiw	r30, 0x00	; 0
    1fd6:	b9 f7       	brne	.-18     	; 0x1fc6 <ABORT+0x46>
    1fd8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1fdc:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1fe0:	30 97       	sbiw	r30, 0x00	; 0
    1fe2:	d9 f1       	breq	.+118    	; 0x205a <ABORT+0xda>
    1fe4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fe8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fec:	05 c0       	rjmp	.+10     	; 0x1ff8 <ABORT+0x78>
    1fee:	01 90       	ld	r0, Z+
    1ff0:	f0 81       	ld	r31, Z
    1ff2:	e0 2d       	mov	r30, r0
    1ff4:	30 97       	sbiw	r30, 0x00	; 0
    1ff6:	89 f1       	breq	.+98     	; 0x205a <ABORT+0xda>
    1ff8:	e2 17       	cp	r30, r18
    1ffa:	f3 07       	cpc	r31, r19
    1ffc:	c1 f3       	breq	.-16     	; 0x1fee <ABORT+0x6e>
    1ffe:	82 81       	ldd	r24, Z+2	; 0x02
    2000:	93 81       	ldd	r25, Z+3	; 0x03
    2002:	a8 17       	cp	r26, r24
    2004:	b9 07       	cpc	r27, r25
    2006:	99 f7       	brne	.-26     	; 0x1fee <ABORT+0x6e>
    2008:	64 81       	ldd	r22, Z+4	; 0x04
    200a:	75 81       	ldd	r23, Z+5	; 0x05
    200c:	1a 96       	adiw	r26, 0x0a	; 10
    200e:	8d 91       	ld	r24, X+
    2010:	9c 91       	ld	r25, X
    2012:	1b 97       	sbiw	r26, 0x0b	; 11
    2014:	68 17       	cp	r22, r24
    2016:	79 07       	cpc	r23, r25
    2018:	51 f7       	brne	.-44     	; 0x1fee <ABORT+0x6e>
    201a:	13 82       	std	Z+3, r1	; 0x03
    201c:	12 82       	std	Z+2, r1	; 0x02
    201e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    2022:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    2026:	11 96       	adiw	r26, 0x01	; 1
    2028:	9c 93       	st	X, r25
    202a:	8e 93       	st	-X, r24
    202c:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    2030:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    2034:	12 c0       	rjmp	.+36     	; 0x205a <ABORT+0xda>
    2036:	20 97       	sbiw	r28, 0x00	; 0
    2038:	01 f1       	breq	.+64     	; 0x207a <ABORT+0xfa>
    203a:	8d 91       	ld	r24, X+
    203c:	9c 91       	ld	r25, X
    203e:	11 97       	sbiw	r26, 0x01	; 1
    2040:	99 83       	std	Y+1, r25	; 0x01
    2042:	88 83       	st	Y, r24
    2044:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    2048:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    204c:	11 96       	adiw	r26, 0x01	; 1
    204e:	9c 93       	st	X, r25
    2050:	8e 93       	st	-X, r24
    2052:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    2056:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    205a:	44 23       	and	r20, r20
    205c:	09 f0       	breq	.+2      	; 0x2060 <ABORT+0xe0>
    205e:	78 94       	sei
    2060:	df 91       	pop	r29
    2062:	cf 91       	pop	r28
    2064:	08 95       	ret
    2066:	20 97       	sbiw	r28, 0x00	; 0
    2068:	41 f7       	brne	.-48     	; 0x203a <ABORT+0xba>
    206a:	80 81       	ld	r24, Z
    206c:	91 81       	ldd	r25, Z+1	; 0x01
    206e:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    2072:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    2076:	e6 cf       	rjmp	.-52     	; 0x2044 <ABORT+0xc4>
    2078:	fc 01       	movw	r30, r24
    207a:	80 81       	ld	r24, Z
    207c:	91 81       	ldd	r25, Z+1	; 0x01
    207e:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timerQ+0x1>
    2082:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timerQ>
    2086:	de cf       	rjmp	.-68     	; 0x2044 <ABORT+0xc4>
    2088:	fd 01       	movw	r30, r26
    208a:	ef cf       	rjmp	.-34     	; 0x206a <ABORT+0xea>

0000208c <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    208c:	42 31       	cpi	r20, 0x12	; 18
    208e:	b8 f4       	brcc	.+46     	; 0x20be <install+0x32>
        char status;
        DISABLE(status);
    2090:	2f b7       	in	r18, 0x3f	; 63
    2092:	f8 94       	cli
        otable[i] = obj;
    2094:	50 e0       	ldi	r21, 0x00	; 0
    2096:	44 0f       	add	r20, r20
    2098:	55 1f       	adc	r21, r21
    209a:	fa 01       	movw	r30, r20
    209c:	ee 5b       	subi	r30, 0xBE	; 190
    209e:	fe 4f       	sbci	r31, 0xFE	; 254
    20a0:	91 83       	std	Z+1, r25	; 0x01
    20a2:	80 83       	st	Z, r24
        mtable[i] = m;
    20a4:	fa 01       	movw	r30, r20
    20a6:	e6 52       	subi	r30, 0x26	; 38
    20a8:	fe 4f       	sbci	r31, 0xFE	; 254
    20aa:	71 83       	std	Z+1, r23	; 0x01
    20ac:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    20ae:	41 e0       	ldi	r20, 0x01	; 1
    20b0:	50 e0       	ldi	r21, 0x00	; 0
    20b2:	fc 01       	movw	r30, r24
    20b4:	53 83       	std	Z+3, r21	; 0x03
    20b6:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    20b8:	27 ff       	sbrs	r18, 7
    20ba:	01 c0       	rjmp	.+2      	; 0x20be <install+0x32>
    20bc:	78 94       	sei
    20be:	08 95       	ret

000020c0 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    20c0:	8c 01       	movw	r16, r24
    20c2:	7b 01       	movw	r14, r22
    20c4:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    20c6:	8f b7       	in	r24, 0x3f	; 63
    20c8:	f8 94       	cli
    initialize();
    20ca:	0e 94 a2 03 	call	0x744	; 0x744 <initialize>
    ENABLE(1);
    20ce:	78 94       	sei
    if (m != NULL)
    20d0:	e1 14       	cp	r14, r1
    20d2:	f1 04       	cpc	r15, r1
    20d4:	41 f0       	breq	.+16     	; 0x20e6 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    20d6:	20 e0       	ldi	r18, 0x00	; 0
    20d8:	30 e0       	ldi	r19, 0x00	; 0
    20da:	a9 01       	movw	r20, r18
    20dc:	60 e0       	ldi	r22, 0x00	; 0
    20de:	70 e0       	ldi	r23, 0x00	; 0
    20e0:	cb 01       	movw	r24, r22
    20e2:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <async>
    DISABLE(status);
    20e6:	8f b7       	in	r24, 0x3f	; 63
    20e8:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    20ea:	0e 94 2d 04 	call	0x85a	; 0x85a <schedule>
    ENABLE(1);
    20ee:	78 94       	sei
    while (1) {
        SLEEP();
    20f0:	81 e0       	ldi	r24, 0x01	; 1
    20f2:	83 bf       	out	0x33, r24	; 51
    20f4:	88 95       	sleep
    20f6:	fd cf       	rjmp	.-6      	; 0x20f2 <tinytimber+0x32>

000020f8 <__divmodhi4>:
    20f8:	97 fb       	bst	r25, 7
    20fa:	07 2e       	mov	r0, r23
    20fc:	16 f4       	brtc	.+4      	; 0x2102 <__divmodhi4+0xa>
    20fe:	00 94       	com	r0
    2100:	07 d0       	rcall	.+14     	; 0x2110 <__divmodhi4_neg1>
    2102:	77 fd       	sbrc	r23, 7
    2104:	09 d0       	rcall	.+18     	; 0x2118 <__divmodhi4_neg2>
    2106:	0e 94 90 10 	call	0x2120	; 0x2120 <__udivmodhi4>
    210a:	07 fc       	sbrc	r0, 7
    210c:	05 d0       	rcall	.+10     	; 0x2118 <__divmodhi4_neg2>
    210e:	3e f4       	brtc	.+14     	; 0x211e <__divmodhi4_exit>

00002110 <__divmodhi4_neg1>:
    2110:	90 95       	com	r25
    2112:	81 95       	neg	r24
    2114:	9f 4f       	sbci	r25, 0xFF	; 255
    2116:	08 95       	ret

00002118 <__divmodhi4_neg2>:
    2118:	70 95       	com	r23
    211a:	61 95       	neg	r22
    211c:	7f 4f       	sbci	r23, 0xFF	; 255

0000211e <__divmodhi4_exit>:
    211e:	08 95       	ret

00002120 <__udivmodhi4>:
    2120:	aa 1b       	sub	r26, r26
    2122:	bb 1b       	sub	r27, r27
    2124:	51 e1       	ldi	r21, 0x11	; 17
    2126:	07 c0       	rjmp	.+14     	; 0x2136 <__udivmodhi4_ep>

00002128 <__udivmodhi4_loop>:
    2128:	aa 1f       	adc	r26, r26
    212a:	bb 1f       	adc	r27, r27
    212c:	a6 17       	cp	r26, r22
    212e:	b7 07       	cpc	r27, r23
    2130:	10 f0       	brcs	.+4      	; 0x2136 <__udivmodhi4_ep>
    2132:	a6 1b       	sub	r26, r22
    2134:	b7 0b       	sbc	r27, r23

00002136 <__udivmodhi4_ep>:
    2136:	88 1f       	adc	r24, r24
    2138:	99 1f       	adc	r25, r25
    213a:	5a 95       	dec	r21
    213c:	a9 f7       	brne	.-22     	; 0x2128 <__udivmodhi4_loop>
    213e:	80 95       	com	r24
    2140:	90 95       	com	r25
    2142:	bc 01       	movw	r22, r24
    2144:	cd 01       	movw	r24, r26
    2146:	08 95       	ret

00002148 <setjmp>:
    2148:	dc 01       	movw	r26, r24
    214a:	2d 92       	st	X+, r2
    214c:	3d 92       	st	X+, r3
    214e:	4d 92       	st	X+, r4
    2150:	5d 92       	st	X+, r5
    2152:	6d 92       	st	X+, r6
    2154:	7d 92       	st	X+, r7
    2156:	8d 92       	st	X+, r8
    2158:	9d 92       	st	X+, r9
    215a:	ad 92       	st	X+, r10
    215c:	bd 92       	st	X+, r11
    215e:	cd 92       	st	X+, r12
    2160:	dd 92       	st	X+, r13
    2162:	ed 92       	st	X+, r14
    2164:	fd 92       	st	X+, r15
    2166:	0d 93       	st	X+, r16
    2168:	1d 93       	st	X+, r17
    216a:	cd 93       	st	X+, r28
    216c:	dd 93       	st	X+, r29
    216e:	ff 91       	pop	r31
    2170:	ef 91       	pop	r30
    2172:	8d b7       	in	r24, 0x3d	; 61
    2174:	8d 93       	st	X+, r24
    2176:	8e b7       	in	r24, 0x3e	; 62
    2178:	8d 93       	st	X+, r24
    217a:	8f b7       	in	r24, 0x3f	; 63
    217c:	8d 93       	st	X+, r24
    217e:	ed 93       	st	X+, r30
    2180:	fd 93       	st	X+, r31
    2182:	88 27       	eor	r24, r24
    2184:	99 27       	eor	r25, r25
    2186:	09 94       	ijmp

00002188 <longjmp>:
    2188:	dc 01       	movw	r26, r24
    218a:	cb 01       	movw	r24, r22
    218c:	81 30       	cpi	r24, 0x01	; 1
    218e:	91 05       	cpc	r25, r1
    2190:	81 1d       	adc	r24, r1
    2192:	2d 90       	ld	r2, X+
    2194:	3d 90       	ld	r3, X+
    2196:	4d 90       	ld	r4, X+
    2198:	5d 90       	ld	r5, X+
    219a:	6d 90       	ld	r6, X+
    219c:	7d 90       	ld	r7, X+
    219e:	8d 90       	ld	r8, X+
    21a0:	9d 90       	ld	r9, X+
    21a2:	ad 90       	ld	r10, X+
    21a4:	bd 90       	ld	r11, X+
    21a6:	cd 90       	ld	r12, X+
    21a8:	dd 90       	ld	r13, X+
    21aa:	ed 90       	ld	r14, X+
    21ac:	fd 90       	ld	r15, X+
    21ae:	0d 91       	ld	r16, X+
    21b0:	1d 91       	ld	r17, X+
    21b2:	cd 91       	ld	r28, X+
    21b4:	dd 91       	ld	r29, X+
    21b6:	ed 91       	ld	r30, X+
    21b8:	fd 91       	ld	r31, X+
    21ba:	0d 90       	ld	r0, X+
    21bc:	f8 94       	cli
    21be:	fe bf       	out	0x3e, r31	; 62
    21c0:	0f be       	out	0x3f, r0	; 63
    21c2:	ed bf       	out	0x3d, r30	; 61
    21c4:	ed 91       	ld	r30, X+
    21c6:	fd 91       	ld	r31, X+
    21c8:	09 94       	ijmp

000021ca <_exit>:
    21ca:	f8 94       	cli

000021cc <__stop_program>:
    21cc:	ff cf       	rjmp	.-2      	; 0x21cc <__stop_program>
