
D0003E-Lab5-Traffic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  000021e0  00002274  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800134  00800134  000022a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000022a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  00002318  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002dcb  00000000  00000000  00002570  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011e5  00000000  00000000  0000533b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001697  00000000  00000000  00006520  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c14  00000000  00000000  00007bb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000998  00000000  00000000  000087cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002f80  00000000  00000000  00009164  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f0  00000000  00000000  0000c0e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 81 04 	jmp	0x902	; 0x902 <__vector_1>
       8:	0c 94 ed 04 	jmp	0x9da	; 0x9da <__vector_2>
       c:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__vector_3>
      10:	0c 94 c5 05 	jmp	0xb8a	; 0xb8a <__vector_4>
      14:	0c 94 31 06 	jmp	0xc62	; 0xc62 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 6c 0c 	jmp	0x18d8	; 0x18d8 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 19 0c 	jmp	0x1832	; 0x1832 <__vector_9>
      28:	0c 94 9d 06 	jmp	0xd3a	; 0xd3a <__vector_10>
      2c:	0c 94 09 07 	jmp	0xe12	; 0xe12 <__vector_11>
      30:	0c 94 75 07 	jmp	0xeea	; 0xeea <__vector_12>
      34:	0c 94 e1 07 	jmp	0xfc2	; 0xfc2 <__vector_13>
      38:	0c 94 4d 08 	jmp	0x109a	; 0x109a <__vector_14>
      3c:	0c 94 b9 08 	jmp	0x1172	; 0x1172 <__vector_15>
      40:	0c 94 25 09 	jmp	0x124a	; 0x124a <__vector_16>
      44:	0c 94 91 09 	jmp	0x1322	; 0x1322 <__vector_17>
      48:	0c 94 fd 09 	jmp	0x13fa	; 0x13fa <__vector_18>
      4c:	0c 94 69 0a 	jmp	0x14d2	; 0x14d2 <__vector_19>
      50:	0c 94 d5 0a 	jmp	0x15aa	; 0x15aa <__vector_20>
      54:	0c 94 41 0b 	jmp	0x1682	; 0x1682 <__vector_21>
      58:	0c 94 ad 0b 	jmp	0x175a	; 0x175a <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e0 ee       	ldi	r30, 0xE0	; 224
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a4 33       	cpi	r26, 0x34	; 52
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a4 e3       	ldi	r26, 0x34	; 52
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 61 03 	call	0x6c2	; 0x6c2 <main>
      92:	0c 94 ee 10 	jmp	0x21dc	; 0x21dc <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <transmit>:

#include <avr/io.h>
#include "Communication.h"

int transmit(Communication *self, int data){
	while ( !(UCSR0A & (1<<UDRE0)) );
      9a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
      9e:	85 ff       	sbrs	r24, 5
      a0:	fc cf       	rjmp	.-8      	; 0x9a <transmit>
	UDR0 = data;
      a2:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
      a6:	08 95       	ret

000000a8 <updateDisplay>:
#include <avr/io.h>

Msg test;
Msg teste;

int updateDisplay(Handler *self) {
      a8:	cf 92       	push	r12
      aa:	df 92       	push	r13
      ac:	ef 92       	push	r14
      ae:	ff 92       	push	r15
      b0:	0f 93       	push	r16
      b2:	1f 93       	push	r17
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
      b8:	ec 01       	movw	r28, r24
	ASYNC(self->lcd, printAt, self->northQueue * 10);
      ba:	8c 85       	ldd	r24, Y+12	; 0x0c
      bc:	9d 85       	ldd	r25, Y+13	; 0x0d
      be:	6c 01       	movw	r12, r24
      c0:	cc 0c       	add	r12, r12
      c2:	dd 1c       	adc	r13, r13
      c4:	88 0f       	add	r24, r24
      c6:	99 1f       	adc	r25, r25
      c8:	88 0f       	add	r24, r24
      ca:	99 1f       	adc	r25, r25
      cc:	88 0f       	add	r24, r24
      ce:	99 1f       	adc	r25, r25
      d0:	c8 0e       	add	r12, r24
      d2:	d9 1e       	adc	r13, r25
      d4:	0e 81       	ldd	r16, Y+6	; 0x06
      d6:	1f 81       	ldd	r17, Y+7	; 0x07
      d8:	44 e3       	ldi	r20, 0x34	; 52
      da:	e4 2e       	mov	r14, r20
      dc:	43 e0       	ldi	r20, 0x03	; 3
      de:	f4 2e       	mov	r15, r20
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	a9 01       	movw	r20, r18
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	cb 01       	movw	r24, r22
      ec:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
	ASYNC(self->lcd, printAt, self->onBridge * 10 + 2);
      f0:	8e 85       	ldd	r24, Y+14	; 0x0e
      f2:	9f 85       	ldd	r25, Y+15	; 0x0f
      f4:	6c 01       	movw	r12, r24
      f6:	cc 0c       	add	r12, r12
      f8:	dd 1c       	adc	r13, r13
      fa:	88 0f       	add	r24, r24
      fc:	99 1f       	adc	r25, r25
      fe:	88 0f       	add	r24, r24
     100:	99 1f       	adc	r25, r25
     102:	88 0f       	add	r24, r24
     104:	99 1f       	adc	r25, r25
     106:	c8 0e       	add	r12, r24
     108:	d9 1e       	adc	r13, r25
     10a:	82 e0       	ldi	r24, 0x02	; 2
     10c:	c8 0e       	add	r12, r24
     10e:	d1 1c       	adc	r13, r1
     110:	0e 81       	ldd	r16, Y+6	; 0x06
     112:	1f 81       	ldd	r17, Y+7	; 0x07
     114:	20 e0       	ldi	r18, 0x00	; 0
     116:	30 e0       	ldi	r19, 0x00	; 0
     118:	a9 01       	movw	r20, r18
     11a:	60 e0       	ldi	r22, 0x00	; 0
     11c:	70 e0       	ldi	r23, 0x00	; 0
     11e:	cb 01       	movw	r24, r22
     120:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
	ASYNC(self->lcd, printAt, self->southQueue * 10 + 4);
     124:	8a 85       	ldd	r24, Y+10	; 0x0a
     126:	9b 85       	ldd	r25, Y+11	; 0x0b
     128:	6c 01       	movw	r12, r24
     12a:	cc 0c       	add	r12, r12
     12c:	dd 1c       	adc	r13, r13
     12e:	88 0f       	add	r24, r24
     130:	99 1f       	adc	r25, r25
     132:	88 0f       	add	r24, r24
     134:	99 1f       	adc	r25, r25
     136:	88 0f       	add	r24, r24
     138:	99 1f       	adc	r25, r25
     13a:	c8 0e       	add	r12, r24
     13c:	d9 1e       	adc	r13, r25
     13e:	84 e0       	ldi	r24, 0x04	; 4
     140:	c8 0e       	add	r12, r24
     142:	d1 1c       	adc	r13, r1
     144:	0e 81       	ldd	r16, Y+6	; 0x06
     146:	1f 81       	ldd	r17, Y+7	; 0x07
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	a9 01       	movw	r20, r18
     14e:	60 e0       	ldi	r22, 0x00	; 0
     150:	70 e0       	ldi	r23, 0x00	; 0
     152:	cb 01       	movw	r24, r22
     154:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
}
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	1f 91       	pop	r17
     15e:	0f 91       	pop	r16
     160:	ff 90       	pop	r15
     162:	ef 90       	pop	r14
     164:	df 90       	pop	r13
     166:	cf 90       	pop	r12
     168:	08 95       	ret

0000016a <reduceBridge>:

int reduceBridge(Handler *self) {
     16a:	cf 92       	push	r12
     16c:	df 92       	push	r13
     16e:	ef 92       	push	r14
     170:	ff 92       	push	r15
     172:	0f 93       	push	r16
     174:	1f 93       	push	r17
	self->onBridge--;
     176:	fc 01       	movw	r30, r24
     178:	26 85       	ldd	r18, Z+14	; 0x0e
     17a:	37 85       	ldd	r19, Z+15	; 0x0f
     17c:	21 50       	subi	r18, 0x01	; 1
     17e:	31 09       	sbc	r19, r1
     180:	37 87       	std	Z+15, r19	; 0x0f
     182:	26 87       	std	Z+14, r18	; 0x0e
	ASYNC(self, updateDisplay, NULL);
     184:	c1 2c       	mov	r12, r1
     186:	d1 2c       	mov	r13, r1
     188:	24 e5       	ldi	r18, 0x54	; 84
     18a:	e2 2e       	mov	r14, r18
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	f2 2e       	mov	r15, r18
     190:	8c 01       	movw	r16, r24
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	a9 01       	movw	r20, r18
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	70 e0       	ldi	r23, 0x00	; 0
     19c:	cb 01       	movw	r24, r22
     19e:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
}
     1a2:	1f 91       	pop	r17
     1a4:	0f 91       	pop	r16
     1a6:	ff 90       	pop	r15
     1a8:	ef 90       	pop	r14
     1aa:	df 90       	pop	r13
     1ac:	cf 90       	pop	r12
     1ae:	08 95       	ret

000001b0 <deQueuer>:

int deQueuer(Handler *self){
     1b0:	cf 92       	push	r12
     1b2:	df 92       	push	r13
     1b4:	ef 92       	push	r14
     1b6:	ff 92       	push	r15
     1b8:	0f 93       	push	r16
     1ba:	1f 93       	push	r17
     1bc:	cf 93       	push	r28
     1be:	df 93       	push	r29
     1c0:	ec 01       	movw	r28, r24
	if (self->isNorth){
     1c2:	88 85       	ldd	r24, Y+8	; 0x08
     1c4:	99 85       	ldd	r25, Y+9	; 0x09
     1c6:	89 2b       	or	r24, r25
     1c8:	91 f5       	brne	.+100    	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
		self->northQueue--;
		self->onBridge++;
		ASYNC(self, updateDisplay, NULL);
	}
	else{
		self->southQueue--;
     1ca:	8a 85       	ldd	r24, Y+10	; 0x0a
     1cc:	9b 85       	ldd	r25, Y+11	; 0x0b
     1ce:	01 97       	sbiw	r24, 0x01	; 1
     1d0:	9b 87       	std	Y+11, r25	; 0x0b
     1d2:	8a 87       	std	Y+10, r24	; 0x0a
		self->onBridge++;
     1d4:	8e 85       	ldd	r24, Y+14	; 0x0e
     1d6:	9f 85       	ldd	r25, Y+15	; 0x0f
     1d8:	01 96       	adiw	r24, 0x01	; 1
     1da:	9f 87       	std	Y+15, r25	; 0x0f
     1dc:	8e 87       	std	Y+14, r24	; 0x0e
		ASYNC(self, updateDisplay, NULL);
     1de:	c1 2c       	mov	r12, r1
     1e0:	d1 2c       	mov	r13, r1
     1e2:	84 e5       	ldi	r24, 0x54	; 84
     1e4:	e8 2e       	mov	r14, r24
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	f8 2e       	mov	r15, r24
     1ea:	8e 01       	movw	r16, r28
     1ec:	20 e0       	ldi	r18, 0x00	; 0
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	a9 01       	movw	r20, r18
     1f2:	60 e0       	ldi	r22, 0x00	; 0
     1f4:	70 e0       	ldi	r23, 0x00	; 0
     1f6:	cb 01       	movw	r24, r22
     1f8:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
	}
	AFTER(MSEC(5000), self, reduceBridge, NULL);
     1fc:	c1 2c       	mov	r12, r1
     1fe:	d1 2c       	mov	r13, r1
     200:	95 eb       	ldi	r25, 0xB5	; 181
     202:	e9 2e       	mov	r14, r25
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	f9 2e       	mov	r15, r25
     208:	8e 01       	movw	r16, r28
     20a:	20 e0       	ldi	r18, 0x00	; 0
     20c:	30 e0       	ldi	r19, 0x00	; 0
     20e:	a9 01       	movw	r20, r18
     210:	6a e5       	ldi	r22, 0x5A	; 90
     212:	72 e6       	ldi	r23, 0x62	; 98
     214:	82 e0       	ldi	r24, 0x02	; 2
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
}
     21c:	df 91       	pop	r29
     21e:	cf 91       	pop	r28
     220:	1f 91       	pop	r17
     222:	0f 91       	pop	r16
     224:	ff 90       	pop	r15
     226:	ef 90       	pop	r14
     228:	df 90       	pop	r13
     22a:	cf 90       	pop	r12
     22c:	08 95       	ret
	ASYNC(self, updateDisplay, NULL);
}

int deQueuer(Handler *self){
	if (self->isNorth){
		self->northQueue--;
     22e:	8c 85       	ldd	r24, Y+12	; 0x0c
     230:	9d 85       	ldd	r25, Y+13	; 0x0d
     232:	01 97       	sbiw	r24, 0x01	; 1
     234:	9d 87       	std	Y+13, r25	; 0x0d
     236:	8c 87       	std	Y+12, r24	; 0x0c
     238:	cd cf       	rjmp	.-102    	; 0x1d4 <deQueuer+0x24>

0000023a <switcher>:
	}
	ASYNC(self, updateDisplay, NULL);
	ASYNC(self, switcher, NULL);
}

int switcher (Handler *self) {
     23a:	cf 92       	push	r12
     23c:	df 92       	push	r13
     23e:	ef 92       	push	r14
     240:	ff 92       	push	r15
     242:	0f 93       	push	r16
     244:	1f 93       	push	r17
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
     24a:	ec 01       	movw	r28, r24
	if (self->isNorth) {
     24c:	88 85       	ldd	r24, Y+8	; 0x08
     24e:	99 85       	ldd	r25, Y+9	; 0x09
     250:	89 2b       	or	r24, r25
     252:	e9 f5       	brne	.+122    	; 0x2ce <switcher+0x94>
				test = AFTER(MSEC(1000), self, switcher, NULL);
			}
		}
	}
	else if (!(self->isNorth)){
		if (self->southQueue && self->counter < 5) {
     254:	8a 85       	ldd	r24, Y+10	; 0x0a
     256:	9b 85       	ldd	r25, Y+11	; 0x0b
     258:	89 2b       	or	r24, r25
     25a:	09 f4       	brne	.+2      	; 0x25e <switcher+0x24>
     25c:	89 c0       	rjmp	.+274    	; 0x370 <switcher+0x136>
     25e:	88 89       	ldd	r24, Y+16	; 0x10
     260:	99 89       	ldd	r25, Y+17	; 0x11
     262:	85 30       	cpi	r24, 0x05	; 5
     264:	91 05       	cpc	r25, r1
     266:	0c f4       	brge	.+2      	; 0x26a <switcher+0x30>
     268:	b3 c0       	rjmp	.+358    	; 0x3d0 <switcher+0x196>
			ASYNC(self->com, transmit, 0b0110);		// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
     26a:	2c 85       	ldd	r18, Y+12	; 0x0c
     26c:	3d 85       	ldd	r19, Y+13	; 0x0d
     26e:	23 2b       	or	r18, r19
     270:	09 f0       	breq	.+2      	; 0x274 <switcher+0x3a>
     272:	89 c0       	rjmp	.+274    	; 0x386 <switcher+0x14c>
				self->counter = 0;
				self->isNorth = 1;
				ASYNC(self->com, transmit, 0b1001);		// Green north
			}
			if (!(self->northQueue) && self->counter >= 5 && self->onBridge < 5 /*&& self->southQueue*/){
     274:	2e 85       	ldd	r18, Y+14	; 0x0e
     276:	3f 85       	ldd	r19, Y+15	; 0x0f
     278:	25 30       	cpi	r18, 0x05	; 5
     27a:	31 05       	cpc	r19, r1
     27c:	0c f4       	brge	.+2      	; 0x280 <switcher+0x46>
     27e:	a5 c0       	rjmp	.+330    	; 0x3ca <switcher+0x190>
				self->counter--;
				ASYNC(self->com, transmit, 0b0110);		// Green south
			}
			else {
				if (test) {
     280:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <test>
     284:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <test+0x1>
     288:	00 97       	sbiw	r24, 0x00	; 0
     28a:	11 f0       	breq	.+4      	; 0x290 <switcher+0x56>
					ABORT(test);
     28c:	0e 94 c9 0f 	call	0x1f92	; 0x1f92 <ABORT>
				}
				test = AFTER(MSEC(1000), self, switcher, NULL);
     290:	c1 2c       	mov	r12, r1
     292:	d1 2c       	mov	r13, r1
     294:	8d e1       	ldi	r24, 0x1D	; 29
     296:	e8 2e       	mov	r14, r24
     298:	81 e0       	ldi	r24, 0x01	; 1
     29a:	f8 2e       	mov	r15, r24
     29c:	8e 01       	movw	r16, r28
     29e:	20 e0       	ldi	r18, 0x00	; 0
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	a9 01       	movw	r20, r18
     2a4:	62 e1       	ldi	r22, 0x12	; 18
     2a6:	7a e7       	ldi	r23, 0x7A	; 122
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
     2b0:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <test+0x1>
     2b4:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <test>
			}
		}
	}
}
     2b8:	80 e0       	ldi	r24, 0x00	; 0
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	1f 91       	pop	r17
     2c2:	0f 91       	pop	r16
     2c4:	ff 90       	pop	r15
     2c6:	ef 90       	pop	r14
     2c8:	df 90       	pop	r13
     2ca:	cf 90       	pop	r12
     2cc:	08 95       	ret
	ASYNC(self, switcher, NULL);
}

int switcher (Handler *self) {
	if (self->isNorth) {
		if (self->northQueue && self->counter < 5) {			// I added the check with (if other queue > 5 switch queue if bridge is currently empty)
     2ce:	8c 85       	ldd	r24, Y+12	; 0x0c
     2d0:	9d 85       	ldd	r25, Y+13	; 0x0d
     2d2:	89 2b       	or	r24, r25
     2d4:	19 f1       	breq	.+70     	; 0x31c <switcher+0xe2>
     2d6:	88 89       	ldd	r24, Y+16	; 0x10
     2d8:	99 89       	ldd	r25, Y+17	; 0x11
     2da:	85 30       	cpi	r24, 0x05	; 5
     2dc:	91 05       	cpc	r25, r1
     2de:	64 f0       	brlt	.+24     	; 0x2f8 <switcher+0xbe>
			ASYNC(self->com, transmit, 0b1001);		// Green north
		}
		else {
			if (self->southQueue && self->onBridge == 0) { //why is 2 = 0?!?!
     2e0:	2a 85       	ldd	r18, Y+10	; 0x0a
     2e2:	3b 85       	ldd	r19, Y+11	; 0x0b
     2e4:	23 2b       	or	r18, r19
     2e6:	f1 f4       	brne	.+60     	; 0x324 <switcher+0xea>
				self->counter = 0;
				self->isNorth = 0;
				ASYNC(self->com, transmit, 0b0110);		// Green south
			}
			if (!(self->southQueue) && self->counter >= 5 && self->onBridge < 5 /*&& self->northQueue*/){
     2e8:	2e 85       	ldd	r18, Y+14	; 0x0e
     2ea:	3f 85       	ldd	r19, Y+15	; 0x0f
     2ec:	25 30       	cpi	r18, 0x05	; 5
     2ee:	31 05       	cpc	r19, r1
     2f0:	3c f6       	brge	.-114    	; 0x280 <switcher+0x46>
				self->counter--;
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	99 8b       	std	Y+17, r25	; 0x11
     2f6:	88 8b       	std	Y+16, r24	; 0x10
				ASYNC(self->com, transmit, 0b1001);		// Green north
     2f8:	0c 81       	ldd	r16, Y+4	; 0x04
     2fa:	1d 81       	ldd	r17, Y+5	; 0x05
     2fc:	59 e0       	ldi	r21, 0x09	; 9
     2fe:	c5 2e       	mov	r12, r21
     300:	d1 2c       	mov	r13, r1
     302:	6d e4       	ldi	r22, 0x4D	; 77
     304:	e6 2e       	mov	r14, r22
     306:	60 e0       	ldi	r22, 0x00	; 0
     308:	f6 2e       	mov	r15, r22
     30a:	20 e0       	ldi	r18, 0x00	; 0
     30c:	30 e0       	ldi	r19, 0x00	; 0
     30e:	a9 01       	movw	r20, r18
     310:	60 e0       	ldi	r22, 0x00	; 0
     312:	70 e0       	ldi	r23, 0x00	; 0
     314:	cb 01       	movw	r24, r22
     316:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
     31a:	ce cf       	rjmp	.-100    	; 0x2b8 <switcher+0x7e>
	if (self->isNorth) {
		if (self->northQueue && self->counter < 5) {			// I added the check with (if other queue > 5 switch queue if bridge is currently empty)
			ASYNC(self->com, transmit, 0b1001);		// Green north
		}
		else {
			if (self->southQueue && self->onBridge == 0) { //why is 2 = 0?!?!
     31c:	8a 85       	ldd	r24, Y+10	; 0x0a
     31e:	9b 85       	ldd	r25, Y+11	; 0x0b
     320:	89 2b       	or	r24, r25
     322:	f9 f0       	breq	.+62     	; 0x362 <switcher+0x128>
     324:	8e 85       	ldd	r24, Y+14	; 0x0e
     326:	9f 85       	ldd	r25, Y+15	; 0x0f
     328:	89 2b       	or	r24, r25
     32a:	09 f0       	breq	.+2      	; 0x32e <switcher+0xf4>
     32c:	a9 cf       	rjmp	.-174    	; 0x280 <switcher+0x46>
				self->counter = 0;
     32e:	19 8a       	std	Y+17, r1	; 0x11
     330:	18 8a       	std	Y+16, r1	; 0x10
				self->isNorth = 0;
     332:	19 86       	std	Y+9, r1	; 0x09
     334:	18 86       	std	Y+8, r1	; 0x08
				ASYNC(self->com, transmit, 0b0110);		// Green south
     336:	0c 81       	ldd	r16, Y+4	; 0x04
     338:	1d 81       	ldd	r17, Y+5	; 0x05
     33a:	76 e0       	ldi	r23, 0x06	; 6
     33c:	c7 2e       	mov	r12, r23
     33e:	d1 2c       	mov	r13, r1
     340:	ed e4       	ldi	r30, 0x4D	; 77
     342:	ee 2e       	mov	r14, r30
     344:	e0 e0       	ldi	r30, 0x00	; 0
     346:	fe 2e       	mov	r15, r30
     348:	20 e0       	ldi	r18, 0x00	; 0
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	a9 01       	movw	r20, r18
     34e:	60 e0       	ldi	r22, 0x00	; 0
     350:	70 e0       	ldi	r23, 0x00	; 0
     352:	cb 01       	movw	r24, r22
     354:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
			}
			if (!(self->southQueue) && self->counter >= 5 && self->onBridge < 5 /*&& self->northQueue*/){
     358:	8a 85       	ldd	r24, Y+10	; 0x0a
     35a:	9b 85       	ldd	r25, Y+11	; 0x0b
     35c:	89 2b       	or	r24, r25
     35e:	09 f0       	breq	.+2      	; 0x362 <switcher+0x128>
     360:	8f cf       	rjmp	.-226    	; 0x280 <switcher+0x46>
     362:	88 89       	ldd	r24, Y+16	; 0x10
     364:	99 89       	ldd	r25, Y+17	; 0x11
     366:	85 30       	cpi	r24, 0x05	; 5
     368:	91 05       	cpc	r25, r1
     36a:	0c f4       	brge	.+2      	; 0x36e <switcher+0x134>
     36c:	89 cf       	rjmp	.-238    	; 0x280 <switcher+0x46>
     36e:	bc cf       	rjmp	.-136    	; 0x2e8 <switcher+0xae>
	else if (!(self->isNorth)){
		if (self->southQueue && self->counter < 5) {
			ASYNC(self->com, transmit, 0b0110);		// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
     370:	8c 85       	ldd	r24, Y+12	; 0x0c
     372:	9d 85       	ldd	r25, Y+13	; 0x0d
     374:	89 2b       	or	r24, r25
     376:	39 f4       	brne	.+14     	; 0x386 <switcher+0x14c>
				self->counter = 0;
				self->isNorth = 1;
				ASYNC(self->com, transmit, 0b1001);		// Green north
			}
			if (!(self->northQueue) && self->counter >= 5 && self->onBridge < 5 /*&& self->southQueue*/){
     378:	88 89       	ldd	r24, Y+16	; 0x10
     37a:	99 89       	ldd	r25, Y+17	; 0x11
     37c:	85 30       	cpi	r24, 0x05	; 5
     37e:	91 05       	cpc	r25, r1
     380:	0c f4       	brge	.+2      	; 0x384 <switcher+0x14a>
     382:	7e cf       	rjmp	.-260    	; 0x280 <switcher+0x46>
     384:	77 cf       	rjmp	.-274    	; 0x274 <switcher+0x3a>
	else if (!(self->isNorth)){
		if (self->southQueue && self->counter < 5) {
			ASYNC(self->com, transmit, 0b0110);		// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
     386:	8e 85       	ldd	r24, Y+14	; 0x0e
     388:	9f 85       	ldd	r25, Y+15	; 0x0f
     38a:	89 2b       	or	r24, r25
     38c:	09 f0       	breq	.+2      	; 0x390 <switcher+0x156>
     38e:	78 cf       	rjmp	.-272    	; 0x280 <switcher+0x46>
				self->counter = 0;
     390:	19 8a       	std	Y+17, r1	; 0x11
     392:	18 8a       	std	Y+16, r1	; 0x10
				self->isNorth = 1;
     394:	81 e0       	ldi	r24, 0x01	; 1
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	99 87       	std	Y+9, r25	; 0x09
     39a:	88 87       	std	Y+8, r24	; 0x08
				ASYNC(self->com, transmit, 0b1001);		// Green north
     39c:	0c 81       	ldd	r16, Y+4	; 0x04
     39e:	1d 81       	ldd	r17, Y+5	; 0x05
     3a0:	39 e0       	ldi	r19, 0x09	; 9
     3a2:	c3 2e       	mov	r12, r19
     3a4:	d1 2c       	mov	r13, r1
     3a6:	4d e4       	ldi	r20, 0x4D	; 77
     3a8:	e4 2e       	mov	r14, r20
     3aa:	40 e0       	ldi	r20, 0x00	; 0
     3ac:	f4 2e       	mov	r15, r20
     3ae:	20 e0       	ldi	r18, 0x00	; 0
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	a9 01       	movw	r20, r18
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	cb 01       	movw	r24, r22
     3ba:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
			}
			if (!(self->northQueue) && self->counter >= 5 && self->onBridge < 5 /*&& self->southQueue*/){
     3be:	8c 85       	ldd	r24, Y+12	; 0x0c
     3c0:	9d 85       	ldd	r25, Y+13	; 0x0d
     3c2:	89 2b       	or	r24, r25
     3c4:	09 f0       	breq	.+2      	; 0x3c8 <switcher+0x18e>
     3c6:	5c cf       	rjmp	.-328    	; 0x280 <switcher+0x46>
     3c8:	d7 cf       	rjmp	.-82     	; 0x378 <switcher+0x13e>
				self->counter--;
     3ca:	01 97       	sbiw	r24, 0x01	; 1
     3cc:	99 8b       	std	Y+17, r25	; 0x11
     3ce:	88 8b       	std	Y+16, r24	; 0x10
				ASYNC(self->com, transmit, 0b0110);		// Green south
     3d0:	0c 81       	ldd	r16, Y+4	; 0x04
     3d2:	1d 81       	ldd	r17, Y+5	; 0x05
     3d4:	96 e0       	ldi	r25, 0x06	; 6
     3d6:	c9 2e       	mov	r12, r25
     3d8:	d1 2c       	mov	r13, r1
     3da:	2d e4       	ldi	r18, 0x4D	; 77
     3dc:	e2 2e       	mov	r14, r18
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	f2 2e       	mov	r15, r18
     3e2:	20 e0       	ldi	r18, 0x00	; 0
     3e4:	30 e0       	ldi	r19, 0x00	; 0
     3e6:	a9 01       	movw	r20, r18
     3e8:	60 e0       	ldi	r22, 0x00	; 0
     3ea:	70 e0       	ldi	r23, 0x00	; 0
     3ec:	cb 01       	movw	r24, r22
     3ee:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
     3f2:	62 cf       	rjmp	.-316    	; 0x2b8 <switcher+0x7e>

000003f4 <readValue>:
		ASYNC(self, updateDisplay, NULL);
	}
	AFTER(MSEC(5000), self, reduceBridge, NULL);
}

int readValue(Handler *self, int value) {
     3f4:	cf 92       	push	r12
     3f6:	df 92       	push	r13
     3f8:	ef 92       	push	r14
     3fa:	ff 92       	push	r15
     3fc:	0f 93       	push	r16
     3fe:	1f 93       	push	r17
     400:	cf 93       	push	r28
     402:	df 93       	push	r29
     404:	ec 01       	movw	r28, r24
	if (value == 1) {			// If a car enters northQueue
     406:	61 30       	cpi	r22, 0x01	; 1
     408:	71 05       	cpc	r23, r1
     40a:	09 f4       	brne	.+2      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
     40c:	47 c0       	rjmp	.+142    	; 0x49c <__DATA_REGION_LENGTH__+0x9c>
		self->northQueue++;
	}
	if (value == 2) {			// Car enters north
     40e:	62 30       	cpi	r22, 0x02	; 2
     410:	71 05       	cpc	r23, r1
     412:	31 f0       	breq	.+12     	; 0x420 <__DATA_REGION_LENGTH__+0x20>
		self->counter++;
		ASYNC(self, deQueuer, NULL);
	}
	if (value == 4) {
     414:	64 30       	cpi	r22, 0x04	; 4
     416:	71 05       	cpc	r23, r1
     418:	c1 f0       	breq	.+48     	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
		self->southQueue++;
	}
	if (value == 8) {
     41a:	68 30       	cpi	r22, 0x08	; 8
     41c:	71 05       	cpc	r23, r1
     41e:	d1 f4       	brne	.+52     	; 0x454 <__DATA_REGION_LENGTH__+0x54>
		self->counter++;		
     420:	88 89       	ldd	r24, Y+16	; 0x10
     422:	99 89       	ldd	r25, Y+17	; 0x11
     424:	01 96       	adiw	r24, 0x01	; 1
     426:	99 8b       	std	Y+17, r25	; 0x11
     428:	88 8b       	std	Y+16, r24	; 0x10
		ASYNC(self, deQueuer, NULL);
     42a:	c1 2c       	mov	r12, r1
     42c:	d1 2c       	mov	r13, r1
     42e:	28 ed       	ldi	r18, 0xD8	; 216
     430:	e2 2e       	mov	r14, r18
     432:	20 e0       	ldi	r18, 0x00	; 0
     434:	f2 2e       	mov	r15, r18
     436:	8e 01       	movw	r16, r28
     438:	20 e0       	ldi	r18, 0x00	; 0
     43a:	30 e0       	ldi	r19, 0x00	; 0
     43c:	a9 01       	movw	r20, r18
     43e:	60 e0       	ldi	r22, 0x00	; 0
     440:	70 e0       	ldi	r23, 0x00	; 0
     442:	cb 01       	movw	r24, r22
     444:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
     448:	05 c0       	rjmp	.+10     	; 0x454 <__DATA_REGION_LENGTH__+0x54>
	if (value == 2) {			// Car enters north
		self->counter++;
		ASYNC(self, deQueuer, NULL);
	}
	if (value == 4) {
		self->southQueue++;
     44a:	8a 85       	ldd	r24, Y+10	; 0x0a
     44c:	9b 85       	ldd	r25, Y+11	; 0x0b
     44e:	01 96       	adiw	r24, 0x01	; 1
     450:	9b 87       	std	Y+11, r25	; 0x0b
     452:	8a 87       	std	Y+10, r24	; 0x0a
	}
	if (value == 8) {
		self->counter++;		
		ASYNC(self, deQueuer, NULL);
	}
	ASYNC(self, updateDisplay, NULL);
     454:	c1 2c       	mov	r12, r1
     456:	d1 2c       	mov	r13, r1
     458:	84 e5       	ldi	r24, 0x54	; 84
     45a:	e8 2e       	mov	r14, r24
     45c:	80 e0       	ldi	r24, 0x00	; 0
     45e:	f8 2e       	mov	r15, r24
     460:	8e 01       	movw	r16, r28
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	a9 01       	movw	r20, r18
     468:	60 e0       	ldi	r22, 0x00	; 0
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	cb 01       	movw	r24, r22
     46e:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
	ASYNC(self, switcher, NULL);
     472:	9d e1       	ldi	r25, 0x1D	; 29
     474:	e9 2e       	mov	r14, r25
     476:	91 e0       	ldi	r25, 0x01	; 1
     478:	f9 2e       	mov	r15, r25
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	a9 01       	movw	r20, r18
     480:	60 e0       	ldi	r22, 0x00	; 0
     482:	70 e0       	ldi	r23, 0x00	; 0
     484:	cb 01       	movw	r24, r22
     486:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
}
     48a:	df 91       	pop	r29
     48c:	cf 91       	pop	r28
     48e:	1f 91       	pop	r17
     490:	0f 91       	pop	r16
     492:	ff 90       	pop	r15
     494:	ef 90       	pop	r14
     496:	df 90       	pop	r13
     498:	cf 90       	pop	r12
     49a:	08 95       	ret
	AFTER(MSEC(5000), self, reduceBridge, NULL);
}

int readValue(Handler *self, int value) {
	if (value == 1) {			// If a car enters northQueue
		self->northQueue++;
     49c:	8c 85       	ldd	r24, Y+12	; 0x0c
     49e:	9d 85       	ldd	r25, Y+13	; 0x0d
     4a0:	01 96       	adiw	r24, 0x01	; 1
     4a2:	9d 87       	std	Y+13, r25	; 0x0d
     4a4:	8c 87       	std	Y+12, r24	; 0x0c
     4a6:	d6 cf       	rjmp	.-84     	; 0x454 <__DATA_REGION_LENGTH__+0x54>

000004a8 <Init>:
#define FOSC 8000000
#define BAUD 9600
#define MYUBRR ((FOSC/(16UL*BAUD))-1)

void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
     4a8:	e1 e6       	ldi	r30, 0x61	; 97
     4aa:	f0 e0       	ldi	r31, 0x00	; 0
     4ac:	80 e8       	ldi	r24, 0x80	; 128
     4ae:	80 83       	st	Z, r24
	CLKPR = 0x00;
     4b0:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     4b2:	8f e0       	ldi	r24, 0x0F	; 15
     4b4:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     4b8:	87 eb       	ldi	r24, 0xB7	; 183
     4ba:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     4be:	87 e0       	ldi	r24, 0x07	; 7
     4c0:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     4c4:	80 ec       	ldi	r24, 0xC0	; 192
     4c6:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// ------------------------- Stuffs for communication -------------------------------------------------
	
	/* Set baud rate */
	UBRR0H = (uint8_t)(MYUBRR<<8);
     4ca:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (uint8_t)(MYUBRR);
     4ce:	83 e3       	ldi	r24, 0x33	; 51
     4d0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	/* Enable receiver and transmitter */
	UCSR0B = (1<<TXEN0) | (1<<RXEN0) | (1<<RXCIE0);
     4d4:	88 e9       	ldi	r24, 0x98	; 152
     4d6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
     4da:	08 95       	ret

000004dc <interrupter>:
 */ 

#include<avr/io.h>
#include "InterruptHandler.h"

int interrupter(InterruptHandler *self) {
     4dc:	cf 92       	push	r12
     4de:	df 92       	push	r13
     4e0:	ef 92       	push	r14
     4e2:	ff 92       	push	r15
     4e4:	0f 93       	push	r16
     4e6:	1f 93       	push	r17
	/*while ( !(UCSR0A & (1<<UDRE0)) );
	UDR0 = 0b1001;*/
	ASYNC(self->handler, readValue, UDR0);
     4e8:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     4ec:	d1 2c       	mov	r13, r1
     4ee:	fc 01       	movw	r30, r24
     4f0:	04 81       	ldd	r16, Z+4	; 0x04
     4f2:	15 81       	ldd	r17, Z+5	; 0x05
     4f4:	8a ef       	ldi	r24, 0xFA	; 250
     4f6:	e8 2e       	mov	r14, r24
     4f8:	81 e0       	ldi	r24, 0x01	; 1
     4fa:	f8 2e       	mov	r15, r24
     4fc:	20 e0       	ldi	r18, 0x00	; 0
     4fe:	30 e0       	ldi	r19, 0x00	; 0
     500:	a9 01       	movw	r20, r18
     502:	60 e0       	ldi	r22, 0x00	; 0
     504:	70 e0       	ldi	r23, 0x00	; 0
     506:	cb 01       	movw	r24, r22
     508:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
	return 0;
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	1f 91       	pop	r17
     512:	0f 91       	pop	r16
     514:	ff 90       	pop	r15
     516:	ef 90       	pop	r14
     518:	df 90       	pop	r13
     51a:	cf 90       	pop	r12
     51c:	08 95       	ret

0000051e <removeOldChar.part.0>:
};

// Switches between two segments 
void switchSegment() {
    LCDDR13 = !(LCDDR13 & 1);
    LCDDR18 = !(LCDDR18 & 1);
     51e:	fc 01       	movw	r30, r24
     520:	20 81       	ld	r18, Z
     522:	29 70       	andi	r18, 0x09	; 9
     524:	20 83       	st	Z, r18
     526:	35 96       	adiw	r30, 0x05	; 5
     528:	9c 01       	movw	r18, r24
     52a:	2c 5e       	subi	r18, 0xEC	; 236
     52c:	3f 4f       	sbci	r19, 0xFF	; 255
     52e:	90 81       	ld	r25, Z
     530:	9f 70       	andi	r25, 0x0F	; 15
     532:	90 83       	st	Z, r25
     534:	35 96       	adiw	r30, 0x05	; 5
     536:	e2 17       	cp	r30, r18
     538:	f3 07       	cpc	r31, r19
     53a:	c9 f7       	brne	.-14     	; 0x52e <removeOldChar.part.0+0x10>
     53c:	08 95       	ret

0000053e <displayChar>:
     53e:	cf 93       	push	r28
     540:	df 93       	push	r29
     542:	00 d0       	rcall	.+0      	; 0x544 <displayChar+0x6>
     544:	00 d0       	rcall	.+0      	; 0x546 <displayChar+0x8>
     546:	cd b7       	in	r28, 0x3d	; 61
     548:	de b7       	in	r29, 0x3e	; 62
     54a:	da 01       	movw	r26, r20
     54c:	90 ed       	ldi	r25, 0xD0	; 208
     54e:	98 0f       	add	r25, r24
     550:	9a 30       	cpi	r25, 0x0A	; 10
     552:	e8 f1       	brcs	.+122    	; 0x5ce <displayChar+0x90>
     554:	89 e0       	ldi	r24, 0x09	; 9
     556:	89 83       	std	Y+1, r24	; 0x01
     558:	8f e0       	ldi	r24, 0x0F	; 15
     55a:	8a 83       	std	Y+2, r24	; 0x02
     55c:	8b 83       	std	Y+3, r24	; 0x03
     55e:	8c 83       	std	Y+4, r24	; 0x04
     560:	99 e0       	ldi	r25, 0x09	; 9
     562:	66 23       	and	r22, r22
     564:	99 f0       	breq	.+38     	; 0x58c <displayChar+0x4e>
     566:	fe 01       	movw	r30, r28
     568:	31 96       	adiw	r30, 0x01	; 1
     56a:	9e 01       	movw	r18, r28
     56c:	2b 5f       	subi	r18, 0xFB	; 251
     56e:	3f 4f       	sbci	r19, 0xFF	; 255
     570:	92 95       	swap	r25
     572:	90 7f       	andi	r25, 0xF0	; 240
     574:	91 93       	st	Z+, r25
     576:	2e 17       	cp	r18, r30
     578:	3f 07       	cpc	r19, r31
     57a:	39 f0       	breq	.+14     	; 0x58a <displayChar+0x4c>
     57c:	90 81       	ld	r25, Z
     57e:	92 95       	swap	r25
     580:	90 7f       	andi	r25, 0xF0	; 240
     582:	91 93       	st	Z+, r25
     584:	2e 17       	cp	r18, r30
     586:	3f 07       	cpc	r19, r31
     588:	c9 f7       	brne	.-14     	; 0x57c <displayChar+0x3e>
     58a:	99 81       	ldd	r25, Y+1	; 0x01
     58c:	8c 91       	ld	r24, X
     58e:	98 2b       	or	r25, r24
     590:	9c 93       	st	X, r25
     592:	15 96       	adiw	r26, 0x05	; 5
     594:	9c 91       	ld	r25, X
     596:	15 97       	sbiw	r26, 0x05	; 5
     598:	8a 81       	ldd	r24, Y+2	; 0x02
     59a:	89 2b       	or	r24, r25
     59c:	15 96       	adiw	r26, 0x05	; 5
     59e:	8c 93       	st	X, r24
     5a0:	15 97       	sbiw	r26, 0x05	; 5
     5a2:	1a 96       	adiw	r26, 0x0a	; 10
     5a4:	9c 91       	ld	r25, X
     5a6:	1a 97       	sbiw	r26, 0x0a	; 10
     5a8:	8b 81       	ldd	r24, Y+3	; 0x03
     5aa:	89 2b       	or	r24, r25
     5ac:	1a 96       	adiw	r26, 0x0a	; 10
     5ae:	8c 93       	st	X, r24
     5b0:	1a 97       	sbiw	r26, 0x0a	; 10
     5b2:	1f 96       	adiw	r26, 0x0f	; 15
     5b4:	9c 91       	ld	r25, X
     5b6:	1f 97       	sbiw	r26, 0x0f	; 15
     5b8:	8c 81       	ldd	r24, Y+4	; 0x04
     5ba:	89 2b       	or	r24, r25
     5bc:	1f 96       	adiw	r26, 0x0f	; 15
     5be:	8c 93       	st	X, r24
     5c0:	0f 90       	pop	r0
     5c2:	0f 90       	pop	r0
     5c4:	0f 90       	pop	r0
     5c6:	0f 90       	pop	r0
     5c8:	df 91       	pop	r29
     5ca:	cf 91       	pop	r28
     5cc:	08 95       	ret
     5ce:	e8 2f       	mov	r30, r24
     5d0:	f0 e0       	ldi	r31, 0x00	; 0
     5d2:	ee 0f       	add	r30, r30
     5d4:	ff 1f       	adc	r31, r31
     5d6:	ee 0f       	add	r30, r30
     5d8:	ff 1f       	adc	r31, r31
     5da:	e8 5b       	subi	r30, 0xB8	; 184
     5dc:	ff 4f       	sbci	r31, 0xFF	; 255
     5de:	90 81       	ld	r25, Z
     5e0:	99 83       	std	Y+1, r25	; 0x01
     5e2:	81 81       	ldd	r24, Z+1	; 0x01
     5e4:	8a 83       	std	Y+2, r24	; 0x02
     5e6:	82 81       	ldd	r24, Z+2	; 0x02
     5e8:	8b 83       	std	Y+3, r24	; 0x03
     5ea:	83 81       	ldd	r24, Z+3	; 0x03
     5ec:	8c 83       	std	Y+4, r24	; 0x04
     5ee:	b9 cf       	rjmp	.-142    	; 0x562 <displayChar+0x24>

000005f0 <writeChar>:
     5f0:	0f 93       	push	r16
     5f2:	1f 93       	push	r17
     5f4:	cf 93       	push	r28
     5f6:	60 fd       	sbrc	r22, 0
     5f8:	1c c0       	rjmp	.+56     	; 0x632 <writeChar+0x42>
     5fa:	77 fd       	sbrc	r23, 7
     5fc:	30 c0       	rjmp	.+96     	; 0x65e <writeChar+0x6e>
     5fe:	75 95       	asr	r23
     600:	67 95       	ror	r22
     602:	ab 01       	movw	r20, r22
     604:	44 51       	subi	r20, 0x14	; 20
     606:	5f 4f       	sbci	r21, 0xFF	; 255
     608:	fa 01       	movw	r30, r20
     60a:	90 81       	ld	r25, Z
     60c:	90 79       	andi	r25, 0x90	; 144
     60e:	90 83       	st	Z, r25
     610:	35 96       	adiw	r30, 0x05	; 5
     612:	9a 01       	movw	r18, r20
     614:	2c 5e       	subi	r18, 0xEC	; 236
     616:	3f 4f       	sbci	r19, 0xFF	; 255
     618:	90 81       	ld	r25, Z
     61a:	90 7f       	andi	r25, 0xF0	; 240
     61c:	90 83       	st	Z, r25
     61e:	35 96       	adiw	r30, 0x05	; 5
     620:	e2 17       	cp	r30, r18
     622:	f3 07       	cpc	r31, r19
     624:	c9 f7       	brne	.-14     	; 0x618 <writeChar+0x28>
     626:	60 e0       	ldi	r22, 0x00	; 0
     628:	cf 91       	pop	r28
     62a:	1f 91       	pop	r17
     62c:	0f 91       	pop	r16
     62e:	0c 94 9f 02 	jmp	0x53e	; 0x53e <displayChar>
     632:	ab 01       	movw	r20, r22
     634:	41 50       	subi	r20, 0x01	; 1
     636:	51 09       	sbc	r21, r1
     638:	57 fd       	sbrc	r21, 7
     63a:	14 c0       	rjmp	.+40     	; 0x664 <writeChar+0x74>
     63c:	c8 2f       	mov	r28, r24
     63e:	55 95       	asr	r21
     640:	47 95       	ror	r20
     642:	8a 01       	movw	r16, r20
     644:	04 51       	subi	r16, 0x14	; 20
     646:	1f 4f       	sbci	r17, 0xFF	; 255
     648:	c8 01       	movw	r24, r16
     64a:	0e 94 8f 02 	call	0x51e	; 0x51e <removeOldChar.part.0>
     64e:	a8 01       	movw	r20, r16
     650:	61 e0       	ldi	r22, 0x01	; 1
     652:	8c 2f       	mov	r24, r28
     654:	cf 91       	pop	r28
     656:	1f 91       	pop	r17
     658:	0f 91       	pop	r16
     65a:	0c 94 9f 02 	jmp	0x53e	; 0x53e <displayChar>
     65e:	6f 5f       	subi	r22, 0xFF	; 255
     660:	7f 4f       	sbci	r23, 0xFF	; 255
     662:	cd cf       	rjmp	.-102    	; 0x5fe <writeChar+0xe>
     664:	ab 01       	movw	r20, r22
     666:	ea cf       	rjmp	.-44     	; 0x63c <writeChar+0x4c>

00000668 <printAt>:
}
 
// Displays last two digits of num in pos and pos+1
int  printAt(Lcd *self, int input) {  // [pos, num]
     668:	ef 92       	push	r14
     66a:	ff 92       	push	r15
     66c:	0f 93       	push	r16
     66e:	1f 93       	push	r17
     670:	cf 93       	push	r28
     672:	df 93       	push	r29
     674:	cb 01       	movw	r24, r22
    int pp = input % 10;
     676:	0a e0       	ldi	r16, 0x0A	; 10
     678:	10 e0       	ldi	r17, 0x00	; 0
     67a:	b8 01       	movw	r22, r16
     67c:	0e 94 85 10 	call	0x210a	; 0x210a <__divmodhi4>
     680:	7b 01       	movw	r14, r22
     682:	ec 01       	movw	r28, r24
    int num = input / 10;
    writeChar((num % 100) / 10 + '0', pp);
     684:	cb 01       	movw	r24, r22
     686:	64 e6       	ldi	r22, 0x64	; 100
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	0e 94 85 10 	call	0x210a	; 0x210a <__divmodhi4>
     68e:	b8 01       	movw	r22, r16
     690:	0e 94 85 10 	call	0x210a	; 0x210a <__divmodhi4>
     694:	86 2f       	mov	r24, r22
     696:	be 01       	movw	r22, r28
     698:	80 5d       	subi	r24, 0xD0	; 208
     69a:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <writeChar>
    pp++;
    writeChar( num % 10 + '0', pp);
     69e:	21 96       	adiw	r28, 0x01	; 1
     6a0:	c7 01       	movw	r24, r14
     6a2:	b8 01       	movw	r22, r16
     6a4:	0e 94 85 10 	call	0x210a	; 0x210a <__divmodhi4>
     6a8:	be 01       	movw	r22, r28
     6aa:	80 5d       	subi	r24, 0xD0	; 208
     6ac:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <writeChar>

    return 0;
     6b0:	80 e0       	ldi	r24, 0x00	; 0
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	df 91       	pop	r29
     6b6:	cf 91       	pop	r28
     6b8:	1f 91       	pop	r17
     6ba:	0f 91       	pop	r16
     6bc:	ff 90       	pop	r15
     6be:	ef 90       	pop	r14
     6c0:	08 95       	ret

000006c2 <main>:
#include "Lcd.h"
#include "TinyTimber.h"
#include "InterruptHandler.h"

int main(void)
{
     6c2:	cf 93       	push	r28
     6c4:	df 93       	push	r29
     6c6:	cd b7       	in	r28, 0x3d	; 61
     6c8:	de b7       	in	r29, 0x3e	; 62
     6ca:	a0 97       	sbiw	r28, 0x20	; 32
     6cc:	0f b6       	in	r0, 0x3f	; 63
     6ce:	f8 94       	cli
     6d0:	de bf       	out	0x3e, r29	; 62
     6d2:	0f be       	out	0x3f, r0	; 63
     6d4:	cd bf       	out	0x3d, r28	; 61
    Init();
     6d6:	0e 94 54 02 	call	0x4a8	; 0x4a8 <Init>
	Lcd lcd = initLcd();
     6da:	1e 8e       	std	Y+30, r1	; 0x1e
     6dc:	1d 8e       	std	Y+29, r1	; 0x1d
     6de:	18 a2       	std	Y+32, r1	; 0x20
     6e0:	1f 8e       	std	Y+31, r1	; 0x1f
	Communication com = initCommunication();
     6e2:	1a 8e       	std	Y+26, r1	; 0x1a
     6e4:	19 8e       	std	Y+25, r1	; 0x19
     6e6:	1c 8e       	std	Y+28, r1	; 0x1c
     6e8:	1b 8e       	std	Y+27, r1	; 0x1b
	Handler handler = initHandler(&com, &lcd);
     6ea:	1a 82       	std	Y+2, r1	; 0x02
     6ec:	19 82       	std	Y+1, r1	; 0x01
     6ee:	1c 82       	std	Y+4, r1	; 0x04
     6f0:	1b 82       	std	Y+3, r1	; 0x03
     6f2:	ce 01       	movw	r24, r28
     6f4:	49 96       	adiw	r24, 0x19	; 25
     6f6:	9e 83       	std	Y+6, r25	; 0x06
     6f8:	8d 83       	std	Y+5, r24	; 0x05
     6fa:	04 96       	adiw	r24, 0x04	; 4
     6fc:	98 87       	std	Y+8, r25	; 0x08
     6fe:	8f 83       	std	Y+7, r24	; 0x07
     700:	81 e0       	ldi	r24, 0x01	; 1
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	9a 87       	std	Y+10, r25	; 0x0a
     706:	89 87       	std	Y+9, r24	; 0x09
     708:	1c 86       	std	Y+12, r1	; 0x0c
     70a:	1b 86       	std	Y+11, r1	; 0x0b
     70c:	1e 86       	std	Y+14, r1	; 0x0e
     70e:	1d 86       	std	Y+13, r1	; 0x0d
     710:	18 8a       	std	Y+16, r1	; 0x10
     712:	1f 86       	std	Y+15, r1	; 0x0f
     714:	1a 8a       	std	Y+18, r1	; 0x12
     716:	19 8a       	std	Y+17, r1	; 0x11
	InterruptHandler interruptHandler = initInterruptHandler(&handler);
     718:	1c 8a       	std	Y+20, r1	; 0x14
     71a:	1b 8a       	std	Y+19, r1	; 0x13
     71c:	1e 8a       	std	Y+22, r1	; 0x16
     71e:	1d 8a       	std	Y+21, r1	; 0x15
     720:	ce 01       	movw	r24, r28
     722:	01 96       	adiw	r24, 0x01	; 1
     724:	98 8f       	std	Y+24, r25	; 0x18
     726:	8f 8b       	std	Y+23, r24	; 0x17
	INSTALL(&interruptHandler, interrupter, IRQ_USART0_RX);
     728:	48 e0       	ldi	r20, 0x08	; 8
     72a:	6e e6       	ldi	r22, 0x6E	; 110
     72c:	72 e0       	ldi	r23, 0x02	; 2
     72e:	42 96       	adiw	r24, 0x12	; 18
     730:	0e 94 4f 10 	call	0x209e	; 0x209e <install>
	return tinytimber(NULL, NULL, NULL);
     734:	40 e0       	ldi	r20, 0x00	; 0
     736:	50 e0       	ldi	r21, 0x00	; 0
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 69 10 	call	0x20d2	; 0x20d2 <tinytimber>
}
     744:	a0 96       	adiw	r28, 0x20	; 32
     746:	0f b6       	in	r0, 0x3f	; 63
     748:	f8 94       	cli
     74a:	de bf       	out	0x3e, r29	; 62
     74c:	0f be       	out	0x3f, r0	; 63
     74e:	cd bf       	out	0x3d, r28	; 61
     750:	df 91       	pop	r29
     752:	cf 91       	pop	r28
     754:	08 95       	ret

00000756 <initialize>:
    char status;
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
     756:	cf 93       	push	r28
     758:	df 93       	push	r29
     75a:	00 d0       	rcall	.+0      	; 0x75c <initialize+0x6>
     75c:	00 d0       	rcall	.+0      	; 0x75e <initialize+0x8>
     75e:	cd b7       	in	r28, 0x3d	; 61
     760:	de b7       	in	r29, 0x3e	; 62
     762:	8b e2       	ldi	r24, 0x2B	; 43
     764:	92 e0       	ldi	r25, 0x02	; 2
     766:	2b e0       	ldi	r18, 0x0B	; 11
     768:	33 e0       	ldi	r19, 0x03	; 3
     76a:	fc 01       	movw	r30, r24
     76c:	70 97       	sbiw	r30, 0x10	; 16
     76e:	91 83       	std	Z+1, r25	; 0x01
     770:	80 83       	st	Z, r24
     772:	40 96       	adiw	r24, 0x10	; 16
     774:	82 17       	cp	r24, r18
     776:	93 07       	cpc	r25, r19
     778:	c1 f7       	brne	.-16     	; 0x76a <initialize+0x14>
     77a:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     77e:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     782:	e6 e6       	ldi	r30, 0x66	; 102
     784:	f1 e0       	ldi	r31, 0x01	; 1
     786:	83 e8       	ldi	r24, 0x83	; 131
     788:	91 e0       	ldi	r25, 0x01	; 1
     78a:	91 83       	std	Z+1, r25	; 0x01
     78c:	80 83       	st	Z, r24
     78e:	80 ea       	ldi	r24, 0xA0	; 160
     790:	91 e0       	ldi	r25, 0x01	; 1
     792:	96 8f       	std	Z+30, r25	; 0x1e
     794:	85 8f       	std	Z+29, r24	; 0x1d
     796:	ad eb       	ldi	r26, 0xBD	; 189
     798:	b1 e0       	ldi	r27, 0x01	; 1
     79a:	b3 af       	std	Z+59, r27	; 0x3b
     79c:	a2 af       	std	Z+58, r26	; 0x3a
     79e:	1d 92       	st	X+, r1
     7a0:	1c 92       	st	X, r1
     7a2:	fa 83       	std	Y+2, r31	; 0x02
     7a4:	e9 83       	std	Y+1, r30	; 0x01
     7a6:	e7 e6       	ldi	r30, 0x67	; 103
     7a8:	f3 e0       	ldi	r31, 0x03	; 3
     7aa:	fc 83       	std	Y+4, r31	; 0x04
     7ac:	eb 83       	std	Y+3, r30	; 0x03
     7ae:	89 81       	ldd	r24, Y+1	; 0x01
     7b0:	9a 81       	ldd	r25, Y+2	; 0x02
     7b2:	06 96       	adiw	r24, 0x06	; 6
     7b4:	0e 94 ad 10 	call	0x215a	; 0x215a <setjmp>
     7b8:	8b 81       	ldd	r24, Y+3	; 0x03
     7ba:	9c 81       	ldd	r25, Y+4	; 0x04
     7bc:	e9 81       	ldd	r30, Y+1	; 0x01
     7be:	fa 81       	ldd	r31, Y+2	; 0x02
     7c0:	97 8b       	std	Z+23, r25	; 0x17
     7c2:	86 8b       	std	Z+22, r24	; 0x16
     7c4:	91 8f       	std	Z+25, r25	; 0x19
     7c6:	80 8f       	std	Z+24, r24	; 0x18
     7c8:	8e e4       	ldi	r24, 0x4E	; 78
     7ca:	9f e0       	ldi	r25, 0x0F	; 15
     7cc:	94 8f       	std	Z+28, r25	; 0x1c
     7ce:	83 8f       	std	Z+27, r24	; 0x1b
     7d0:	15 82       	std	Z+5, r1	; 0x05
     7d2:	14 82       	std	Z+4, r1	; 0x04
     7d4:	7d 96       	adiw	r30, 0x1d	; 29
     7d6:	fa 83       	std	Y+2, r31	; 0x02
     7d8:	e9 83       	std	Y+1, r30	; 0x01
     7da:	eb 81       	ldd	r30, Y+3	; 0x03
     7dc:	fc 81       	ldd	r31, Y+4	; 0x04
     7de:	e0 5a       	subi	r30, 0xA0	; 160
     7e0:	ff 4f       	sbci	r31, 0xFF	; 255
     7e2:	fc 83       	std	Y+4, r31	; 0x04
     7e4:	eb 83       	std	Y+3, r30	; 0x03
     7e6:	89 81       	ldd	r24, Y+1	; 0x01
     7e8:	9a 81       	ldd	r25, Y+2	; 0x02
     7ea:	8a 5d       	subi	r24, 0xDA	; 218
     7ec:	91 40       	sbci	r25, 0x01	; 1
     7ee:	f9 f6       	brne	.-66     	; 0x7ae <initialize+0x58>
     7f0:	ee ef       	ldi	r30, 0xFE	; 254
     7f2:	f1 e0       	ldi	r31, 0x01	; 1
     7f4:	11 82       	std	Z+1, r1	; 0x01
     7f6:	10 82       	st	Z, r1
     7f8:	15 82       	std	Z+5, r1	; 0x05
     7fa:	14 82       	std	Z+4, r1	; 0x04
     7fc:	13 82       	std	Z+3, r1	; 0x03
     7fe:	12 82       	std	Z+2, r1	; 0x02
     800:	e1 e6       	ldi	r30, 0x61	; 97
     802:	f0 e0       	ldi	r31, 0x00	; 0
     804:	80 e8       	ldi	r24, 0x80	; 128
     806:	80 83       	st	Z, r24
     808:	10 82       	st	Z, r1
     80a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     80e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     812:	84 e0       	ldi	r24, 0x04	; 4
     814:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     818:	81 e0       	ldi	r24, 0x01	; 1
     81a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     81e:	0f 90       	pop	r0
     820:	0f 90       	pop	r0
     822:	0f 90       	pop	r0
     824:	0f 90       	pop	r0
     826:	df 91       	pop	r29
     828:	cf 91       	pop	r28
     82a:	08 95       	ret

0000082c <dispatch>:
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	00 d0       	rcall	.+0      	; 0x832 <dispatch+0x6>
     832:	cd b7       	in	r28, 0x3d	; 61
     834:	de b7       	in	r29, 0x3e	; 62
     836:	9a 83       	std	Y+2, r25	; 0x02
     838:	89 83       	std	Y+1, r24	; 0x01
     83a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     83e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     842:	06 96       	adiw	r24, 0x06	; 6
     844:	0e 94 ad 10 	call	0x215a	; 0x215a <setjmp>
     848:	89 2b       	or	r24, r25
     84a:	29 f0       	breq	.+10     	; 0x856 <dispatch+0x2a>
     84c:	0f 90       	pop	r0
     84e:	0f 90       	pop	r0
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	08 95       	ret
     856:	89 81       	ldd	r24, Y+1	; 0x01
     858:	9a 81       	ldd	r25, Y+2	; 0x02
     85a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     85e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     862:	61 e0       	ldi	r22, 0x01	; 1
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	06 96       	adiw	r24, 0x06	; 6
     868:	0e 94 cd 10 	call	0x219a	; 0x219a <longjmp>

0000086c <schedule>:
     86c:	0f 93       	push	r16
     86e:	1f 93       	push	r17
     870:	cf 93       	push	r28
     872:	df 93       	push	r29
     874:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <msgQ>
     878:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <msgQ+0x1>
     87c:	30 97       	sbiw	r30, 0x00	; 0
     87e:	f1 f0       	breq	.+60     	; 0x8bc <schedule+0x50>
     880:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     884:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     888:	00 97       	sbiw	r24, 0x00	; 0
     88a:	c1 f0       	breq	.+48     	; 0x8bc <schedule+0x50>
     88c:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     890:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     894:	aa 81       	ldd	r26, Y+2	; 0x02
     896:	bb 81       	ldd	r27, Y+3	; 0x03
     898:	10 97       	sbiw	r26, 0x00	; 0
     89a:	a9 f0       	breq	.+42     	; 0x8c6 <schedule+0x5a>
     89c:	46 81       	ldd	r20, Z+6	; 0x06
     89e:	57 81       	ldd	r21, Z+7	; 0x07
     8a0:	60 85       	ldd	r22, Z+8	; 0x08
     8a2:	71 85       	ldd	r23, Z+9	; 0x09
     8a4:	16 96       	adiw	r26, 0x06	; 6
     8a6:	0d 91       	ld	r16, X+
     8a8:	1d 91       	ld	r17, X+
     8aa:	2d 91       	ld	r18, X+
     8ac:	3c 91       	ld	r19, X
     8ae:	19 97       	sbiw	r26, 0x09	; 9
     8b0:	40 1b       	sub	r20, r16
     8b2:	51 0b       	sbc	r21, r17
     8b4:	62 0b       	sbc	r22, r18
     8b6:	73 0b       	sbc	r23, r19
     8b8:	77 fd       	sbrc	r23, 7
     8ba:	05 c0       	rjmp	.+10     	; 0x8c6 <schedule+0x5a>
     8bc:	df 91       	pop	r29
     8be:	cf 91       	pop	r28
     8c0:	1f 91       	pop	r17
     8c2:	0f 91       	pop	r16
     8c4:	08 95       	ret
     8c6:	fc 01       	movw	r30, r24
     8c8:	20 81       	ld	r18, Z
     8ca:	31 81       	ldd	r19, Z+1	; 0x01
     8cc:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     8d0:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     8d4:	d1 83       	std	Z+1, r29	; 0x01
     8d6:	c0 83       	st	Z, r28
     8d8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     8dc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     8e0:	df 91       	pop	r29
     8e2:	cf 91       	pop	r28
     8e4:	1f 91       	pop	r17
     8e6:	0f 91       	pop	r16
     8e8:	0c 94 16 04 	jmp	0x82c	; 0x82c <dispatch>

000008ec <dequeue.part.0>:
     8ec:	8f ef       	ldi	r24, 0xFF	; 255
     8ee:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     8f2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     8f6:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     8fa:	81 e0       	ldi	r24, 0x01	; 1
     8fc:	83 bf       	out	0x33, r24	; 51
     8fe:	88 95       	sleep
     900:	fd cf       	rjmp	.-6      	; 0x8fc <dequeue.part.0+0x10>

00000902 <__vector_1>:
     902:	1f 92       	push	r1
     904:	0f 92       	push	r0
     906:	0f b6       	in	r0, 0x3f	; 63
     908:	0f 92       	push	r0
     90a:	11 24       	eor	r1, r1
     90c:	2f 93       	push	r18
     90e:	3f 93       	push	r19
     910:	4f 93       	push	r20
     912:	5f 93       	push	r21
     914:	6f 93       	push	r22
     916:	7f 93       	push	r23
     918:	8f 93       	push	r24
     91a:	9f 93       	push	r25
     91c:	af 93       	push	r26
     91e:	bf 93       	push	r27
     920:	ef 93       	push	r30
     922:	ff 93       	push	r31
     924:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     928:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     92c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     930:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     934:	c9 01       	movw	r24, r18
     936:	03 2e       	mov	r0, r19
     938:	00 0c       	add	r0, r0
     93a:	aa 0b       	sbc	r26, r26
     93c:	bb 0b       	sbc	r27, r27
     93e:	dc 01       	movw	r26, r24
     940:	99 27       	eor	r25, r25
     942:	88 27       	eor	r24, r24
     944:	60 e0       	ldi	r22, 0x00	; 0
     946:	70 e0       	ldi	r23, 0x00	; 0
     948:	84 2b       	or	r24, r20
     94a:	95 2b       	or	r25, r21
     94c:	a6 2b       	or	r26, r22
     94e:	b7 2b       	or	r27, r23
     950:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     954:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     958:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     95c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     960:	b0 9b       	sbis	0x16, 0	; 22
     962:	1b c0       	rjmp	.+54     	; 0x99a <__vector_1+0x98>
     964:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     968:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     96c:	c9 01       	movw	r24, r18
     96e:	01 96       	adiw	r24, 0x01	; 1
     970:	09 2e       	mov	r0, r25
     972:	00 0c       	add	r0, r0
     974:	aa 0b       	sbc	r26, r26
     976:	bb 0b       	sbc	r27, r27
     978:	dc 01       	movw	r26, r24
     97a:	99 27       	eor	r25, r25
     97c:	88 27       	eor	r24, r24
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	70 e0       	ldi	r23, 0x00	; 0
     982:	84 2b       	or	r24, r20
     984:	95 2b       	or	r25, r21
     986:	a6 2b       	or	r26, r22
     988:	b7 2b       	or	r27, r23
     98a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     98e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     992:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     996:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     99a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     99e:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     9a2:	30 97       	sbiw	r30, 0x00	; 0
     9a4:	39 f0       	breq	.+14     	; 0x9b4 <__vector_1+0xb2>
     9a6:	60 e0       	ldi	r22, 0x00	; 0
     9a8:	70 e0       	ldi	r23, 0x00	; 0
     9aa:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     9ae:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     9b2:	09 95       	icall
     9b4:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
     9b8:	ff 91       	pop	r31
     9ba:	ef 91       	pop	r30
     9bc:	bf 91       	pop	r27
     9be:	af 91       	pop	r26
     9c0:	9f 91       	pop	r25
     9c2:	8f 91       	pop	r24
     9c4:	7f 91       	pop	r23
     9c6:	6f 91       	pop	r22
     9c8:	5f 91       	pop	r21
     9ca:	4f 91       	pop	r20
     9cc:	3f 91       	pop	r19
     9ce:	2f 91       	pop	r18
     9d0:	0f 90       	pop	r0
     9d2:	0f be       	out	0x3f, r0	; 63
     9d4:	0f 90       	pop	r0
     9d6:	1f 90       	pop	r1
     9d8:	18 95       	reti

000009da <__vector_2>:
     9da:	1f 92       	push	r1
     9dc:	0f 92       	push	r0
     9de:	0f b6       	in	r0, 0x3f	; 63
     9e0:	0f 92       	push	r0
     9e2:	11 24       	eor	r1, r1
     9e4:	2f 93       	push	r18
     9e6:	3f 93       	push	r19
     9e8:	4f 93       	push	r20
     9ea:	5f 93       	push	r21
     9ec:	6f 93       	push	r22
     9ee:	7f 93       	push	r23
     9f0:	8f 93       	push	r24
     9f2:	9f 93       	push	r25
     9f4:	af 93       	push	r26
     9f6:	bf 93       	push	r27
     9f8:	ef 93       	push	r30
     9fa:	ff 93       	push	r31
     9fc:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     a00:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     a04:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a08:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a0c:	c9 01       	movw	r24, r18
     a0e:	03 2e       	mov	r0, r19
     a10:	00 0c       	add	r0, r0
     a12:	aa 0b       	sbc	r26, r26
     a14:	bb 0b       	sbc	r27, r27
     a16:	dc 01       	movw	r26, r24
     a18:	99 27       	eor	r25, r25
     a1a:	88 27       	eor	r24, r24
     a1c:	60 e0       	ldi	r22, 0x00	; 0
     a1e:	70 e0       	ldi	r23, 0x00	; 0
     a20:	84 2b       	or	r24, r20
     a22:	95 2b       	or	r25, r21
     a24:	a6 2b       	or	r26, r22
     a26:	b7 2b       	or	r27, r23
     a28:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     a2c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     a30:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     a34:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     a38:	b0 9b       	sbis	0x16, 0	; 22
     a3a:	1b c0       	rjmp	.+54     	; 0xa72 <__vector_2+0x98>
     a3c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a40:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a44:	c9 01       	movw	r24, r18
     a46:	01 96       	adiw	r24, 0x01	; 1
     a48:	09 2e       	mov	r0, r25
     a4a:	00 0c       	add	r0, r0
     a4c:	aa 0b       	sbc	r26, r26
     a4e:	bb 0b       	sbc	r27, r27
     a50:	dc 01       	movw	r26, r24
     a52:	99 27       	eor	r25, r25
     a54:	88 27       	eor	r24, r24
     a56:	60 e0       	ldi	r22, 0x00	; 0
     a58:	70 e0       	ldi	r23, 0x00	; 0
     a5a:	84 2b       	or	r24, r20
     a5c:	95 2b       	or	r25, r21
     a5e:	a6 2b       	or	r26, r22
     a60:	b7 2b       	or	r27, r23
     a62:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     a66:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     a6a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     a6e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     a72:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     a76:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     a7a:	30 97       	sbiw	r30, 0x00	; 0
     a7c:	39 f0       	breq	.+14     	; 0xa8c <__vector_2+0xb2>
     a7e:	61 e0       	ldi	r22, 0x01	; 1
     a80:	70 e0       	ldi	r23, 0x00	; 0
     a82:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     a86:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     a8a:	09 95       	icall
     a8c:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
     a90:	ff 91       	pop	r31
     a92:	ef 91       	pop	r30
     a94:	bf 91       	pop	r27
     a96:	af 91       	pop	r26
     a98:	9f 91       	pop	r25
     a9a:	8f 91       	pop	r24
     a9c:	7f 91       	pop	r23
     a9e:	6f 91       	pop	r22
     aa0:	5f 91       	pop	r21
     aa2:	4f 91       	pop	r20
     aa4:	3f 91       	pop	r19
     aa6:	2f 91       	pop	r18
     aa8:	0f 90       	pop	r0
     aaa:	0f be       	out	0x3f, r0	; 63
     aac:	0f 90       	pop	r0
     aae:	1f 90       	pop	r1
     ab0:	18 95       	reti

00000ab2 <__vector_3>:
     ab2:	1f 92       	push	r1
     ab4:	0f 92       	push	r0
     ab6:	0f b6       	in	r0, 0x3f	; 63
     ab8:	0f 92       	push	r0
     aba:	11 24       	eor	r1, r1
     abc:	2f 93       	push	r18
     abe:	3f 93       	push	r19
     ac0:	4f 93       	push	r20
     ac2:	5f 93       	push	r21
     ac4:	6f 93       	push	r22
     ac6:	7f 93       	push	r23
     ac8:	8f 93       	push	r24
     aca:	9f 93       	push	r25
     acc:	af 93       	push	r26
     ace:	bf 93       	push	r27
     ad0:	ef 93       	push	r30
     ad2:	ff 93       	push	r31
     ad4:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     ad8:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     adc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ae0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ae4:	c9 01       	movw	r24, r18
     ae6:	03 2e       	mov	r0, r19
     ae8:	00 0c       	add	r0, r0
     aea:	aa 0b       	sbc	r26, r26
     aec:	bb 0b       	sbc	r27, r27
     aee:	dc 01       	movw	r26, r24
     af0:	99 27       	eor	r25, r25
     af2:	88 27       	eor	r24, r24
     af4:	60 e0       	ldi	r22, 0x00	; 0
     af6:	70 e0       	ldi	r23, 0x00	; 0
     af8:	84 2b       	or	r24, r20
     afa:	95 2b       	or	r25, r21
     afc:	a6 2b       	or	r26, r22
     afe:	b7 2b       	or	r27, r23
     b00:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     b04:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     b08:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     b0c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     b10:	b0 9b       	sbis	0x16, 0	; 22
     b12:	1b c0       	rjmp	.+54     	; 0xb4a <__vector_3+0x98>
     b14:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b18:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b1c:	c9 01       	movw	r24, r18
     b1e:	01 96       	adiw	r24, 0x01	; 1
     b20:	09 2e       	mov	r0, r25
     b22:	00 0c       	add	r0, r0
     b24:	aa 0b       	sbc	r26, r26
     b26:	bb 0b       	sbc	r27, r27
     b28:	dc 01       	movw	r26, r24
     b2a:	99 27       	eor	r25, r25
     b2c:	88 27       	eor	r24, r24
     b2e:	60 e0       	ldi	r22, 0x00	; 0
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	84 2b       	or	r24, r20
     b34:	95 2b       	or	r25, r21
     b36:	a6 2b       	or	r26, r22
     b38:	b7 2b       	or	r27, r23
     b3a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     b3e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     b42:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     b46:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     b4a:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     b4e:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     b52:	30 97       	sbiw	r30, 0x00	; 0
     b54:	39 f0       	breq	.+14     	; 0xb64 <__vector_3+0xb2>
     b56:	62 e0       	ldi	r22, 0x02	; 2
     b58:	70 e0       	ldi	r23, 0x00	; 0
     b5a:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     b5e:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     b62:	09 95       	icall
     b64:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
     b68:	ff 91       	pop	r31
     b6a:	ef 91       	pop	r30
     b6c:	bf 91       	pop	r27
     b6e:	af 91       	pop	r26
     b70:	9f 91       	pop	r25
     b72:	8f 91       	pop	r24
     b74:	7f 91       	pop	r23
     b76:	6f 91       	pop	r22
     b78:	5f 91       	pop	r21
     b7a:	4f 91       	pop	r20
     b7c:	3f 91       	pop	r19
     b7e:	2f 91       	pop	r18
     b80:	0f 90       	pop	r0
     b82:	0f be       	out	0x3f, r0	; 63
     b84:	0f 90       	pop	r0
     b86:	1f 90       	pop	r1
     b88:	18 95       	reti

00000b8a <__vector_4>:
     b8a:	1f 92       	push	r1
     b8c:	0f 92       	push	r0
     b8e:	0f b6       	in	r0, 0x3f	; 63
     b90:	0f 92       	push	r0
     b92:	11 24       	eor	r1, r1
     b94:	2f 93       	push	r18
     b96:	3f 93       	push	r19
     b98:	4f 93       	push	r20
     b9a:	5f 93       	push	r21
     b9c:	6f 93       	push	r22
     b9e:	7f 93       	push	r23
     ba0:	8f 93       	push	r24
     ba2:	9f 93       	push	r25
     ba4:	af 93       	push	r26
     ba6:	bf 93       	push	r27
     ba8:	ef 93       	push	r30
     baa:	ff 93       	push	r31
     bac:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     bb0:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     bb4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bb8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bbc:	c9 01       	movw	r24, r18
     bbe:	03 2e       	mov	r0, r19
     bc0:	00 0c       	add	r0, r0
     bc2:	aa 0b       	sbc	r26, r26
     bc4:	bb 0b       	sbc	r27, r27
     bc6:	dc 01       	movw	r26, r24
     bc8:	99 27       	eor	r25, r25
     bca:	88 27       	eor	r24, r24
     bcc:	60 e0       	ldi	r22, 0x00	; 0
     bce:	70 e0       	ldi	r23, 0x00	; 0
     bd0:	84 2b       	or	r24, r20
     bd2:	95 2b       	or	r25, r21
     bd4:	a6 2b       	or	r26, r22
     bd6:	b7 2b       	or	r27, r23
     bd8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     bdc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     be0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     be4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     be8:	b0 9b       	sbis	0x16, 0	; 22
     bea:	1b c0       	rjmp	.+54     	; 0xc22 <__vector_4+0x98>
     bec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bf0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bf4:	c9 01       	movw	r24, r18
     bf6:	01 96       	adiw	r24, 0x01	; 1
     bf8:	09 2e       	mov	r0, r25
     bfa:	00 0c       	add	r0, r0
     bfc:	aa 0b       	sbc	r26, r26
     bfe:	bb 0b       	sbc	r27, r27
     c00:	dc 01       	movw	r26, r24
     c02:	99 27       	eor	r25, r25
     c04:	88 27       	eor	r24, r24
     c06:	60 e0       	ldi	r22, 0x00	; 0
     c08:	70 e0       	ldi	r23, 0x00	; 0
     c0a:	84 2b       	or	r24, r20
     c0c:	95 2b       	or	r25, r21
     c0e:	a6 2b       	or	r26, r22
     c10:	b7 2b       	or	r27, r23
     c12:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     c16:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     c1a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     c1e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     c22:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     c26:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     c2a:	30 97       	sbiw	r30, 0x00	; 0
     c2c:	39 f0       	breq	.+14     	; 0xc3c <__vector_4+0xb2>
     c2e:	63 e0       	ldi	r22, 0x03	; 3
     c30:	70 e0       	ldi	r23, 0x00	; 0
     c32:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     c36:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     c3a:	09 95       	icall
     c3c:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
     c40:	ff 91       	pop	r31
     c42:	ef 91       	pop	r30
     c44:	bf 91       	pop	r27
     c46:	af 91       	pop	r26
     c48:	9f 91       	pop	r25
     c4a:	8f 91       	pop	r24
     c4c:	7f 91       	pop	r23
     c4e:	6f 91       	pop	r22
     c50:	5f 91       	pop	r21
     c52:	4f 91       	pop	r20
     c54:	3f 91       	pop	r19
     c56:	2f 91       	pop	r18
     c58:	0f 90       	pop	r0
     c5a:	0f be       	out	0x3f, r0	; 63
     c5c:	0f 90       	pop	r0
     c5e:	1f 90       	pop	r1
     c60:	18 95       	reti

00000c62 <__vector_5>:
     c62:	1f 92       	push	r1
     c64:	0f 92       	push	r0
     c66:	0f b6       	in	r0, 0x3f	; 63
     c68:	0f 92       	push	r0
     c6a:	11 24       	eor	r1, r1
     c6c:	2f 93       	push	r18
     c6e:	3f 93       	push	r19
     c70:	4f 93       	push	r20
     c72:	5f 93       	push	r21
     c74:	6f 93       	push	r22
     c76:	7f 93       	push	r23
     c78:	8f 93       	push	r24
     c7a:	9f 93       	push	r25
     c7c:	af 93       	push	r26
     c7e:	bf 93       	push	r27
     c80:	ef 93       	push	r30
     c82:	ff 93       	push	r31
     c84:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     c88:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     c8c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c90:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c94:	c9 01       	movw	r24, r18
     c96:	03 2e       	mov	r0, r19
     c98:	00 0c       	add	r0, r0
     c9a:	aa 0b       	sbc	r26, r26
     c9c:	bb 0b       	sbc	r27, r27
     c9e:	dc 01       	movw	r26, r24
     ca0:	99 27       	eor	r25, r25
     ca2:	88 27       	eor	r24, r24
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	70 e0       	ldi	r23, 0x00	; 0
     ca8:	84 2b       	or	r24, r20
     caa:	95 2b       	or	r25, r21
     cac:	a6 2b       	or	r26, r22
     cae:	b7 2b       	or	r27, r23
     cb0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     cb4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     cb8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     cbc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     cc0:	b0 9b       	sbis	0x16, 0	; 22
     cc2:	1b c0       	rjmp	.+54     	; 0xcfa <__vector_5+0x98>
     cc4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cc8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ccc:	c9 01       	movw	r24, r18
     cce:	01 96       	adiw	r24, 0x01	; 1
     cd0:	09 2e       	mov	r0, r25
     cd2:	00 0c       	add	r0, r0
     cd4:	aa 0b       	sbc	r26, r26
     cd6:	bb 0b       	sbc	r27, r27
     cd8:	dc 01       	movw	r26, r24
     cda:	99 27       	eor	r25, r25
     cdc:	88 27       	eor	r24, r24
     cde:	60 e0       	ldi	r22, 0x00	; 0
     ce0:	70 e0       	ldi	r23, 0x00	; 0
     ce2:	84 2b       	or	r24, r20
     ce4:	95 2b       	or	r25, r21
     ce6:	a6 2b       	or	r26, r22
     ce8:	b7 2b       	or	r27, r23
     cea:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     cee:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     cf2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     cf6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     cfa:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
     cfe:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
     d02:	30 97       	sbiw	r30, 0x00	; 0
     d04:	39 f0       	breq	.+14     	; 0xd14 <__vector_5+0xb2>
     d06:	64 e0       	ldi	r22, 0x04	; 4
     d08:	70 e0       	ldi	r23, 0x00	; 0
     d0a:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
     d0e:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
     d12:	09 95       	icall
     d14:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
     d18:	ff 91       	pop	r31
     d1a:	ef 91       	pop	r30
     d1c:	bf 91       	pop	r27
     d1e:	af 91       	pop	r26
     d20:	9f 91       	pop	r25
     d22:	8f 91       	pop	r24
     d24:	7f 91       	pop	r23
     d26:	6f 91       	pop	r22
     d28:	5f 91       	pop	r21
     d2a:	4f 91       	pop	r20
     d2c:	3f 91       	pop	r19
     d2e:	2f 91       	pop	r18
     d30:	0f 90       	pop	r0
     d32:	0f be       	out	0x3f, r0	; 63
     d34:	0f 90       	pop	r0
     d36:	1f 90       	pop	r1
     d38:	18 95       	reti

00000d3a <__vector_10>:
     d3a:	1f 92       	push	r1
     d3c:	0f 92       	push	r0
     d3e:	0f b6       	in	r0, 0x3f	; 63
     d40:	0f 92       	push	r0
     d42:	11 24       	eor	r1, r1
     d44:	2f 93       	push	r18
     d46:	3f 93       	push	r19
     d48:	4f 93       	push	r20
     d4a:	5f 93       	push	r21
     d4c:	6f 93       	push	r22
     d4e:	7f 93       	push	r23
     d50:	8f 93       	push	r24
     d52:	9f 93       	push	r25
     d54:	af 93       	push	r26
     d56:	bf 93       	push	r27
     d58:	ef 93       	push	r30
     d5a:	ff 93       	push	r31
     d5c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     d60:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     d64:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d68:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d6c:	c9 01       	movw	r24, r18
     d6e:	03 2e       	mov	r0, r19
     d70:	00 0c       	add	r0, r0
     d72:	aa 0b       	sbc	r26, r26
     d74:	bb 0b       	sbc	r27, r27
     d76:	dc 01       	movw	r26, r24
     d78:	99 27       	eor	r25, r25
     d7a:	88 27       	eor	r24, r24
     d7c:	60 e0       	ldi	r22, 0x00	; 0
     d7e:	70 e0       	ldi	r23, 0x00	; 0
     d80:	84 2b       	or	r24, r20
     d82:	95 2b       	or	r25, r21
     d84:	a6 2b       	or	r26, r22
     d86:	b7 2b       	or	r27, r23
     d88:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     d8c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     d90:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     d94:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     d98:	b0 9b       	sbis	0x16, 0	; 22
     d9a:	1b c0       	rjmp	.+54     	; 0xdd2 <__vector_10+0x98>
     d9c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     da0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     da4:	c9 01       	movw	r24, r18
     da6:	01 96       	adiw	r24, 0x01	; 1
     da8:	09 2e       	mov	r0, r25
     daa:	00 0c       	add	r0, r0
     dac:	aa 0b       	sbc	r26, r26
     dae:	bb 0b       	sbc	r27, r27
     db0:	dc 01       	movw	r26, r24
     db2:	99 27       	eor	r25, r25
     db4:	88 27       	eor	r24, r24
     db6:	60 e0       	ldi	r22, 0x00	; 0
     db8:	70 e0       	ldi	r23, 0x00	; 0
     dba:	84 2b       	or	r24, r20
     dbc:	95 2b       	or	r25, r21
     dbe:	a6 2b       	or	r26, r22
     dc0:	b7 2b       	or	r27, r23
     dc2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     dc6:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     dca:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     dce:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     dd2:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
     dd6:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
     dda:	30 97       	sbiw	r30, 0x00	; 0
     ddc:	39 f0       	breq	.+14     	; 0xdec <__vector_10+0xb2>
     dde:	65 e0       	ldi	r22, 0x05	; 5
     de0:	70 e0       	ldi	r23, 0x00	; 0
     de2:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
     de6:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
     dea:	09 95       	icall
     dec:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
     df0:	ff 91       	pop	r31
     df2:	ef 91       	pop	r30
     df4:	bf 91       	pop	r27
     df6:	af 91       	pop	r26
     df8:	9f 91       	pop	r25
     dfa:	8f 91       	pop	r24
     dfc:	7f 91       	pop	r23
     dfe:	6f 91       	pop	r22
     e00:	5f 91       	pop	r21
     e02:	4f 91       	pop	r20
     e04:	3f 91       	pop	r19
     e06:	2f 91       	pop	r18
     e08:	0f 90       	pop	r0
     e0a:	0f be       	out	0x3f, r0	; 63
     e0c:	0f 90       	pop	r0
     e0e:	1f 90       	pop	r1
     e10:	18 95       	reti

00000e12 <__vector_11>:
     e12:	1f 92       	push	r1
     e14:	0f 92       	push	r0
     e16:	0f b6       	in	r0, 0x3f	; 63
     e18:	0f 92       	push	r0
     e1a:	11 24       	eor	r1, r1
     e1c:	2f 93       	push	r18
     e1e:	3f 93       	push	r19
     e20:	4f 93       	push	r20
     e22:	5f 93       	push	r21
     e24:	6f 93       	push	r22
     e26:	7f 93       	push	r23
     e28:	8f 93       	push	r24
     e2a:	9f 93       	push	r25
     e2c:	af 93       	push	r26
     e2e:	bf 93       	push	r27
     e30:	ef 93       	push	r30
     e32:	ff 93       	push	r31
     e34:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     e38:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     e3c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e40:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e44:	c9 01       	movw	r24, r18
     e46:	03 2e       	mov	r0, r19
     e48:	00 0c       	add	r0, r0
     e4a:	aa 0b       	sbc	r26, r26
     e4c:	bb 0b       	sbc	r27, r27
     e4e:	dc 01       	movw	r26, r24
     e50:	99 27       	eor	r25, r25
     e52:	88 27       	eor	r24, r24
     e54:	60 e0       	ldi	r22, 0x00	; 0
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	84 2b       	or	r24, r20
     e5a:	95 2b       	or	r25, r21
     e5c:	a6 2b       	or	r26, r22
     e5e:	b7 2b       	or	r27, r23
     e60:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e64:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e68:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e6c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e70:	b0 9b       	sbis	0x16, 0	; 22
     e72:	1b c0       	rjmp	.+54     	; 0xeaa <__vector_11+0x98>
     e74:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e78:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e7c:	c9 01       	movw	r24, r18
     e7e:	01 96       	adiw	r24, 0x01	; 1
     e80:	09 2e       	mov	r0, r25
     e82:	00 0c       	add	r0, r0
     e84:	aa 0b       	sbc	r26, r26
     e86:	bb 0b       	sbc	r27, r27
     e88:	dc 01       	movw	r26, r24
     e8a:	99 27       	eor	r25, r25
     e8c:	88 27       	eor	r24, r24
     e8e:	60 e0       	ldi	r22, 0x00	; 0
     e90:	70 e0       	ldi	r23, 0x00	; 0
     e92:	84 2b       	or	r24, r20
     e94:	95 2b       	or	r25, r21
     e96:	a6 2b       	or	r26, r22
     e98:	b7 2b       	or	r27, r23
     e9a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e9e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     ea2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     ea6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     eaa:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
     eae:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
     eb2:	30 97       	sbiw	r30, 0x00	; 0
     eb4:	39 f0       	breq	.+14     	; 0xec4 <__vector_11+0xb2>
     eb6:	66 e0       	ldi	r22, 0x06	; 6
     eb8:	70 e0       	ldi	r23, 0x00	; 0
     eba:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
     ebe:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
     ec2:	09 95       	icall
     ec4:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
     ec8:	ff 91       	pop	r31
     eca:	ef 91       	pop	r30
     ecc:	bf 91       	pop	r27
     ece:	af 91       	pop	r26
     ed0:	9f 91       	pop	r25
     ed2:	8f 91       	pop	r24
     ed4:	7f 91       	pop	r23
     ed6:	6f 91       	pop	r22
     ed8:	5f 91       	pop	r21
     eda:	4f 91       	pop	r20
     edc:	3f 91       	pop	r19
     ede:	2f 91       	pop	r18
     ee0:	0f 90       	pop	r0
     ee2:	0f be       	out	0x3f, r0	; 63
     ee4:	0f 90       	pop	r0
     ee6:	1f 90       	pop	r1
     ee8:	18 95       	reti

00000eea <__vector_12>:
     eea:	1f 92       	push	r1
     eec:	0f 92       	push	r0
     eee:	0f b6       	in	r0, 0x3f	; 63
     ef0:	0f 92       	push	r0
     ef2:	11 24       	eor	r1, r1
     ef4:	2f 93       	push	r18
     ef6:	3f 93       	push	r19
     ef8:	4f 93       	push	r20
     efa:	5f 93       	push	r21
     efc:	6f 93       	push	r22
     efe:	7f 93       	push	r23
     f00:	8f 93       	push	r24
     f02:	9f 93       	push	r25
     f04:	af 93       	push	r26
     f06:	bf 93       	push	r27
     f08:	ef 93       	push	r30
     f0a:	ff 93       	push	r31
     f0c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     f10:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     f14:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f18:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f1c:	c9 01       	movw	r24, r18
     f1e:	03 2e       	mov	r0, r19
     f20:	00 0c       	add	r0, r0
     f22:	aa 0b       	sbc	r26, r26
     f24:	bb 0b       	sbc	r27, r27
     f26:	dc 01       	movw	r26, r24
     f28:	99 27       	eor	r25, r25
     f2a:	88 27       	eor	r24, r24
     f2c:	60 e0       	ldi	r22, 0x00	; 0
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	84 2b       	or	r24, r20
     f32:	95 2b       	or	r25, r21
     f34:	a6 2b       	or	r26, r22
     f36:	b7 2b       	or	r27, r23
     f38:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f3c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f40:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f44:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f48:	b0 9b       	sbis	0x16, 0	; 22
     f4a:	1b c0       	rjmp	.+54     	; 0xf82 <__vector_12+0x98>
     f4c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f50:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f54:	c9 01       	movw	r24, r18
     f56:	01 96       	adiw	r24, 0x01	; 1
     f58:	09 2e       	mov	r0, r25
     f5a:	00 0c       	add	r0, r0
     f5c:	aa 0b       	sbc	r26, r26
     f5e:	bb 0b       	sbc	r27, r27
     f60:	dc 01       	movw	r26, r24
     f62:	99 27       	eor	r25, r25
     f64:	88 27       	eor	r24, r24
     f66:	60 e0       	ldi	r22, 0x00	; 0
     f68:	70 e0       	ldi	r23, 0x00	; 0
     f6a:	84 2b       	or	r24, r20
     f6c:	95 2b       	or	r25, r21
     f6e:	a6 2b       	or	r26, r22
     f70:	b7 2b       	or	r27, r23
     f72:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f76:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f7a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f7e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f82:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
     f86:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
     f8a:	30 97       	sbiw	r30, 0x00	; 0
     f8c:	39 f0       	breq	.+14     	; 0xf9c <__vector_12+0xb2>
     f8e:	67 e0       	ldi	r22, 0x07	; 7
     f90:	70 e0       	ldi	r23, 0x00	; 0
     f92:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
     f96:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
     f9a:	09 95       	icall
     f9c:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
     fa0:	ff 91       	pop	r31
     fa2:	ef 91       	pop	r30
     fa4:	bf 91       	pop	r27
     fa6:	af 91       	pop	r26
     fa8:	9f 91       	pop	r25
     faa:	8f 91       	pop	r24
     fac:	7f 91       	pop	r23
     fae:	6f 91       	pop	r22
     fb0:	5f 91       	pop	r21
     fb2:	4f 91       	pop	r20
     fb4:	3f 91       	pop	r19
     fb6:	2f 91       	pop	r18
     fb8:	0f 90       	pop	r0
     fba:	0f be       	out	0x3f, r0	; 63
     fbc:	0f 90       	pop	r0
     fbe:	1f 90       	pop	r1
     fc0:	18 95       	reti

00000fc2 <__vector_13>:
     fc2:	1f 92       	push	r1
     fc4:	0f 92       	push	r0
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	0f 92       	push	r0
     fca:	11 24       	eor	r1, r1
     fcc:	2f 93       	push	r18
     fce:	3f 93       	push	r19
     fd0:	4f 93       	push	r20
     fd2:	5f 93       	push	r21
     fd4:	6f 93       	push	r22
     fd6:	7f 93       	push	r23
     fd8:	8f 93       	push	r24
     fda:	9f 93       	push	r25
     fdc:	af 93       	push	r26
     fde:	bf 93       	push	r27
     fe0:	ef 93       	push	r30
     fe2:	ff 93       	push	r31
     fe4:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     fe8:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     fec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ff0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ff4:	c9 01       	movw	r24, r18
     ff6:	03 2e       	mov	r0, r19
     ff8:	00 0c       	add	r0, r0
     ffa:	aa 0b       	sbc	r26, r26
     ffc:	bb 0b       	sbc	r27, r27
     ffe:	dc 01       	movw	r26, r24
    1000:	99 27       	eor	r25, r25
    1002:	88 27       	eor	r24, r24
    1004:	60 e0       	ldi	r22, 0x00	; 0
    1006:	70 e0       	ldi	r23, 0x00	; 0
    1008:	84 2b       	or	r24, r20
    100a:	95 2b       	or	r25, r21
    100c:	a6 2b       	or	r26, r22
    100e:	b7 2b       	or	r27, r23
    1010:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1014:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1018:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    101c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1020:	b0 9b       	sbis	0x16, 0	; 22
    1022:	1b c0       	rjmp	.+54     	; 0x105a <__vector_13+0x98>
    1024:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1028:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    102c:	c9 01       	movw	r24, r18
    102e:	01 96       	adiw	r24, 0x01	; 1
    1030:	09 2e       	mov	r0, r25
    1032:	00 0c       	add	r0, r0
    1034:	aa 0b       	sbc	r26, r26
    1036:	bb 0b       	sbc	r27, r27
    1038:	dc 01       	movw	r26, r24
    103a:	99 27       	eor	r25, r25
    103c:	88 27       	eor	r24, r24
    103e:	60 e0       	ldi	r22, 0x00	; 0
    1040:	70 e0       	ldi	r23, 0x00	; 0
    1042:	84 2b       	or	r24, r20
    1044:	95 2b       	or	r25, r21
    1046:	a6 2b       	or	r26, r22
    1048:	b7 2b       	or	r27, r23
    104a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    104e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1052:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1056:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    105a:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
    105e:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
    1062:	30 97       	sbiw	r30, 0x00	; 0
    1064:	39 f0       	breq	.+14     	; 0x1074 <__vector_13+0xb2>
    1066:	68 e0       	ldi	r22, 0x08	; 8
    1068:	70 e0       	ldi	r23, 0x00	; 0
    106a:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
    106e:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
    1072:	09 95       	icall
    1074:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    1078:	ff 91       	pop	r31
    107a:	ef 91       	pop	r30
    107c:	bf 91       	pop	r27
    107e:	af 91       	pop	r26
    1080:	9f 91       	pop	r25
    1082:	8f 91       	pop	r24
    1084:	7f 91       	pop	r23
    1086:	6f 91       	pop	r22
    1088:	5f 91       	pop	r21
    108a:	4f 91       	pop	r20
    108c:	3f 91       	pop	r19
    108e:	2f 91       	pop	r18
    1090:	0f 90       	pop	r0
    1092:	0f be       	out	0x3f, r0	; 63
    1094:	0f 90       	pop	r0
    1096:	1f 90       	pop	r1
    1098:	18 95       	reti

0000109a <__vector_14>:
    109a:	1f 92       	push	r1
    109c:	0f 92       	push	r0
    109e:	0f b6       	in	r0, 0x3f	; 63
    10a0:	0f 92       	push	r0
    10a2:	11 24       	eor	r1, r1
    10a4:	2f 93       	push	r18
    10a6:	3f 93       	push	r19
    10a8:	4f 93       	push	r20
    10aa:	5f 93       	push	r21
    10ac:	6f 93       	push	r22
    10ae:	7f 93       	push	r23
    10b0:	8f 93       	push	r24
    10b2:	9f 93       	push	r25
    10b4:	af 93       	push	r26
    10b6:	bf 93       	push	r27
    10b8:	ef 93       	push	r30
    10ba:	ff 93       	push	r31
    10bc:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    10c0:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    10c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10cc:	c9 01       	movw	r24, r18
    10ce:	03 2e       	mov	r0, r19
    10d0:	00 0c       	add	r0, r0
    10d2:	aa 0b       	sbc	r26, r26
    10d4:	bb 0b       	sbc	r27, r27
    10d6:	dc 01       	movw	r26, r24
    10d8:	99 27       	eor	r25, r25
    10da:	88 27       	eor	r24, r24
    10dc:	60 e0       	ldi	r22, 0x00	; 0
    10de:	70 e0       	ldi	r23, 0x00	; 0
    10e0:	84 2b       	or	r24, r20
    10e2:	95 2b       	or	r25, r21
    10e4:	a6 2b       	or	r26, r22
    10e6:	b7 2b       	or	r27, r23
    10e8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    10ec:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    10f0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    10f4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    10f8:	b0 9b       	sbis	0x16, 0	; 22
    10fa:	1b c0       	rjmp	.+54     	; 0x1132 <__vector_14+0x98>
    10fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1100:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1104:	c9 01       	movw	r24, r18
    1106:	01 96       	adiw	r24, 0x01	; 1
    1108:	09 2e       	mov	r0, r25
    110a:	00 0c       	add	r0, r0
    110c:	aa 0b       	sbc	r26, r26
    110e:	bb 0b       	sbc	r27, r27
    1110:	dc 01       	movw	r26, r24
    1112:	99 27       	eor	r25, r25
    1114:	88 27       	eor	r24, r24
    1116:	60 e0       	ldi	r22, 0x00	; 0
    1118:	70 e0       	ldi	r23, 0x00	; 0
    111a:	84 2b       	or	r24, r20
    111c:	95 2b       	or	r25, r21
    111e:	a6 2b       	or	r26, r22
    1120:	b7 2b       	or	r27, r23
    1122:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1126:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    112a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    112e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1132:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
    1136:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
    113a:	30 97       	sbiw	r30, 0x00	; 0
    113c:	39 f0       	breq	.+14     	; 0x114c <__vector_14+0xb2>
    113e:	69 e0       	ldi	r22, 0x09	; 9
    1140:	70 e0       	ldi	r23, 0x00	; 0
    1142:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
    1146:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
    114a:	09 95       	icall
    114c:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    1150:	ff 91       	pop	r31
    1152:	ef 91       	pop	r30
    1154:	bf 91       	pop	r27
    1156:	af 91       	pop	r26
    1158:	9f 91       	pop	r25
    115a:	8f 91       	pop	r24
    115c:	7f 91       	pop	r23
    115e:	6f 91       	pop	r22
    1160:	5f 91       	pop	r21
    1162:	4f 91       	pop	r20
    1164:	3f 91       	pop	r19
    1166:	2f 91       	pop	r18
    1168:	0f 90       	pop	r0
    116a:	0f be       	out	0x3f, r0	; 63
    116c:	0f 90       	pop	r0
    116e:	1f 90       	pop	r1
    1170:	18 95       	reti

00001172 <__vector_15>:
    1172:	1f 92       	push	r1
    1174:	0f 92       	push	r0
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	0f 92       	push	r0
    117a:	11 24       	eor	r1, r1
    117c:	2f 93       	push	r18
    117e:	3f 93       	push	r19
    1180:	4f 93       	push	r20
    1182:	5f 93       	push	r21
    1184:	6f 93       	push	r22
    1186:	7f 93       	push	r23
    1188:	8f 93       	push	r24
    118a:	9f 93       	push	r25
    118c:	af 93       	push	r26
    118e:	bf 93       	push	r27
    1190:	ef 93       	push	r30
    1192:	ff 93       	push	r31
    1194:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1198:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    119c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11a4:	c9 01       	movw	r24, r18
    11a6:	03 2e       	mov	r0, r19
    11a8:	00 0c       	add	r0, r0
    11aa:	aa 0b       	sbc	r26, r26
    11ac:	bb 0b       	sbc	r27, r27
    11ae:	dc 01       	movw	r26, r24
    11b0:	99 27       	eor	r25, r25
    11b2:	88 27       	eor	r24, r24
    11b4:	60 e0       	ldi	r22, 0x00	; 0
    11b6:	70 e0       	ldi	r23, 0x00	; 0
    11b8:	84 2b       	or	r24, r20
    11ba:	95 2b       	or	r25, r21
    11bc:	a6 2b       	or	r26, r22
    11be:	b7 2b       	or	r27, r23
    11c0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    11c4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    11c8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    11cc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    11d0:	b0 9b       	sbis	0x16, 0	; 22
    11d2:	1b c0       	rjmp	.+54     	; 0x120a <__vector_15+0x98>
    11d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11dc:	c9 01       	movw	r24, r18
    11de:	01 96       	adiw	r24, 0x01	; 1
    11e0:	09 2e       	mov	r0, r25
    11e2:	00 0c       	add	r0, r0
    11e4:	aa 0b       	sbc	r26, r26
    11e6:	bb 0b       	sbc	r27, r27
    11e8:	dc 01       	movw	r26, r24
    11ea:	99 27       	eor	r25, r25
    11ec:	88 27       	eor	r24, r24
    11ee:	60 e0       	ldi	r22, 0x00	; 0
    11f0:	70 e0       	ldi	r23, 0x00	; 0
    11f2:	84 2b       	or	r24, r20
    11f4:	95 2b       	or	r25, r21
    11f6:	a6 2b       	or	r26, r22
    11f8:	b7 2b       	or	r27, r23
    11fa:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    11fe:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1202:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1206:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    120a:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
    120e:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    1212:	30 97       	sbiw	r30, 0x00	; 0
    1214:	39 f0       	breq	.+14     	; 0x1224 <__vector_15+0xb2>
    1216:	6a e0       	ldi	r22, 0x0A	; 10
    1218:	70 e0       	ldi	r23, 0x00	; 0
    121a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    121e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    1222:	09 95       	icall
    1224:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    1228:	ff 91       	pop	r31
    122a:	ef 91       	pop	r30
    122c:	bf 91       	pop	r27
    122e:	af 91       	pop	r26
    1230:	9f 91       	pop	r25
    1232:	8f 91       	pop	r24
    1234:	7f 91       	pop	r23
    1236:	6f 91       	pop	r22
    1238:	5f 91       	pop	r21
    123a:	4f 91       	pop	r20
    123c:	3f 91       	pop	r19
    123e:	2f 91       	pop	r18
    1240:	0f 90       	pop	r0
    1242:	0f be       	out	0x3f, r0	; 63
    1244:	0f 90       	pop	r0
    1246:	1f 90       	pop	r1
    1248:	18 95       	reti

0000124a <__vector_16>:
    124a:	1f 92       	push	r1
    124c:	0f 92       	push	r0
    124e:	0f b6       	in	r0, 0x3f	; 63
    1250:	0f 92       	push	r0
    1252:	11 24       	eor	r1, r1
    1254:	2f 93       	push	r18
    1256:	3f 93       	push	r19
    1258:	4f 93       	push	r20
    125a:	5f 93       	push	r21
    125c:	6f 93       	push	r22
    125e:	7f 93       	push	r23
    1260:	8f 93       	push	r24
    1262:	9f 93       	push	r25
    1264:	af 93       	push	r26
    1266:	bf 93       	push	r27
    1268:	ef 93       	push	r30
    126a:	ff 93       	push	r31
    126c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1270:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1274:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1278:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    127c:	c9 01       	movw	r24, r18
    127e:	03 2e       	mov	r0, r19
    1280:	00 0c       	add	r0, r0
    1282:	aa 0b       	sbc	r26, r26
    1284:	bb 0b       	sbc	r27, r27
    1286:	dc 01       	movw	r26, r24
    1288:	99 27       	eor	r25, r25
    128a:	88 27       	eor	r24, r24
    128c:	60 e0       	ldi	r22, 0x00	; 0
    128e:	70 e0       	ldi	r23, 0x00	; 0
    1290:	84 2b       	or	r24, r20
    1292:	95 2b       	or	r25, r21
    1294:	a6 2b       	or	r26, r22
    1296:	b7 2b       	or	r27, r23
    1298:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    129c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    12a0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    12a4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    12a8:	b0 9b       	sbis	0x16, 0	; 22
    12aa:	1b c0       	rjmp	.+54     	; 0x12e2 <__vector_16+0x98>
    12ac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12b0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12b4:	c9 01       	movw	r24, r18
    12b6:	01 96       	adiw	r24, 0x01	; 1
    12b8:	09 2e       	mov	r0, r25
    12ba:	00 0c       	add	r0, r0
    12bc:	aa 0b       	sbc	r26, r26
    12be:	bb 0b       	sbc	r27, r27
    12c0:	dc 01       	movw	r26, r24
    12c2:	99 27       	eor	r25, r25
    12c4:	88 27       	eor	r24, r24
    12c6:	60 e0       	ldi	r22, 0x00	; 0
    12c8:	70 e0       	ldi	r23, 0x00	; 0
    12ca:	84 2b       	or	r24, r20
    12cc:	95 2b       	or	r25, r21
    12ce:	a6 2b       	or	r26, r22
    12d0:	b7 2b       	or	r27, r23
    12d2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    12d6:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    12da:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    12de:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    12e2:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    12e6:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    12ea:	30 97       	sbiw	r30, 0x00	; 0
    12ec:	39 f0       	breq	.+14     	; 0x12fc <__vector_16+0xb2>
    12ee:	6b e0       	ldi	r22, 0x0B	; 11
    12f0:	70 e0       	ldi	r23, 0x00	; 0
    12f2:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    12f6:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    12fa:	09 95       	icall
    12fc:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    1300:	ff 91       	pop	r31
    1302:	ef 91       	pop	r30
    1304:	bf 91       	pop	r27
    1306:	af 91       	pop	r26
    1308:	9f 91       	pop	r25
    130a:	8f 91       	pop	r24
    130c:	7f 91       	pop	r23
    130e:	6f 91       	pop	r22
    1310:	5f 91       	pop	r21
    1312:	4f 91       	pop	r20
    1314:	3f 91       	pop	r19
    1316:	2f 91       	pop	r18
    1318:	0f 90       	pop	r0
    131a:	0f be       	out	0x3f, r0	; 63
    131c:	0f 90       	pop	r0
    131e:	1f 90       	pop	r1
    1320:	18 95       	reti

00001322 <__vector_17>:
    1322:	1f 92       	push	r1
    1324:	0f 92       	push	r0
    1326:	0f b6       	in	r0, 0x3f	; 63
    1328:	0f 92       	push	r0
    132a:	11 24       	eor	r1, r1
    132c:	2f 93       	push	r18
    132e:	3f 93       	push	r19
    1330:	4f 93       	push	r20
    1332:	5f 93       	push	r21
    1334:	6f 93       	push	r22
    1336:	7f 93       	push	r23
    1338:	8f 93       	push	r24
    133a:	9f 93       	push	r25
    133c:	af 93       	push	r26
    133e:	bf 93       	push	r27
    1340:	ef 93       	push	r30
    1342:	ff 93       	push	r31
    1344:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1348:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    134c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1350:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1354:	c9 01       	movw	r24, r18
    1356:	03 2e       	mov	r0, r19
    1358:	00 0c       	add	r0, r0
    135a:	aa 0b       	sbc	r26, r26
    135c:	bb 0b       	sbc	r27, r27
    135e:	dc 01       	movw	r26, r24
    1360:	99 27       	eor	r25, r25
    1362:	88 27       	eor	r24, r24
    1364:	60 e0       	ldi	r22, 0x00	; 0
    1366:	70 e0       	ldi	r23, 0x00	; 0
    1368:	84 2b       	or	r24, r20
    136a:	95 2b       	or	r25, r21
    136c:	a6 2b       	or	r26, r22
    136e:	b7 2b       	or	r27, r23
    1370:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1374:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1378:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    137c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1380:	b0 9b       	sbis	0x16, 0	; 22
    1382:	1b c0       	rjmp	.+54     	; 0x13ba <__vector_17+0x98>
    1384:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1388:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    138c:	c9 01       	movw	r24, r18
    138e:	01 96       	adiw	r24, 0x01	; 1
    1390:	09 2e       	mov	r0, r25
    1392:	00 0c       	add	r0, r0
    1394:	aa 0b       	sbc	r26, r26
    1396:	bb 0b       	sbc	r27, r27
    1398:	dc 01       	movw	r26, r24
    139a:	99 27       	eor	r25, r25
    139c:	88 27       	eor	r24, r24
    139e:	60 e0       	ldi	r22, 0x00	; 0
    13a0:	70 e0       	ldi	r23, 0x00	; 0
    13a2:	84 2b       	or	r24, r20
    13a4:	95 2b       	or	r25, r21
    13a6:	a6 2b       	or	r26, r22
    13a8:	b7 2b       	or	r27, r23
    13aa:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    13ae:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    13b2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    13b6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    13ba:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    13be:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    13c2:	30 97       	sbiw	r30, 0x00	; 0
    13c4:	39 f0       	breq	.+14     	; 0x13d4 <__vector_17+0xb2>
    13c6:	6c e0       	ldi	r22, 0x0C	; 12
    13c8:	70 e0       	ldi	r23, 0x00	; 0
    13ca:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    13ce:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    13d2:	09 95       	icall
    13d4:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    13d8:	ff 91       	pop	r31
    13da:	ef 91       	pop	r30
    13dc:	bf 91       	pop	r27
    13de:	af 91       	pop	r26
    13e0:	9f 91       	pop	r25
    13e2:	8f 91       	pop	r24
    13e4:	7f 91       	pop	r23
    13e6:	6f 91       	pop	r22
    13e8:	5f 91       	pop	r21
    13ea:	4f 91       	pop	r20
    13ec:	3f 91       	pop	r19
    13ee:	2f 91       	pop	r18
    13f0:	0f 90       	pop	r0
    13f2:	0f be       	out	0x3f, r0	; 63
    13f4:	0f 90       	pop	r0
    13f6:	1f 90       	pop	r1
    13f8:	18 95       	reti

000013fa <__vector_18>:
    13fa:	1f 92       	push	r1
    13fc:	0f 92       	push	r0
    13fe:	0f b6       	in	r0, 0x3f	; 63
    1400:	0f 92       	push	r0
    1402:	11 24       	eor	r1, r1
    1404:	2f 93       	push	r18
    1406:	3f 93       	push	r19
    1408:	4f 93       	push	r20
    140a:	5f 93       	push	r21
    140c:	6f 93       	push	r22
    140e:	7f 93       	push	r23
    1410:	8f 93       	push	r24
    1412:	9f 93       	push	r25
    1414:	af 93       	push	r26
    1416:	bf 93       	push	r27
    1418:	ef 93       	push	r30
    141a:	ff 93       	push	r31
    141c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1420:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1424:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1428:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    142c:	c9 01       	movw	r24, r18
    142e:	03 2e       	mov	r0, r19
    1430:	00 0c       	add	r0, r0
    1432:	aa 0b       	sbc	r26, r26
    1434:	bb 0b       	sbc	r27, r27
    1436:	dc 01       	movw	r26, r24
    1438:	99 27       	eor	r25, r25
    143a:	88 27       	eor	r24, r24
    143c:	60 e0       	ldi	r22, 0x00	; 0
    143e:	70 e0       	ldi	r23, 0x00	; 0
    1440:	84 2b       	or	r24, r20
    1442:	95 2b       	or	r25, r21
    1444:	a6 2b       	or	r26, r22
    1446:	b7 2b       	or	r27, r23
    1448:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    144c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1450:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1454:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1458:	b0 9b       	sbis	0x16, 0	; 22
    145a:	1b c0       	rjmp	.+54     	; 0x1492 <__vector_18+0x98>
    145c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1460:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1464:	c9 01       	movw	r24, r18
    1466:	01 96       	adiw	r24, 0x01	; 1
    1468:	09 2e       	mov	r0, r25
    146a:	00 0c       	add	r0, r0
    146c:	aa 0b       	sbc	r26, r26
    146e:	bb 0b       	sbc	r27, r27
    1470:	dc 01       	movw	r26, r24
    1472:	99 27       	eor	r25, r25
    1474:	88 27       	eor	r24, r24
    1476:	60 e0       	ldi	r22, 0x00	; 0
    1478:	70 e0       	ldi	r23, 0x00	; 0
    147a:	84 2b       	or	r24, r20
    147c:	95 2b       	or	r25, r21
    147e:	a6 2b       	or	r26, r22
    1480:	b7 2b       	or	r27, r23
    1482:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1486:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    148a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    148e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1492:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    1496:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    149a:	30 97       	sbiw	r30, 0x00	; 0
    149c:	39 f0       	breq	.+14     	; 0x14ac <__vector_18+0xb2>
    149e:	6d e0       	ldi	r22, 0x0D	; 13
    14a0:	70 e0       	ldi	r23, 0x00	; 0
    14a2:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    14a6:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    14aa:	09 95       	icall
    14ac:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    14b0:	ff 91       	pop	r31
    14b2:	ef 91       	pop	r30
    14b4:	bf 91       	pop	r27
    14b6:	af 91       	pop	r26
    14b8:	9f 91       	pop	r25
    14ba:	8f 91       	pop	r24
    14bc:	7f 91       	pop	r23
    14be:	6f 91       	pop	r22
    14c0:	5f 91       	pop	r21
    14c2:	4f 91       	pop	r20
    14c4:	3f 91       	pop	r19
    14c6:	2f 91       	pop	r18
    14c8:	0f 90       	pop	r0
    14ca:	0f be       	out	0x3f, r0	; 63
    14cc:	0f 90       	pop	r0
    14ce:	1f 90       	pop	r1
    14d0:	18 95       	reti

000014d2 <__vector_19>:
    14d2:	1f 92       	push	r1
    14d4:	0f 92       	push	r0
    14d6:	0f b6       	in	r0, 0x3f	; 63
    14d8:	0f 92       	push	r0
    14da:	11 24       	eor	r1, r1
    14dc:	2f 93       	push	r18
    14de:	3f 93       	push	r19
    14e0:	4f 93       	push	r20
    14e2:	5f 93       	push	r21
    14e4:	6f 93       	push	r22
    14e6:	7f 93       	push	r23
    14e8:	8f 93       	push	r24
    14ea:	9f 93       	push	r25
    14ec:	af 93       	push	r26
    14ee:	bf 93       	push	r27
    14f0:	ef 93       	push	r30
    14f2:	ff 93       	push	r31
    14f4:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    14f8:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    14fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1500:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1504:	c9 01       	movw	r24, r18
    1506:	03 2e       	mov	r0, r19
    1508:	00 0c       	add	r0, r0
    150a:	aa 0b       	sbc	r26, r26
    150c:	bb 0b       	sbc	r27, r27
    150e:	dc 01       	movw	r26, r24
    1510:	99 27       	eor	r25, r25
    1512:	88 27       	eor	r24, r24
    1514:	60 e0       	ldi	r22, 0x00	; 0
    1516:	70 e0       	ldi	r23, 0x00	; 0
    1518:	84 2b       	or	r24, r20
    151a:	95 2b       	or	r25, r21
    151c:	a6 2b       	or	r26, r22
    151e:	b7 2b       	or	r27, r23
    1520:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1524:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1528:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    152c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1530:	b0 9b       	sbis	0x16, 0	; 22
    1532:	1b c0       	rjmp	.+54     	; 0x156a <__vector_19+0x98>
    1534:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1538:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    153c:	c9 01       	movw	r24, r18
    153e:	01 96       	adiw	r24, 0x01	; 1
    1540:	09 2e       	mov	r0, r25
    1542:	00 0c       	add	r0, r0
    1544:	aa 0b       	sbc	r26, r26
    1546:	bb 0b       	sbc	r27, r27
    1548:	dc 01       	movw	r26, r24
    154a:	99 27       	eor	r25, r25
    154c:	88 27       	eor	r24, r24
    154e:	60 e0       	ldi	r22, 0x00	; 0
    1550:	70 e0       	ldi	r23, 0x00	; 0
    1552:	84 2b       	or	r24, r20
    1554:	95 2b       	or	r25, r21
    1556:	a6 2b       	or	r26, r22
    1558:	b7 2b       	or	r27, r23
    155a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    155e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1562:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1566:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    156a:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    156e:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    1572:	30 97       	sbiw	r30, 0x00	; 0
    1574:	39 f0       	breq	.+14     	; 0x1584 <__vector_19+0xb2>
    1576:	6e e0       	ldi	r22, 0x0E	; 14
    1578:	70 e0       	ldi	r23, 0x00	; 0
    157a:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    157e:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    1582:	09 95       	icall
    1584:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    1588:	ff 91       	pop	r31
    158a:	ef 91       	pop	r30
    158c:	bf 91       	pop	r27
    158e:	af 91       	pop	r26
    1590:	9f 91       	pop	r25
    1592:	8f 91       	pop	r24
    1594:	7f 91       	pop	r23
    1596:	6f 91       	pop	r22
    1598:	5f 91       	pop	r21
    159a:	4f 91       	pop	r20
    159c:	3f 91       	pop	r19
    159e:	2f 91       	pop	r18
    15a0:	0f 90       	pop	r0
    15a2:	0f be       	out	0x3f, r0	; 63
    15a4:	0f 90       	pop	r0
    15a6:	1f 90       	pop	r1
    15a8:	18 95       	reti

000015aa <__vector_20>:
    15aa:	1f 92       	push	r1
    15ac:	0f 92       	push	r0
    15ae:	0f b6       	in	r0, 0x3f	; 63
    15b0:	0f 92       	push	r0
    15b2:	11 24       	eor	r1, r1
    15b4:	2f 93       	push	r18
    15b6:	3f 93       	push	r19
    15b8:	4f 93       	push	r20
    15ba:	5f 93       	push	r21
    15bc:	6f 93       	push	r22
    15be:	7f 93       	push	r23
    15c0:	8f 93       	push	r24
    15c2:	9f 93       	push	r25
    15c4:	af 93       	push	r26
    15c6:	bf 93       	push	r27
    15c8:	ef 93       	push	r30
    15ca:	ff 93       	push	r31
    15cc:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    15d0:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    15d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15dc:	c9 01       	movw	r24, r18
    15de:	03 2e       	mov	r0, r19
    15e0:	00 0c       	add	r0, r0
    15e2:	aa 0b       	sbc	r26, r26
    15e4:	bb 0b       	sbc	r27, r27
    15e6:	dc 01       	movw	r26, r24
    15e8:	99 27       	eor	r25, r25
    15ea:	88 27       	eor	r24, r24
    15ec:	60 e0       	ldi	r22, 0x00	; 0
    15ee:	70 e0       	ldi	r23, 0x00	; 0
    15f0:	84 2b       	or	r24, r20
    15f2:	95 2b       	or	r25, r21
    15f4:	a6 2b       	or	r26, r22
    15f6:	b7 2b       	or	r27, r23
    15f8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    15fc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1600:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1604:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1608:	b0 9b       	sbis	0x16, 0	; 22
    160a:	1b c0       	rjmp	.+54     	; 0x1642 <__vector_20+0x98>
    160c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1610:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1614:	c9 01       	movw	r24, r18
    1616:	01 96       	adiw	r24, 0x01	; 1
    1618:	09 2e       	mov	r0, r25
    161a:	00 0c       	add	r0, r0
    161c:	aa 0b       	sbc	r26, r26
    161e:	bb 0b       	sbc	r27, r27
    1620:	dc 01       	movw	r26, r24
    1622:	99 27       	eor	r25, r25
    1624:	88 27       	eor	r24, r24
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	84 2b       	or	r24, r20
    162c:	95 2b       	or	r25, r21
    162e:	a6 2b       	or	r26, r22
    1630:	b7 2b       	or	r27, r23
    1632:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1636:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    163a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    163e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1642:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    1646:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    164a:	30 97       	sbiw	r30, 0x00	; 0
    164c:	39 f0       	breq	.+14     	; 0x165c <__vector_20+0xb2>
    164e:	6f e0       	ldi	r22, 0x0F	; 15
    1650:	70 e0       	ldi	r23, 0x00	; 0
    1652:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    1656:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    165a:	09 95       	icall
    165c:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    1660:	ff 91       	pop	r31
    1662:	ef 91       	pop	r30
    1664:	bf 91       	pop	r27
    1666:	af 91       	pop	r26
    1668:	9f 91       	pop	r25
    166a:	8f 91       	pop	r24
    166c:	7f 91       	pop	r23
    166e:	6f 91       	pop	r22
    1670:	5f 91       	pop	r21
    1672:	4f 91       	pop	r20
    1674:	3f 91       	pop	r19
    1676:	2f 91       	pop	r18
    1678:	0f 90       	pop	r0
    167a:	0f be       	out	0x3f, r0	; 63
    167c:	0f 90       	pop	r0
    167e:	1f 90       	pop	r1
    1680:	18 95       	reti

00001682 <__vector_21>:
    1682:	1f 92       	push	r1
    1684:	0f 92       	push	r0
    1686:	0f b6       	in	r0, 0x3f	; 63
    1688:	0f 92       	push	r0
    168a:	11 24       	eor	r1, r1
    168c:	2f 93       	push	r18
    168e:	3f 93       	push	r19
    1690:	4f 93       	push	r20
    1692:	5f 93       	push	r21
    1694:	6f 93       	push	r22
    1696:	7f 93       	push	r23
    1698:	8f 93       	push	r24
    169a:	9f 93       	push	r25
    169c:	af 93       	push	r26
    169e:	bf 93       	push	r27
    16a0:	ef 93       	push	r30
    16a2:	ff 93       	push	r31
    16a4:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    16a8:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    16ac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16b0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16b4:	c9 01       	movw	r24, r18
    16b6:	03 2e       	mov	r0, r19
    16b8:	00 0c       	add	r0, r0
    16ba:	aa 0b       	sbc	r26, r26
    16bc:	bb 0b       	sbc	r27, r27
    16be:	dc 01       	movw	r26, r24
    16c0:	99 27       	eor	r25, r25
    16c2:	88 27       	eor	r24, r24
    16c4:	60 e0       	ldi	r22, 0x00	; 0
    16c6:	70 e0       	ldi	r23, 0x00	; 0
    16c8:	84 2b       	or	r24, r20
    16ca:	95 2b       	or	r25, r21
    16cc:	a6 2b       	or	r26, r22
    16ce:	b7 2b       	or	r27, r23
    16d0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    16d4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    16d8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    16dc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    16e0:	b0 9b       	sbis	0x16, 0	; 22
    16e2:	1b c0       	rjmp	.+54     	; 0x171a <__vector_21+0x98>
    16e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ec:	c9 01       	movw	r24, r18
    16ee:	01 96       	adiw	r24, 0x01	; 1
    16f0:	09 2e       	mov	r0, r25
    16f2:	00 0c       	add	r0, r0
    16f4:	aa 0b       	sbc	r26, r26
    16f6:	bb 0b       	sbc	r27, r27
    16f8:	dc 01       	movw	r26, r24
    16fa:	99 27       	eor	r25, r25
    16fc:	88 27       	eor	r24, r24
    16fe:	60 e0       	ldi	r22, 0x00	; 0
    1700:	70 e0       	ldi	r23, 0x00	; 0
    1702:	84 2b       	or	r24, r20
    1704:	95 2b       	or	r25, r21
    1706:	a6 2b       	or	r26, r22
    1708:	b7 2b       	or	r27, r23
    170a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    170e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1712:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1716:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    171a:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    171e:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    1722:	30 97       	sbiw	r30, 0x00	; 0
    1724:	39 f0       	breq	.+14     	; 0x1734 <__vector_21+0xb2>
    1726:	60 e1       	ldi	r22, 0x10	; 16
    1728:	70 e0       	ldi	r23, 0x00	; 0
    172a:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    172e:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    1732:	09 95       	icall
    1734:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    1738:	ff 91       	pop	r31
    173a:	ef 91       	pop	r30
    173c:	bf 91       	pop	r27
    173e:	af 91       	pop	r26
    1740:	9f 91       	pop	r25
    1742:	8f 91       	pop	r24
    1744:	7f 91       	pop	r23
    1746:	6f 91       	pop	r22
    1748:	5f 91       	pop	r21
    174a:	4f 91       	pop	r20
    174c:	3f 91       	pop	r19
    174e:	2f 91       	pop	r18
    1750:	0f 90       	pop	r0
    1752:	0f be       	out	0x3f, r0	; 63
    1754:	0f 90       	pop	r0
    1756:	1f 90       	pop	r1
    1758:	18 95       	reti

0000175a <__vector_22>:
    175a:	1f 92       	push	r1
    175c:	0f 92       	push	r0
    175e:	0f b6       	in	r0, 0x3f	; 63
    1760:	0f 92       	push	r0
    1762:	11 24       	eor	r1, r1
    1764:	2f 93       	push	r18
    1766:	3f 93       	push	r19
    1768:	4f 93       	push	r20
    176a:	5f 93       	push	r21
    176c:	6f 93       	push	r22
    176e:	7f 93       	push	r23
    1770:	8f 93       	push	r24
    1772:	9f 93       	push	r25
    1774:	af 93       	push	r26
    1776:	bf 93       	push	r27
    1778:	ef 93       	push	r30
    177a:	ff 93       	push	r31
    177c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1780:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1784:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1788:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    178c:	c9 01       	movw	r24, r18
    178e:	03 2e       	mov	r0, r19
    1790:	00 0c       	add	r0, r0
    1792:	aa 0b       	sbc	r26, r26
    1794:	bb 0b       	sbc	r27, r27
    1796:	dc 01       	movw	r26, r24
    1798:	99 27       	eor	r25, r25
    179a:	88 27       	eor	r24, r24
    179c:	60 e0       	ldi	r22, 0x00	; 0
    179e:	70 e0       	ldi	r23, 0x00	; 0
    17a0:	84 2b       	or	r24, r20
    17a2:	95 2b       	or	r25, r21
    17a4:	a6 2b       	or	r26, r22
    17a6:	b7 2b       	or	r27, r23
    17a8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    17ac:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    17b0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    17b4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    17b8:	b0 9b       	sbis	0x16, 0	; 22
    17ba:	1b c0       	rjmp	.+54     	; 0x17f2 <__vector_22+0x98>
    17bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17c4:	c9 01       	movw	r24, r18
    17c6:	01 96       	adiw	r24, 0x01	; 1
    17c8:	09 2e       	mov	r0, r25
    17ca:	00 0c       	add	r0, r0
    17cc:	aa 0b       	sbc	r26, r26
    17ce:	bb 0b       	sbc	r27, r27
    17d0:	dc 01       	movw	r26, r24
    17d2:	99 27       	eor	r25, r25
    17d4:	88 27       	eor	r24, r24
    17d6:	60 e0       	ldi	r22, 0x00	; 0
    17d8:	70 e0       	ldi	r23, 0x00	; 0
    17da:	84 2b       	or	r24, r20
    17dc:	95 2b       	or	r25, r21
    17de:	a6 2b       	or	r26, r22
    17e0:	b7 2b       	or	r27, r23
    17e2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    17e6:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    17ea:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    17ee:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    17f2:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    17f6:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    17fa:	30 97       	sbiw	r30, 0x00	; 0
    17fc:	39 f0       	breq	.+14     	; 0x180c <__vector_22+0xb2>
    17fe:	61 e1       	ldi	r22, 0x11	; 17
    1800:	70 e0       	ldi	r23, 0x00	; 0
    1802:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    1806:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    180a:	09 95       	icall
    180c:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    1810:	ff 91       	pop	r31
    1812:	ef 91       	pop	r30
    1814:	bf 91       	pop	r27
    1816:	af 91       	pop	r26
    1818:	9f 91       	pop	r25
    181a:	8f 91       	pop	r24
    181c:	7f 91       	pop	r23
    181e:	6f 91       	pop	r22
    1820:	5f 91       	pop	r21
    1822:	4f 91       	pop	r20
    1824:	3f 91       	pop	r19
    1826:	2f 91       	pop	r18
    1828:	0f 90       	pop	r0
    182a:	0f be       	out	0x3f, r0	; 63
    182c:	0f 90       	pop	r0
    182e:	1f 90       	pop	r1
    1830:	18 95       	reti

00001832 <__vector_9>:
    1832:	1f 92       	push	r1
    1834:	0f 92       	push	r0
    1836:	0f b6       	in	r0, 0x3f	; 63
    1838:	0f 92       	push	r0
    183a:	11 24       	eor	r1, r1
    183c:	2f 93       	push	r18
    183e:	3f 93       	push	r19
    1840:	4f 93       	push	r20
    1842:	5f 93       	push	r21
    1844:	6f 93       	push	r22
    1846:	7f 93       	push	r23
    1848:	8f 93       	push	r24
    184a:	9f 93       	push	r25
    184c:	ef 93       	push	r30
    184e:	ff 93       	push	r31
    1850:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1854:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1858:	01 96       	adiw	r24, 0x01	; 1
    185a:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
    185e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
    1862:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <timerQ>
    1866:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <timerQ+0x1>
    186a:	30 97       	sbiw	r30, 0x00	; 0
    186c:	39 f0       	breq	.+14     	; 0x187c <__vector_9+0x4a>
    186e:	42 81       	ldd	r20, Z+2	; 0x02
    1870:	53 81       	ldd	r21, Z+3	; 0x03
    1872:	64 81       	ldd	r22, Z+4	; 0x04
    1874:	75 81       	ldd	r23, Z+5	; 0x05
    1876:	86 17       	cp	r24, r22
    1878:	97 07       	cpc	r25, r23
    187a:	a1 f0       	breq	.+40     	; 0x18a4 <__vector_9+0x72>
    187c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1880:	8d 7f       	andi	r24, 0xFD	; 253
    1882:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1886:	ff 91       	pop	r31
    1888:	ef 91       	pop	r30
    188a:	9f 91       	pop	r25
    188c:	8f 91       	pop	r24
    188e:	7f 91       	pop	r23
    1890:	6f 91       	pop	r22
    1892:	5f 91       	pop	r21
    1894:	4f 91       	pop	r20
    1896:	3f 91       	pop	r19
    1898:	2f 91       	pop	r18
    189a:	0f 90       	pop	r0
    189c:	0f be       	out	0x3f, r0	; 63
    189e:	0f 90       	pop	r0
    18a0:	1f 90       	pop	r1
    18a2:	18 95       	reti
    18a4:	ca 01       	movw	r24, r20
    18a6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18aa:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18ae:	42 1b       	sub	r20, r18
    18b0:	53 0b       	sbc	r21, r19
    18b2:	41 30       	cpi	r20, 0x01	; 1
    18b4:	51 05       	cpc	r21, r1
    18b6:	51 f0       	breq	.+20     	; 0x18cc <__vector_9+0x9a>
    18b8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    18bc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    18c0:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    18c4:	82 60       	ori	r24, 0x02	; 2
    18c6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    18ca:	dd cf       	rjmp	.-70     	; 0x1886 <__vector_9+0x54>
    18cc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18d0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18d4:	01 96       	adiw	r24, 0x01	; 1
    18d6:	f0 cf       	rjmp	.-32     	; 0x18b8 <__vector_9+0x86>

000018d8 <__vector_7>:
    18d8:	1f 92       	push	r1
    18da:	0f 92       	push	r0
    18dc:	0f b6       	in	r0, 0x3f	; 63
    18de:	0f 92       	push	r0
    18e0:	11 24       	eor	r1, r1
    18e2:	8f 92       	push	r8
    18e4:	9f 92       	push	r9
    18e6:	af 92       	push	r10
    18e8:	bf 92       	push	r11
    18ea:	cf 92       	push	r12
    18ec:	df 92       	push	r13
    18ee:	ef 92       	push	r14
    18f0:	ff 92       	push	r15
    18f2:	0f 93       	push	r16
    18f4:	1f 93       	push	r17
    18f6:	2f 93       	push	r18
    18f8:	3f 93       	push	r19
    18fa:	4f 93       	push	r20
    18fc:	5f 93       	push	r21
    18fe:	6f 93       	push	r22
    1900:	7f 93       	push	r23
    1902:	8f 93       	push	r24
    1904:	9f 93       	push	r25
    1906:	af 93       	push	r26
    1908:	bf 93       	push	r27
    190a:	cf 93       	push	r28
    190c:	df 93       	push	r29
    190e:	ef 93       	push	r30
    1910:	ff 93       	push	r31
    1912:	e0 90 34 01 	lds	r14, 0x0134	; 0x800134 <__data_end>
    1916:	f0 90 35 01 	lds	r15, 0x0135	; 0x800135 <__data_end+0x1>
    191a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    191e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1922:	b0 99       	sbic	0x16, 0	; 22
    1924:	98 c0       	rjmp	.+304    	; 0x1a56 <__vector_7+0x17e>
    1926:	47 01       	movw	r8, r14
    1928:	0f 2c       	mov	r0, r15
    192a:	00 0c       	add	r0, r0
    192c:	aa 08       	sbc	r10, r10
    192e:	bb 08       	sbc	r11, r11
    1930:	54 01       	movw	r10, r8
    1932:	99 24       	eor	r9, r9
    1934:	88 24       	eor	r8, r8
    1936:	a0 e0       	ldi	r26, 0x00	; 0
    1938:	b0 e0       	ldi	r27, 0x00	; 0
    193a:	88 2a       	or	r8, r24
    193c:	99 2a       	or	r9, r25
    193e:	aa 2a       	or	r10, r26
    1940:	bb 2a       	or	r11, r27
    1942:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    1946:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    194a:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <msgQ>
    194e:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <msgQ+0x1>
    1952:	20 97       	sbiw	r28, 0x00	; 0
    1954:	09 f4       	brne	.+2      	; 0x1958 <__vector_7+0x80>
    1956:	3f c0       	rjmp	.+126    	; 0x19d6 <__vector_7+0xfe>
    1958:	4a 81       	ldd	r20, Y+2	; 0x02
    195a:	5b 81       	ldd	r21, Y+3	; 0x03
    195c:	6c 81       	ldd	r22, Y+4	; 0x04
    195e:	7d 81       	ldd	r23, Y+5	; 0x05
    1960:	8a 01       	movw	r16, r20
    1962:	9b 01       	movw	r18, r22
    1964:	08 19       	sub	r16, r8
    1966:	19 09       	sbc	r17, r9
    1968:	2a 09       	sbc	r18, r10
    196a:	3b 09       	sbc	r19, r11
    196c:	10 16       	cp	r1, r16
    196e:	11 06       	cpc	r1, r17
    1970:	12 06       	cpc	r1, r18
    1972:	13 06       	cpc	r1, r19
    1974:	0c f4       	brge	.+2      	; 0x1978 <__vector_7+0xa0>
    1976:	40 c0       	rjmp	.+128    	; 0x19f8 <__vector_7+0x120>
    1978:	d8 80       	ld	r13, Y
    197a:	c9 80       	ldd	r12, Y+1	; 0x01
    197c:	00 97       	sbiw	r24, 0x00	; 0
    197e:	b9 f1       	breq	.+110    	; 0x19ee <__vector_7+0x116>
    1980:	0e 81       	ldd	r16, Y+6	; 0x06
    1982:	1f 81       	ldd	r17, Y+7	; 0x07
    1984:	28 85       	ldd	r18, Y+8	; 0x08
    1986:	39 85       	ldd	r19, Y+9	; 0x09
    1988:	fc 01       	movw	r30, r24
    198a:	46 81       	ldd	r20, Z+6	; 0x06
    198c:	57 81       	ldd	r21, Z+7	; 0x07
    198e:	60 85       	ldd	r22, Z+8	; 0x08
    1990:	71 85       	ldd	r23, Z+9	; 0x09
    1992:	04 17       	cp	r16, r20
    1994:	15 07       	cpc	r17, r21
    1996:	26 07       	cpc	r18, r22
    1998:	37 07       	cpc	r19, r23
    199a:	4c f1       	brlt	.+82     	; 0x19ee <__vector_7+0x116>
    199c:	dc 01       	movw	r26, r24
    199e:	0a c0       	rjmp	.+20     	; 0x19b4 <__vector_7+0xdc>
    19a0:	46 81       	ldd	r20, Z+6	; 0x06
    19a2:	57 81       	ldd	r21, Z+7	; 0x07
    19a4:	60 85       	ldd	r22, Z+8	; 0x08
    19a6:	71 85       	ldd	r23, Z+9	; 0x09
    19a8:	04 17       	cp	r16, r20
    19aa:	15 07       	cpc	r17, r21
    19ac:	26 07       	cpc	r18, r22
    19ae:	37 07       	cpc	r19, r23
    19b0:	dc f0       	brlt	.+54     	; 0x19e8 <__vector_7+0x110>
    19b2:	df 01       	movw	r26, r30
    19b4:	ed 91       	ld	r30, X+
    19b6:	fc 91       	ld	r31, X
    19b8:	11 97       	sbiw	r26, 0x01	; 1
    19ba:	30 97       	sbiw	r30, 0x00	; 0
    19bc:	89 f7       	brne	.-30     	; 0x19a0 <__vector_7+0xc8>
    19be:	19 82       	std	Y+1, r1	; 0x01
    19c0:	18 82       	st	Y, r1
    19c2:	cd 93       	st	X+, r28
    19c4:	dc 93       	st	X, r29
    19c6:	38 2f       	mov	r19, r24
    19c8:	29 2f       	mov	r18, r25
    19ca:	cd 2d       	mov	r28, r13
    19cc:	dc 2d       	mov	r29, r12
    19ce:	83 2f       	mov	r24, r19
    19d0:	92 2f       	mov	r25, r18
    19d2:	20 97       	sbiw	r28, 0x00	; 0
    19d4:	09 f6       	brne	.-126    	; 0x1958 <__vector_7+0x80>
    19d6:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <timerQ+0x1>
    19da:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <timerQ>
    19de:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    19e2:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    19e6:	13 c0       	rjmp	.+38     	; 0x1a0e <__vector_7+0x136>
    19e8:	f9 83       	std	Y+1, r31	; 0x01
    19ea:	e8 83       	st	Y, r30
    19ec:	ea cf       	rjmp	.-44     	; 0x19c2 <__vector_7+0xea>
    19ee:	99 83       	std	Y+1, r25	; 0x01
    19f0:	88 83       	st	Y, r24
    19f2:	3c 2f       	mov	r19, r28
    19f4:	2d 2f       	mov	r18, r29
    19f6:	e9 cf       	rjmp	.-46     	; 0x19ca <__vector_7+0xf2>
    19f8:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    19fc:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    1a00:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    1a04:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    1a08:	e6 16       	cp	r14, r22
    1a0a:	f7 06       	cpc	r15, r23
    1a0c:	d9 f1       	breq	.+118    	; 0x1a84 <__vector_7+0x1ac>
    1a0e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a12:	8d 7f       	andi	r24, 0xFD	; 253
    1a14:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a18:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    1a1c:	ff 91       	pop	r31
    1a1e:	ef 91       	pop	r30
    1a20:	df 91       	pop	r29
    1a22:	cf 91       	pop	r28
    1a24:	bf 91       	pop	r27
    1a26:	af 91       	pop	r26
    1a28:	9f 91       	pop	r25
    1a2a:	8f 91       	pop	r24
    1a2c:	7f 91       	pop	r23
    1a2e:	6f 91       	pop	r22
    1a30:	5f 91       	pop	r21
    1a32:	4f 91       	pop	r20
    1a34:	3f 91       	pop	r19
    1a36:	2f 91       	pop	r18
    1a38:	1f 91       	pop	r17
    1a3a:	0f 91       	pop	r16
    1a3c:	ff 90       	pop	r15
    1a3e:	ef 90       	pop	r14
    1a40:	df 90       	pop	r13
    1a42:	cf 90       	pop	r12
    1a44:	bf 90       	pop	r11
    1a46:	af 90       	pop	r10
    1a48:	9f 90       	pop	r9
    1a4a:	8f 90       	pop	r8
    1a4c:	0f 90       	pop	r0
    1a4e:	0f be       	out	0x3f, r0	; 63
    1a50:	0f 90       	pop	r0
    1a52:	1f 90       	pop	r1
    1a54:	18 95       	reti
    1a56:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a5a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a5e:	47 01       	movw	r8, r14
    1a60:	8f ef       	ldi	r24, 0xFF	; 255
    1a62:	88 1a       	sub	r8, r24
    1a64:	98 0a       	sbc	r9, r24
    1a66:	09 2c       	mov	r0, r9
    1a68:	00 0c       	add	r0, r0
    1a6a:	aa 08       	sbc	r10, r10
    1a6c:	bb 08       	sbc	r11, r11
    1a6e:	d4 01       	movw	r26, r8
    1a70:	99 27       	eor	r25, r25
    1a72:	88 27       	eor	r24, r24
    1a74:	49 01       	movw	r8, r18
    1a76:	a1 2c       	mov	r10, r1
    1a78:	b1 2c       	mov	r11, r1
    1a7a:	88 2a       	or	r8, r24
    1a7c:	99 2a       	or	r9, r25
    1a7e:	aa 2a       	or	r10, r26
    1a80:	bb 2a       	or	r11, r27
    1a82:	5f cf       	rjmp	.-322    	; 0x1942 <__vector_7+0x6a>
    1a84:	ca 01       	movw	r24, r20
    1a86:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a8a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a8e:	42 1b       	sub	r20, r18
    1a90:	53 0b       	sbc	r21, r19
    1a92:	41 30       	cpi	r20, 0x01	; 1
    1a94:	51 05       	cpc	r21, r1
    1a96:	51 f0       	breq	.+20     	; 0x1aac <__vector_7+0x1d4>
    1a98:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a9c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1aa0:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1aa4:	82 60       	ori	r24, 0x02	; 2
    1aa6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1aaa:	b6 cf       	rjmp	.-148    	; 0x1a18 <__vector_7+0x140>
    1aac:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ab0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ab4:	01 96       	adiw	r24, 0x01	; 1
    1ab6:	f0 cf       	rjmp	.-32     	; 0x1a98 <__vector_7+0x1c0>

00001ab8 <async>:
    1ab8:	3f 92       	push	r3
    1aba:	4f 92       	push	r4
    1abc:	5f 92       	push	r5
    1abe:	6f 92       	push	r6
    1ac0:	7f 92       	push	r7
    1ac2:	8f 92       	push	r8
    1ac4:	9f 92       	push	r9
    1ac6:	af 92       	push	r10
    1ac8:	bf 92       	push	r11
    1aca:	cf 92       	push	r12
    1acc:	df 92       	push	r13
    1ace:	ef 92       	push	r14
    1ad0:	ff 92       	push	r15
    1ad2:	0f 93       	push	r16
    1ad4:	1f 93       	push	r17
    1ad6:	cf 93       	push	r28
    1ad8:	df 93       	push	r29
    1ada:	ef b7       	in	r30, 0x3f	; 63
    1adc:	e0 78       	andi	r30, 0x80	; 128
    1ade:	3e 2e       	mov	r3, r30
    1ae0:	f8 94       	cli
    1ae2:	c0 91 06 01 	lds	r28, 0x0106	; 0x800106 <msgPool>
    1ae6:	d0 91 07 01 	lds	r29, 0x0107	; 0x800107 <msgPool+0x1>
    1aea:	20 97       	sbiw	r28, 0x00	; 0
    1aec:	09 f4       	brne	.+2      	; 0x1af0 <async+0x38>
    1aee:	52 c1       	rjmp	.+676    	; 0x1d94 <async+0x2dc>
    1af0:	e8 81       	ld	r30, Y
    1af2:	f9 81       	ldd	r31, Y+1	; 0x01
    1af4:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <msgPool+0x1>
    1af8:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <msgPool>
    1afc:	1b 87       	std	Y+11, r17	; 0x0b
    1afe:	0a 87       	std	Y+10, r16	; 0x0a
    1b00:	fd 86       	std	Y+13, r15	; 0x0d
    1b02:	ec 86       	std	Y+12, r14	; 0x0c
    1b04:	df 86       	std	Y+15, r13	; 0x0f
    1b06:	ce 86       	std	Y+14, r12	; 0x0e
    1b08:	33 20       	and	r3, r3
    1b0a:	09 f4       	brne	.+2      	; 0x1b0e <async+0x56>
    1b0c:	6f c0       	rjmp	.+222    	; 0x1bec <async+0x134>
    1b0e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b12:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b16:	02 80       	ldd	r0, Z+2	; 0x02
    1b18:	f3 81       	ldd	r31, Z+3	; 0x03
    1b1a:	e0 2d       	mov	r30, r0
    1b1c:	c2 80       	ldd	r12, Z+2	; 0x02
    1b1e:	d3 80       	ldd	r13, Z+3	; 0x03
    1b20:	e4 80       	ldd	r14, Z+4	; 0x04
    1b22:	f5 80       	ldd	r15, Z+5	; 0x05
    1b24:	c6 0e       	add	r12, r22
    1b26:	d7 1e       	adc	r13, r23
    1b28:	e8 1e       	adc	r14, r24
    1b2a:	f9 1e       	adc	r15, r25
    1b2c:	ca 82       	std	Y+2, r12	; 0x02
    1b2e:	db 82       	std	Y+3, r13	; 0x03
    1b30:	ec 82       	std	Y+4, r14	; 0x04
    1b32:	fd 82       	std	Y+5, r15	; 0x05
    1b34:	12 16       	cp	r1, r18
    1b36:	13 06       	cpc	r1, r19
    1b38:	14 06       	cpc	r1, r20
    1b3a:	15 06       	cpc	r1, r21
    1b3c:	0c f0       	brlt	.+2      	; 0x1b40 <async+0x88>
    1b3e:	f8 c0       	rjmp	.+496    	; 0x1d30 <async+0x278>
    1b40:	da 01       	movw	r26, r20
    1b42:	c9 01       	movw	r24, r18
    1b44:	8c 01       	movw	r16, r24
    1b46:	9d 01       	movw	r18, r26
    1b48:	0c 0d       	add	r16, r12
    1b4a:	1d 1d       	adc	r17, r13
    1b4c:	2e 1d       	adc	r18, r14
    1b4e:	3f 1d       	adc	r19, r15
    1b50:	0e 83       	std	Y+6, r16	; 0x06
    1b52:	1f 83       	std	Y+7, r17	; 0x07
    1b54:	28 87       	std	Y+8, r18	; 0x08
    1b56:	39 87       	std	Y+9, r19	; 0x09
    1b58:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1b5c:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1b60:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b64:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b68:	b0 99       	sbic	0x16, 0	; 22
    1b6a:	49 c0       	rjmp	.+146    	; 0x1bfe <async+0x146>
    1b6c:	2c 01       	movw	r4, r24
    1b6e:	09 2e       	mov	r0, r25
    1b70:	00 0c       	add	r0, r0
    1b72:	66 08       	sbc	r6, r6
    1b74:	77 08       	sbc	r7, r7
    1b76:	52 01       	movw	r10, r4
    1b78:	99 24       	eor	r9, r9
    1b7a:	88 24       	eor	r8, r8
    1b7c:	2b 01       	movw	r4, r22
    1b7e:	61 2c       	mov	r6, r1
    1b80:	71 2c       	mov	r7, r1
    1b82:	48 28       	or	r4, r8
    1b84:	59 28       	or	r5, r9
    1b86:	6a 28       	or	r6, r10
    1b88:	7b 28       	or	r7, r11
    1b8a:	b7 01       	movw	r22, r14
    1b8c:	a6 01       	movw	r20, r12
    1b8e:	44 19       	sub	r20, r4
    1b90:	55 09       	sbc	r21, r5
    1b92:	66 09       	sbc	r22, r6
    1b94:	77 09       	sbc	r23, r7
    1b96:	14 16       	cp	r1, r20
    1b98:	15 06       	cpc	r1, r21
    1b9a:	16 06       	cpc	r1, r22
    1b9c:	17 06       	cpc	r1, r23
    1b9e:	0c f0       	brlt	.+2      	; 0x1ba2 <async+0xea>
    1ba0:	68 c0       	rjmp	.+208    	; 0x1c72 <async+0x1ba>
    1ba2:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <timerQ>
    1ba6:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <timerQ+0x1>
    1baa:	10 97       	sbiw	r26, 0x00	; 0
    1bac:	09 f4       	brne	.+2      	; 0x1bb0 <async+0xf8>
    1bae:	dc c0       	rjmp	.+440    	; 0x1d68 <async+0x2b0>
    1bb0:	12 96       	adiw	r26, 0x02	; 2
    1bb2:	0d 91       	ld	r16, X+
    1bb4:	1d 91       	ld	r17, X+
    1bb6:	2d 91       	ld	r18, X+
    1bb8:	3c 91       	ld	r19, X
    1bba:	15 97       	sbiw	r26, 0x05	; 5
    1bbc:	c0 16       	cp	r12, r16
    1bbe:	d1 06       	cpc	r13, r17
    1bc0:	e2 06       	cpc	r14, r18
    1bc2:	f3 06       	cpc	r15, r19
    1bc4:	5c f4       	brge	.+22     	; 0x1bdc <async+0x124>
    1bc6:	d0 c0       	rjmp	.+416    	; 0x1d68 <async+0x2b0>
    1bc8:	42 81       	ldd	r20, Z+2	; 0x02
    1bca:	53 81       	ldd	r21, Z+3	; 0x03
    1bcc:	64 81       	ldd	r22, Z+4	; 0x04
    1bce:	75 81       	ldd	r23, Z+5	; 0x05
    1bd0:	c4 16       	cp	r12, r20
    1bd2:	d5 06       	cpc	r13, r21
    1bd4:	e6 06       	cpc	r14, r22
    1bd6:	f7 06       	cpc	r15, r23
    1bd8:	4c f1       	brlt	.+82     	; 0x1c2c <async+0x174>
    1bda:	df 01       	movw	r26, r30
    1bdc:	ed 91       	ld	r30, X+
    1bde:	fc 91       	ld	r31, X
    1be0:	11 97       	sbiw	r26, 0x01	; 1
    1be2:	30 97       	sbiw	r30, 0x00	; 0
    1be4:	89 f7       	brne	.-30     	; 0x1bc8 <async+0x110>
    1be6:	19 82       	std	Y+1, r1	; 0x01
    1be8:	18 82       	st	Y, r1
    1bea:	22 c0       	rjmp	.+68     	; 0x1c30 <async+0x178>
    1bec:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <timestamp>
    1bf0:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <timestamp+0x1>
    1bf4:	e0 90 38 01 	lds	r14, 0x0138	; 0x800138 <timestamp+0x2>
    1bf8:	f0 90 39 01 	lds	r15, 0x0139	; 0x800139 <timestamp+0x3>
    1bfc:	93 cf       	rjmp	.-218    	; 0x1b24 <async+0x6c>
    1bfe:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c02:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c06:	2c 01       	movw	r4, r24
    1c08:	4f ef       	ldi	r20, 0xFF	; 255
    1c0a:	44 1a       	sub	r4, r20
    1c0c:	54 0a       	sbc	r5, r20
    1c0e:	05 2c       	mov	r0, r5
    1c10:	00 0c       	add	r0, r0
    1c12:	66 08       	sbc	r6, r6
    1c14:	77 08       	sbc	r7, r7
    1c16:	b2 01       	movw	r22, r4
    1c18:	55 27       	eor	r21, r21
    1c1a:	44 27       	eor	r20, r20
    1c1c:	2f 01       	movw	r4, r30
    1c1e:	61 2c       	mov	r6, r1
    1c20:	71 2c       	mov	r7, r1
    1c22:	44 2a       	or	r4, r20
    1c24:	55 2a       	or	r5, r21
    1c26:	66 2a       	or	r6, r22
    1c28:	77 2a       	or	r7, r23
    1c2a:	af cf       	rjmp	.-162    	; 0x1b8a <async+0xd2>
    1c2c:	f9 83       	std	Y+1, r31	; 0x01
    1c2e:	e8 83       	st	Y, r30
    1c30:	cd 93       	st	X+, r28
    1c32:	dc 93       	st	X, r29
    1c34:	82 17       	cp	r24, r18
    1c36:	93 07       	cpc	r25, r19
    1c38:	09 f4       	brne	.+2      	; 0x1c3c <async+0x184>
    1c3a:	7f c0       	rjmp	.+254    	; 0x1d3a <async+0x282>
    1c3c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c40:	8d 7f       	andi	r24, 0xFD	; 253
    1c42:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c46:	33 20       	and	r3, r3
    1c48:	09 f0       	breq	.+2      	; 0x1c4c <async+0x194>
    1c4a:	78 94       	sei
    1c4c:	ce 01       	movw	r24, r28
    1c4e:	df 91       	pop	r29
    1c50:	cf 91       	pop	r28
    1c52:	1f 91       	pop	r17
    1c54:	0f 91       	pop	r16
    1c56:	ff 90       	pop	r15
    1c58:	ef 90       	pop	r14
    1c5a:	df 90       	pop	r13
    1c5c:	cf 90       	pop	r12
    1c5e:	bf 90       	pop	r11
    1c60:	af 90       	pop	r10
    1c62:	9f 90       	pop	r9
    1c64:	8f 90       	pop	r8
    1c66:	7f 90       	pop	r7
    1c68:	6f 90       	pop	r6
    1c6a:	5f 90       	pop	r5
    1c6c:	4f 90       	pop	r4
    1c6e:	3f 90       	pop	r3
    1c70:	08 95       	ret
    1c72:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <msgQ>
    1c76:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <msgQ+0x1>
    1c7a:	10 97       	sbiw	r26, 0x00	; 0
    1c7c:	09 f4       	brne	.+2      	; 0x1c80 <async+0x1c8>
    1c7e:	83 c0       	rjmp	.+262    	; 0x1d86 <async+0x2ce>
    1c80:	16 96       	adiw	r26, 0x06	; 6
    1c82:	cd 90       	ld	r12, X+
    1c84:	dd 90       	ld	r13, X+
    1c86:	ed 90       	ld	r14, X+
    1c88:	fc 90       	ld	r15, X
    1c8a:	19 97       	sbiw	r26, 0x09	; 9
    1c8c:	0c 15       	cp	r16, r12
    1c8e:	1d 05       	cpc	r17, r13
    1c90:	2e 05       	cpc	r18, r14
    1c92:	3f 05       	cpc	r19, r15
    1c94:	64 f4       	brge	.+24     	; 0x1cae <async+0x1f6>
    1c96:	77 c0       	rjmp	.+238    	; 0x1d86 <async+0x2ce>
    1c98:	c6 80       	ldd	r12, Z+6	; 0x06
    1c9a:	d7 80       	ldd	r13, Z+7	; 0x07
    1c9c:	e0 84       	ldd	r14, Z+8	; 0x08
    1c9e:	f1 84       	ldd	r15, Z+9	; 0x09
    1ca0:	0c 15       	cp	r16, r12
    1ca2:	1d 05       	cpc	r17, r13
    1ca4:	2e 05       	cpc	r18, r14
    1ca6:	3f 05       	cpc	r19, r15
    1ca8:	0c f4       	brge	.+2      	; 0x1cac <async+0x1f4>
    1caa:	5b c0       	rjmp	.+182    	; 0x1d62 <async+0x2aa>
    1cac:	df 01       	movw	r26, r30
    1cae:	ed 91       	ld	r30, X+
    1cb0:	fc 91       	ld	r31, X
    1cb2:	11 97       	sbiw	r26, 0x01	; 1
    1cb4:	30 97       	sbiw	r30, 0x00	; 0
    1cb6:	81 f7       	brne	.-32     	; 0x1c98 <async+0x1e0>
    1cb8:	19 82       	std	Y+1, r1	; 0x01
    1cba:	18 82       	st	Y, r1
    1cbc:	cd 93       	st	X+, r28
    1cbe:	dc 93       	st	X, r29
    1cc0:	33 20       	and	r3, r3
    1cc2:	21 f2       	breq	.-120    	; 0x1c4c <async+0x194>
    1cc4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1cc8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1ccc:	00 97       	sbiw	r24, 0x00	; 0
    1cce:	09 f4       	brne	.+2      	; 0x1cd2 <async+0x21a>
    1cd0:	bc cf       	rjmp	.-136    	; 0x1c4a <async+0x192>
    1cd2:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1cd6:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1cda:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <msgQ>
    1cde:	30 91 3d 01 	lds	r19, 0x013D	; 0x80013d <msgQ+0x1>
    1ce2:	02 81       	ldd	r16, Z+2	; 0x02
    1ce4:	13 81       	ldd	r17, Z+3	; 0x03
    1ce6:	d9 01       	movw	r26, r18
    1ce8:	16 96       	adiw	r26, 0x06	; 6
    1cea:	4d 91       	ld	r20, X+
    1cec:	5d 91       	ld	r21, X+
    1cee:	6d 91       	ld	r22, X+
    1cf0:	7c 91       	ld	r23, X
    1cf2:	19 97       	sbiw	r26, 0x09	; 9
    1cf4:	d8 01       	movw	r26, r16
    1cf6:	16 96       	adiw	r26, 0x06	; 6
    1cf8:	0d 91       	ld	r16, X+
    1cfa:	1d 91       	ld	r17, X+
    1cfc:	2d 91       	ld	r18, X+
    1cfe:	3c 91       	ld	r19, X
    1d00:	19 97       	sbiw	r26, 0x09	; 9
    1d02:	40 1b       	sub	r20, r16
    1d04:	51 0b       	sbc	r21, r17
    1d06:	62 0b       	sbc	r22, r18
    1d08:	73 0b       	sbc	r23, r19
    1d0a:	77 ff       	sbrs	r23, 7
    1d0c:	9e cf       	rjmp	.-196    	; 0x1c4a <async+0x192>
    1d0e:	dc 01       	movw	r26, r24
    1d10:	2d 91       	ld	r18, X+
    1d12:	3c 91       	ld	r19, X
    1d14:	11 97       	sbiw	r26, 0x01	; 1
    1d16:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1d1a:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1d1e:	ed 93       	st	X+, r30
    1d20:	fc 93       	st	X, r31
    1d22:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1d26:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1d2a:	0e 94 16 04 	call	0x82c	; 0x82c <dispatch>
    1d2e:	8d cf       	rjmp	.-230    	; 0x1c4a <async+0x192>
    1d30:	8f ef       	ldi	r24, 0xFF	; 255
    1d32:	9f ef       	ldi	r25, 0xFF	; 255
    1d34:	af ef       	ldi	r26, 0xFF	; 255
    1d36:	bf e7       	ldi	r27, 0x7F	; 127
    1d38:	05 cf       	rjmp	.-502    	; 0x1b44 <async+0x8c>
    1d3a:	c8 01       	movw	r24, r16
    1d3c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d40:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d44:	04 1b       	sub	r16, r20
    1d46:	15 0b       	sbc	r17, r21
    1d48:	01 30       	cpi	r16, 0x01	; 1
    1d4a:	11 05       	cpc	r17, r1
    1d4c:	b1 f0       	breq	.+44     	; 0x1d7a <async+0x2c2>
    1d4e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d52:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d56:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1d5a:	82 60       	ori	r24, 0x02	; 2
    1d5c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1d60:	72 cf       	rjmp	.-284    	; 0x1c46 <async+0x18e>
    1d62:	f9 83       	std	Y+1, r31	; 0x01
    1d64:	e8 83       	st	Y, r30
    1d66:	aa cf       	rjmp	.-172    	; 0x1cbc <async+0x204>
    1d68:	b9 83       	std	Y+1, r27	; 0x01
    1d6a:	a8 83       	st	Y, r26
    1d6c:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    1d70:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    1d74:	97 01       	movw	r18, r14
    1d76:	86 01       	movw	r16, r12
    1d78:	5d cf       	rjmp	.-326    	; 0x1c34 <async+0x17c>
    1d7a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d7e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d82:	01 96       	adiw	r24, 0x01	; 1
    1d84:	e4 cf       	rjmp	.-56     	; 0x1d4e <async+0x296>
    1d86:	b9 83       	std	Y+1, r27	; 0x01
    1d88:	a8 83       	st	Y, r26
    1d8a:	d0 93 3d 01 	sts	0x013D, r29	; 0x80013d <msgQ+0x1>
    1d8e:	c0 93 3c 01 	sts	0x013C, r28	; 0x80013c <msgQ>
    1d92:	96 cf       	rjmp	.-212    	; 0x1cc0 <async+0x208>
    1d94:	0e 94 76 04 	call	0x8ec	; 0x8ec <dequeue.part.0>

00001d98 <sync>:
    1d98:	cf 92       	push	r12
    1d9a:	df 92       	push	r13
    1d9c:	ef 92       	push	r14
    1d9e:	ff 92       	push	r15
    1da0:	0f 93       	push	r16
    1da2:	1f 93       	push	r17
    1da4:	cf 93       	push	r28
    1da6:	df 93       	push	r29
    1da8:	ec 01       	movw	r28, r24
    1daa:	7b 01       	movw	r14, r22
    1dac:	6a 01       	movw	r12, r20
    1dae:	1f b7       	in	r17, 0x3f	; 63
    1db0:	10 78       	andi	r17, 0x80	; 128
    1db2:	f8 94       	cli
    1db4:	a8 81       	ld	r26, Y
    1db6:	b9 81       	ldd	r27, Y+1	; 0x01
    1db8:	10 97       	sbiw	r26, 0x00	; 0
    1dba:	19 f4       	brne	.+6      	; 0x1dc2 <sync+0x2a>
    1dbc:	62 c0       	rjmp	.+196    	; 0x1e82 <sync+0xea>
    1dbe:	a0 81       	ld	r26, Z
    1dc0:	b1 81       	ldd	r27, Z+1	; 0x01
    1dc2:	14 96       	adiw	r26, 0x04	; 4
    1dc4:	ed 91       	ld	r30, X+
    1dc6:	fc 91       	ld	r31, X
    1dc8:	15 97       	sbiw	r26, 0x05	; 5
    1dca:	30 97       	sbiw	r30, 0x00	; 0
    1dcc:	c1 f7       	brne	.-16     	; 0x1dbe <sync+0x26>
    1dce:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1dd2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dd6:	2a 17       	cp	r18, r26
    1dd8:	3b 07       	cpc	r19, r27
    1dda:	09 f4       	brne	.+2      	; 0x1dde <sync+0x46>
    1ddc:	4c c0       	rjmp	.+152    	; 0x1e76 <sync+0xde>
    1dde:	11 23       	and	r17, r17
    1de0:	a1 f1       	breq	.+104    	; 0x1e4a <sync+0xb2>
    1de2:	8a 81       	ldd	r24, Y+2	; 0x02
    1de4:	9b 81       	ldd	r25, Y+3	; 0x03
    1de6:	00 97       	sbiw	r24, 0x00	; 0
    1de8:	19 f0       	breq	.+6      	; 0x1df0 <sync+0x58>
    1dea:	fc 01       	movw	r30, r24
    1dec:	15 82       	std	Z+5, r1	; 0x05
    1dee:	14 82       	std	Z+4, r1	; 0x04
    1df0:	3b 83       	std	Y+3, r19	; 0x03
    1df2:	2a 83       	std	Y+2, r18	; 0x02
    1df4:	f9 01       	movw	r30, r18
    1df6:	d5 83       	std	Z+5, r29	; 0x05
    1df8:	c4 83       	std	Z+4, r28	; 0x04
    1dfa:	cd 01       	movw	r24, r26
    1dfc:	0e 94 16 04 	call	0x82c	; 0x82c <dispatch>
    1e00:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e04:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e08:	82 81       	ldd	r24, Z+2	; 0x02
    1e0a:	93 81       	ldd	r25, Z+3	; 0x03
    1e0c:	89 2b       	or	r24, r25
    1e0e:	09 f4       	brne	.+2      	; 0x1e12 <sync+0x7a>
    1e10:	41 c0       	rjmp	.+130    	; 0x1e94 <sync+0xfc>
    1e12:	f9 83       	std	Y+1, r31	; 0x01
    1e14:	e8 83       	st	Y, r30
    1e16:	8a 81       	ldd	r24, Y+2	; 0x02
    1e18:	9b 81       	ldd	r25, Y+3	; 0x03
    1e1a:	01 97       	sbiw	r24, 0x01	; 1
    1e1c:	09 f0       	breq	.+2      	; 0x1e20 <sync+0x88>
    1e1e:	78 94       	sei
    1e20:	b6 01       	movw	r22, r12
    1e22:	ce 01       	movw	r24, r28
    1e24:	f7 01       	movw	r30, r14
    1e26:	09 95       	icall
    1e28:	f8 2e       	mov	r15, r24
    1e2a:	09 2f       	mov	r16, r25
    1e2c:	8f b7       	in	r24, 0x3f	; 63
    1e2e:	f8 94       	cli
    1e30:	19 82       	std	Y+1, r1	; 0x01
    1e32:	18 82       	st	Y, r1
    1e34:	8a 81       	ldd	r24, Y+2	; 0x02
    1e36:	9b 81       	ldd	r25, Y+3	; 0x03
    1e38:	82 30       	cpi	r24, 0x02	; 2
    1e3a:	91 05       	cpc	r25, r1
    1e3c:	a0 f4       	brcc	.+40     	; 0x1e66 <sync+0xce>
    1e3e:	11 23       	and	r17, r17
    1e40:	79 f0       	breq	.+30     	; 0x1e60 <sync+0xc8>
    1e42:	78 94       	sei
    1e44:	8f 2d       	mov	r24, r15
    1e46:	90 2f       	mov	r25, r16
    1e48:	02 c0       	rjmp	.+4      	; 0x1e4e <sync+0xb6>
    1e4a:	8f ef       	ldi	r24, 0xFF	; 255
    1e4c:	9f ef       	ldi	r25, 0xFF	; 255
    1e4e:	df 91       	pop	r29
    1e50:	cf 91       	pop	r28
    1e52:	1f 91       	pop	r17
    1e54:	0f 91       	pop	r16
    1e56:	ff 90       	pop	r15
    1e58:	ef 90       	pop	r14
    1e5a:	df 90       	pop	r13
    1e5c:	cf 90       	pop	r12
    1e5e:	08 95       	ret
    1e60:	8f 2d       	mov	r24, r15
    1e62:	90 2f       	mov	r25, r16
    1e64:	f4 cf       	rjmp	.-24     	; 0x1e4e <sync+0xb6>
    1e66:	1b 82       	std	Y+3, r1	; 0x03
    1e68:	1a 82       	std	Y+2, r1	; 0x02
    1e6a:	fc 01       	movw	r30, r24
    1e6c:	15 82       	std	Z+5, r1	; 0x05
    1e6e:	14 82       	std	Z+4, r1	; 0x04
    1e70:	0e 94 16 04 	call	0x82c	; 0x82c <dispatch>
    1e74:	e4 cf       	rjmp	.-56     	; 0x1e3e <sync+0xa6>
    1e76:	11 23       	and	r17, r17
    1e78:	41 f3       	breq	.-48     	; 0x1e4a <sync+0xb2>
    1e7a:	78 94       	sei
    1e7c:	8f ef       	ldi	r24, 0xFF	; 255
    1e7e:	9f ef       	ldi	r25, 0xFF	; 255
    1e80:	e6 cf       	rjmp	.-52     	; 0x1e4e <sync+0xb6>
    1e82:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e86:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e8a:	99 83       	std	Y+1, r25	; 0x01
    1e8c:	88 83       	st	Y, r24
    1e8e:	11 23       	and	r17, r17
    1e90:	39 f2       	breq	.-114    	; 0x1e20 <sync+0x88>
    1e92:	c1 cf       	rjmp	.-126    	; 0x1e16 <sync+0x7e>
    1e94:	78 94       	sei
    1e96:	80 e0       	ldi	r24, 0x00	; 0
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	d9 cf       	rjmp	.-78     	; 0x1e4e <sync+0xb6>

00001e9c <run>:
    1e9c:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1ea0:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1ea4:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ea8:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1eac:	20 97       	sbiw	r28, 0x00	; 0
    1eae:	09 f4       	brne	.+2      	; 0x1eb2 <run+0x16>
    1eb0:	6e c0       	rjmp	.+220    	; 0x1f8e <run+0xf2>
    1eb2:	88 81       	ld	r24, Y
    1eb4:	99 81       	ldd	r25, Y+1	; 0x01
    1eb6:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    1eba:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    1ebe:	d3 83       	std	Z+3, r29	; 0x03
    1ec0:	c2 83       	std	Z+2, r28	; 0x02
    1ec2:	78 94       	sei
    1ec4:	4e 85       	ldd	r20, Y+14	; 0x0e
    1ec6:	5f 85       	ldd	r21, Y+15	; 0x0f
    1ec8:	6c 85       	ldd	r22, Y+12	; 0x0c
    1eca:	7d 85       	ldd	r23, Y+13	; 0x0d
    1ecc:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ece:	9b 85       	ldd	r25, Y+11	; 0x0b
    1ed0:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <sync>
    1ed4:	8f b7       	in	r24, 0x3f	; 63
    1ed6:	f8 94       	cli
    1ed8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1edc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1ee0:	99 83       	std	Y+1, r25	; 0x01
    1ee2:	88 83       	st	Y, r24
    1ee4:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    1ee8:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    1eec:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <activeStack>
    1ef0:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <activeStack+0x1>
    1ef4:	f7 01       	movw	r30, r14
    1ef6:	a0 81       	ld	r26, Z
    1ef8:	b1 81       	ldd	r27, Z+1	; 0x01
    1efa:	12 96       	adiw	r26, 0x02	; 2
    1efc:	8d 91       	ld	r24, X+
    1efe:	9c 91       	ld	r25, X
    1f00:	13 97       	sbiw	r26, 0x03	; 3
    1f02:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1f06:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1f0a:	20 97       	sbiw	r28, 0x00	; 0
    1f0c:	a9 f0       	breq	.+42     	; 0x1f38 <run+0x9c>
    1f0e:	00 97       	sbiw	r24, 0x00	; 0
    1f10:	49 f2       	breq	.-110    	; 0x1ea4 <run+0x8>
    1f12:	4e 81       	ldd	r20, Y+6	; 0x06
    1f14:	5f 81       	ldd	r21, Y+7	; 0x07
    1f16:	68 85       	ldd	r22, Y+8	; 0x08
    1f18:	79 85       	ldd	r23, Y+9	; 0x09
    1f1a:	fc 01       	movw	r30, r24
    1f1c:	06 81       	ldd	r16, Z+6	; 0x06
    1f1e:	17 81       	ldd	r17, Z+7	; 0x07
    1f20:	20 85       	ldd	r18, Z+8	; 0x08
    1f22:	31 85       	ldd	r19, Z+9	; 0x09
    1f24:	40 1b       	sub	r20, r16
    1f26:	51 0b       	sbc	r21, r17
    1f28:	62 0b       	sbc	r22, r18
    1f2a:	73 0b       	sbc	r23, r19
    1f2c:	14 16       	cp	r1, r20
    1f2e:	15 06       	cpc	r1, r21
    1f30:	16 06       	cpc	r1, r22
    1f32:	17 06       	cpc	r1, r23
    1f34:	0c f0       	brlt	.+2      	; 0x1f38 <run+0x9c>
    1f36:	b6 cf       	rjmp	.-148    	; 0x1ea4 <run+0x8>
    1f38:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <activeStack+0x1>
    1f3c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <activeStack>
    1f40:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1f44:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1f48:	f7 01       	movw	r30, r14
    1f4a:	91 83       	std	Z+1, r25	; 0x01
    1f4c:	80 83       	st	Z, r24
    1f4e:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <threadPool+0x1>
    1f52:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <threadPool>
    1f56:	14 96       	adiw	r26, 0x04	; 4
    1f58:	ed 91       	ld	r30, X+
    1f5a:	fc 91       	ld	r31, X
    1f5c:	15 97       	sbiw	r26, 0x05	; 5
    1f5e:	30 97       	sbiw	r30, 0x00	; 0
    1f60:	41 f0       	breq	.+16     	; 0x1f72 <run+0xd6>
    1f62:	a0 81       	ld	r26, Z
    1f64:	b1 81       	ldd	r27, Z+1	; 0x01
    1f66:	14 96       	adiw	r26, 0x04	; 4
    1f68:	ed 91       	ld	r30, X+
    1f6a:	fc 91       	ld	r31, X
    1f6c:	15 97       	sbiw	r26, 0x05	; 5
    1f6e:	30 97       	sbiw	r30, 0x00	; 0
    1f70:	c1 f7       	brne	.-16     	; 0x1f62 <run+0xc6>
    1f72:	cd 01       	movw	r24, r26
    1f74:	0e 94 16 04 	call	0x82c	; 0x82c <dispatch>
    1f78:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1f7c:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1f80:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f84:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f88:	20 97       	sbiw	r28, 0x00	; 0
    1f8a:	09 f0       	breq	.+2      	; 0x1f8e <run+0xf2>
    1f8c:	92 cf       	rjmp	.-220    	; 0x1eb2 <run+0x16>
    1f8e:	0e 94 76 04 	call	0x8ec	; 0x8ec <dequeue.part.0>

00001f92 <ABORT>:
    1f92:	cf 93       	push	r28
    1f94:	df 93       	push	r29
    1f96:	dc 01       	movw	r26, r24
    1f98:	4f b7       	in	r20, 0x3f	; 63
    1f9a:	40 78       	andi	r20, 0x80	; 128
    1f9c:	f8 94       	cli
    1f9e:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    1fa2:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    1fa6:	20 97       	sbiw	r28, 0x00	; 0
    1fa8:	69 f0       	breq	.+26     	; 0x1fc4 <ABORT+0x32>
    1faa:	8c 17       	cp	r24, r28
    1fac:	9d 07       	cpc	r25, r29
    1fae:	31 f4       	brne	.+12     	; 0x1fbc <ABORT+0x2a>
    1fb0:	6c c0       	rjmp	.+216    	; 0x208a <ABORT+0xf8>
    1fb2:	ae 17       	cp	r26, r30
    1fb4:	bf 07       	cpc	r27, r31
    1fb6:	09 f4       	brne	.+2      	; 0x1fba <ABORT+0x28>
    1fb8:	47 c0       	rjmp	.+142    	; 0x2048 <ABORT+0xb6>
    1fba:	ef 01       	movw	r28, r30
    1fbc:	e8 81       	ld	r30, Y
    1fbe:	f9 81       	ldd	r31, Y+1	; 0x01
    1fc0:	30 97       	sbiw	r30, 0x00	; 0
    1fc2:	b9 f7       	brne	.-18     	; 0x1fb2 <ABORT+0x20>
    1fc4:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1fc8:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1fcc:	20 97       	sbiw	r28, 0x00	; 0
    1fce:	69 f0       	breq	.+26     	; 0x1fea <ABORT+0x58>
    1fd0:	ac 17       	cp	r26, r28
    1fd2:	bd 07       	cpc	r27, r29
    1fd4:	31 f4       	brne	.+12     	; 0x1fe2 <ABORT+0x50>
    1fd6:	61 c0       	rjmp	.+194    	; 0x209a <ABORT+0x108>
    1fd8:	ae 17       	cp	r26, r30
    1fda:	bf 07       	cpc	r27, r31
    1fdc:	09 f4       	brne	.+2      	; 0x1fe0 <ABORT+0x4e>
    1fde:	4c c0       	rjmp	.+152    	; 0x2078 <ABORT+0xe6>
    1fe0:	ef 01       	movw	r28, r30
    1fe2:	e8 81       	ld	r30, Y
    1fe4:	f9 81       	ldd	r31, Y+1	; 0x01
    1fe6:	30 97       	sbiw	r30, 0x00	; 0
    1fe8:	b9 f7       	brne	.-18     	; 0x1fd8 <ABORT+0x46>
    1fea:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1fee:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1ff2:	30 97       	sbiw	r30, 0x00	; 0
    1ff4:	d9 f1       	breq	.+118    	; 0x206c <ABORT+0xda>
    1ff6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ffa:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ffe:	05 c0       	rjmp	.+10     	; 0x200a <ABORT+0x78>
    2000:	01 90       	ld	r0, Z+
    2002:	f0 81       	ld	r31, Z
    2004:	e0 2d       	mov	r30, r0
    2006:	30 97       	sbiw	r30, 0x00	; 0
    2008:	89 f1       	breq	.+98     	; 0x206c <ABORT+0xda>
    200a:	e2 17       	cp	r30, r18
    200c:	f3 07       	cpc	r31, r19
    200e:	c1 f3       	breq	.-16     	; 0x2000 <ABORT+0x6e>
    2010:	82 81       	ldd	r24, Z+2	; 0x02
    2012:	93 81       	ldd	r25, Z+3	; 0x03
    2014:	a8 17       	cp	r26, r24
    2016:	b9 07       	cpc	r27, r25
    2018:	99 f7       	brne	.-26     	; 0x2000 <ABORT+0x6e>
    201a:	64 81       	ldd	r22, Z+4	; 0x04
    201c:	75 81       	ldd	r23, Z+5	; 0x05
    201e:	1a 96       	adiw	r26, 0x0a	; 10
    2020:	8d 91       	ld	r24, X+
    2022:	9c 91       	ld	r25, X
    2024:	1b 97       	sbiw	r26, 0x0b	; 11
    2026:	68 17       	cp	r22, r24
    2028:	79 07       	cpc	r23, r25
    202a:	51 f7       	brne	.-44     	; 0x2000 <ABORT+0x6e>
    202c:	13 82       	std	Z+3, r1	; 0x03
    202e:	12 82       	std	Z+2, r1	; 0x02
    2030:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    2034:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    2038:	11 96       	adiw	r26, 0x01	; 1
    203a:	9c 93       	st	X, r25
    203c:	8e 93       	st	-X, r24
    203e:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    2042:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    2046:	12 c0       	rjmp	.+36     	; 0x206c <ABORT+0xda>
    2048:	20 97       	sbiw	r28, 0x00	; 0
    204a:	01 f1       	breq	.+64     	; 0x208c <ABORT+0xfa>
    204c:	8d 91       	ld	r24, X+
    204e:	9c 91       	ld	r25, X
    2050:	11 97       	sbiw	r26, 0x01	; 1
    2052:	99 83       	std	Y+1, r25	; 0x01
    2054:	88 83       	st	Y, r24
    2056:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    205a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    205e:	11 96       	adiw	r26, 0x01	; 1
    2060:	9c 93       	st	X, r25
    2062:	8e 93       	st	-X, r24
    2064:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    2068:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    206c:	44 23       	and	r20, r20
    206e:	09 f0       	breq	.+2      	; 0x2072 <ABORT+0xe0>
    2070:	78 94       	sei
    2072:	df 91       	pop	r29
    2074:	cf 91       	pop	r28
    2076:	08 95       	ret
    2078:	20 97       	sbiw	r28, 0x00	; 0
    207a:	41 f7       	brne	.-48     	; 0x204c <ABORT+0xba>
    207c:	80 81       	ld	r24, Z
    207e:	91 81       	ldd	r25, Z+1	; 0x01
    2080:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    2084:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    2088:	e6 cf       	rjmp	.-52     	; 0x2056 <ABORT+0xc4>
    208a:	fc 01       	movw	r30, r24
    208c:	80 81       	ld	r24, Z
    208e:	91 81       	ldd	r25, Z+1	; 0x01
    2090:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timerQ+0x1>
    2094:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timerQ>
    2098:	de cf       	rjmp	.-68     	; 0x2056 <ABORT+0xc4>
    209a:	fd 01       	movw	r30, r26
    209c:	ef cf       	rjmp	.-34     	; 0x207c <ABORT+0xea>

0000209e <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    209e:	42 31       	cpi	r20, 0x12	; 18
    20a0:	b8 f4       	brcc	.+46     	; 0x20d0 <install+0x32>
        char status;
        DISABLE(status);
    20a2:	2f b7       	in	r18, 0x3f	; 63
    20a4:	f8 94       	cli
        otable[i] = obj;
    20a6:	50 e0       	ldi	r21, 0x00	; 0
    20a8:	44 0f       	add	r20, r20
    20aa:	55 1f       	adc	r21, r21
    20ac:	fa 01       	movw	r30, r20
    20ae:	ee 5b       	subi	r30, 0xBE	; 190
    20b0:	fe 4f       	sbci	r31, 0xFE	; 254
    20b2:	91 83       	std	Z+1, r25	; 0x01
    20b4:	80 83       	st	Z, r24
        mtable[i] = m;
    20b6:	fa 01       	movw	r30, r20
    20b8:	e6 52       	subi	r30, 0x26	; 38
    20ba:	fe 4f       	sbci	r31, 0xFE	; 254
    20bc:	71 83       	std	Z+1, r23	; 0x01
    20be:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    20c0:	41 e0       	ldi	r20, 0x01	; 1
    20c2:	50 e0       	ldi	r21, 0x00	; 0
    20c4:	fc 01       	movw	r30, r24
    20c6:	53 83       	std	Z+3, r21	; 0x03
    20c8:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    20ca:	27 ff       	sbrs	r18, 7
    20cc:	01 c0       	rjmp	.+2      	; 0x20d0 <install+0x32>
    20ce:	78 94       	sei
    20d0:	08 95       	ret

000020d2 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    20d2:	8c 01       	movw	r16, r24
    20d4:	7b 01       	movw	r14, r22
    20d6:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    20d8:	8f b7       	in	r24, 0x3f	; 63
    20da:	f8 94       	cli
    initialize();
    20dc:	0e 94 ab 03 	call	0x756	; 0x756 <initialize>
    ENABLE(1);
    20e0:	78 94       	sei
    if (m != NULL)
    20e2:	e1 14       	cp	r14, r1
    20e4:	f1 04       	cpc	r15, r1
    20e6:	41 f0       	breq	.+16     	; 0x20f8 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    20e8:	20 e0       	ldi	r18, 0x00	; 0
    20ea:	30 e0       	ldi	r19, 0x00	; 0
    20ec:	a9 01       	movw	r20, r18
    20ee:	60 e0       	ldi	r22, 0x00	; 0
    20f0:	70 e0       	ldi	r23, 0x00	; 0
    20f2:	cb 01       	movw	r24, r22
    20f4:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <async>
    DISABLE(status);
    20f8:	8f b7       	in	r24, 0x3f	; 63
    20fa:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    20fc:	0e 94 36 04 	call	0x86c	; 0x86c <schedule>
    ENABLE(1);
    2100:	78 94       	sei
    while (1) {
        SLEEP();
    2102:	81 e0       	ldi	r24, 0x01	; 1
    2104:	83 bf       	out	0x33, r24	; 51
    2106:	88 95       	sleep
    2108:	fd cf       	rjmp	.-6      	; 0x2104 <tinytimber+0x32>

0000210a <__divmodhi4>:
    210a:	97 fb       	bst	r25, 7
    210c:	07 2e       	mov	r0, r23
    210e:	16 f4       	brtc	.+4      	; 0x2114 <__divmodhi4+0xa>
    2110:	00 94       	com	r0
    2112:	07 d0       	rcall	.+14     	; 0x2122 <__divmodhi4_neg1>
    2114:	77 fd       	sbrc	r23, 7
    2116:	09 d0       	rcall	.+18     	; 0x212a <__divmodhi4_neg2>
    2118:	0e 94 99 10 	call	0x2132	; 0x2132 <__udivmodhi4>
    211c:	07 fc       	sbrc	r0, 7
    211e:	05 d0       	rcall	.+10     	; 0x212a <__divmodhi4_neg2>
    2120:	3e f4       	brtc	.+14     	; 0x2130 <__divmodhi4_exit>

00002122 <__divmodhi4_neg1>:
    2122:	90 95       	com	r25
    2124:	81 95       	neg	r24
    2126:	9f 4f       	sbci	r25, 0xFF	; 255
    2128:	08 95       	ret

0000212a <__divmodhi4_neg2>:
    212a:	70 95       	com	r23
    212c:	61 95       	neg	r22
    212e:	7f 4f       	sbci	r23, 0xFF	; 255

00002130 <__divmodhi4_exit>:
    2130:	08 95       	ret

00002132 <__udivmodhi4>:
    2132:	aa 1b       	sub	r26, r26
    2134:	bb 1b       	sub	r27, r27
    2136:	51 e1       	ldi	r21, 0x11	; 17
    2138:	07 c0       	rjmp	.+14     	; 0x2148 <__udivmodhi4_ep>

0000213a <__udivmodhi4_loop>:
    213a:	aa 1f       	adc	r26, r26
    213c:	bb 1f       	adc	r27, r27
    213e:	a6 17       	cp	r26, r22
    2140:	b7 07       	cpc	r27, r23
    2142:	10 f0       	brcs	.+4      	; 0x2148 <__udivmodhi4_ep>
    2144:	a6 1b       	sub	r26, r22
    2146:	b7 0b       	sbc	r27, r23

00002148 <__udivmodhi4_ep>:
    2148:	88 1f       	adc	r24, r24
    214a:	99 1f       	adc	r25, r25
    214c:	5a 95       	dec	r21
    214e:	a9 f7       	brne	.-22     	; 0x213a <__udivmodhi4_loop>
    2150:	80 95       	com	r24
    2152:	90 95       	com	r25
    2154:	bc 01       	movw	r22, r24
    2156:	cd 01       	movw	r24, r26
    2158:	08 95       	ret

0000215a <setjmp>:
    215a:	dc 01       	movw	r26, r24
    215c:	2d 92       	st	X+, r2
    215e:	3d 92       	st	X+, r3
    2160:	4d 92       	st	X+, r4
    2162:	5d 92       	st	X+, r5
    2164:	6d 92       	st	X+, r6
    2166:	7d 92       	st	X+, r7
    2168:	8d 92       	st	X+, r8
    216a:	9d 92       	st	X+, r9
    216c:	ad 92       	st	X+, r10
    216e:	bd 92       	st	X+, r11
    2170:	cd 92       	st	X+, r12
    2172:	dd 92       	st	X+, r13
    2174:	ed 92       	st	X+, r14
    2176:	fd 92       	st	X+, r15
    2178:	0d 93       	st	X+, r16
    217a:	1d 93       	st	X+, r17
    217c:	cd 93       	st	X+, r28
    217e:	dd 93       	st	X+, r29
    2180:	ff 91       	pop	r31
    2182:	ef 91       	pop	r30
    2184:	8d b7       	in	r24, 0x3d	; 61
    2186:	8d 93       	st	X+, r24
    2188:	8e b7       	in	r24, 0x3e	; 62
    218a:	8d 93       	st	X+, r24
    218c:	8f b7       	in	r24, 0x3f	; 63
    218e:	8d 93       	st	X+, r24
    2190:	ed 93       	st	X+, r30
    2192:	fd 93       	st	X+, r31
    2194:	88 27       	eor	r24, r24
    2196:	99 27       	eor	r25, r25
    2198:	09 94       	ijmp

0000219a <longjmp>:
    219a:	dc 01       	movw	r26, r24
    219c:	cb 01       	movw	r24, r22
    219e:	81 30       	cpi	r24, 0x01	; 1
    21a0:	91 05       	cpc	r25, r1
    21a2:	81 1d       	adc	r24, r1
    21a4:	2d 90       	ld	r2, X+
    21a6:	3d 90       	ld	r3, X+
    21a8:	4d 90       	ld	r4, X+
    21aa:	5d 90       	ld	r5, X+
    21ac:	6d 90       	ld	r6, X+
    21ae:	7d 90       	ld	r7, X+
    21b0:	8d 90       	ld	r8, X+
    21b2:	9d 90       	ld	r9, X+
    21b4:	ad 90       	ld	r10, X+
    21b6:	bd 90       	ld	r11, X+
    21b8:	cd 90       	ld	r12, X+
    21ba:	dd 90       	ld	r13, X+
    21bc:	ed 90       	ld	r14, X+
    21be:	fd 90       	ld	r15, X+
    21c0:	0d 91       	ld	r16, X+
    21c2:	1d 91       	ld	r17, X+
    21c4:	cd 91       	ld	r28, X+
    21c6:	dd 91       	ld	r29, X+
    21c8:	ed 91       	ld	r30, X+
    21ca:	fd 91       	ld	r31, X+
    21cc:	0d 90       	ld	r0, X+
    21ce:	f8 94       	cli
    21d0:	fe bf       	out	0x3e, r31	; 62
    21d2:	0f be       	out	0x3f, r0	; 63
    21d4:	ed bf       	out	0x3d, r30	; 61
    21d6:	ed 91       	ld	r30, X+
    21d8:	fd 91       	ld	r31, X+
    21da:	09 94       	ijmp

000021dc <_exit>:
    21dc:	f8 94       	cli

000021de <__stop_program>:
    21de:	ff cf       	rjmp	.-2      	; 0x21de <__stop_program>
