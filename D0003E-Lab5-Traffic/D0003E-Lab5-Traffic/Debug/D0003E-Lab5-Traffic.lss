
D0003E-Lab5-Traffic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  000021ae  00002242  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800134  00800134  00002276  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002276  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000260  00000000  00000000  000022e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002dbb  00000000  00000000  00002548  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011f4  00000000  00000000  00005303  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016b4  00000000  00000000  000064f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c3c  00000000  00000000  00007bac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000099d  00000000  00000000  000087e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000309b  00000000  00000000  00009185  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f8  00000000  00000000  0000c220  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__vector_1>
       8:	0c 94 d4 04 	jmp	0x9a8	; 0x9a8 <__vector_2>
       c:	0c 94 40 05 	jmp	0xa80	; 0xa80 <__vector_3>
      10:	0c 94 ac 05 	jmp	0xb58	; 0xb58 <__vector_4>
      14:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 53 0c 	jmp	0x18a6	; 0x18a6 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 00 0c 	jmp	0x1800	; 0x1800 <__vector_9>
      28:	0c 94 84 06 	jmp	0xd08	; 0xd08 <__vector_10>
      2c:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__vector_11>
      30:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__vector_12>
      34:	0c 94 c8 07 	jmp	0xf90	; 0xf90 <__vector_13>
      38:	0c 94 34 08 	jmp	0x1068	; 0x1068 <__vector_14>
      3c:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__vector_15>
      40:	0c 94 0c 09 	jmp	0x1218	; 0x1218 <__vector_16>
      44:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__vector_17>
      48:	0c 94 e4 09 	jmp	0x13c8	; 0x13c8 <__vector_18>
      4c:	0c 94 50 0a 	jmp	0x14a0	; 0x14a0 <__vector_19>
      50:	0c 94 bc 0a 	jmp	0x1578	; 0x1578 <__vector_20>
      54:	0c 94 28 0b 	jmp	0x1650	; 0x1650 <__vector_21>
      58:	0c 94 94 0b 	jmp	0x1728	; 0x1728 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ee ea       	ldi	r30, 0xAE	; 174
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a4 33       	cpi	r26, 0x34	; 52
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a4 e3       	ldi	r26, 0x34	; 52
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 48 03 	call	0x690	; 0x690 <main>
      92:	0c 94 d5 10 	jmp	0x21aa	; 0x21aa <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <transmit>:
#include <avr/io.h>
#include "Communication.h"

// Sends data to simulator
int transmit(Communication *self, int data) {
	while ( !(UCSR0A & (1<<UDRE0)) );
      9a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
      9e:	85 ff       	sbrs	r24, 5
      a0:	fc cf       	rjmp	.-8      	; 0x9a <transmit>
	UDR0 = data;
      a2:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
      a6:	08 95       	ret

000000a8 <updateDisplay>:
int Temp(Handler *self, int value) {
	AFTER(MSEC(1000), self, readValue, value);
}

// Displays our three variables on corresponding segments
int updateDisplay(Handler *self) {
      a8:	cf 92       	push	r12
      aa:	df 92       	push	r13
      ac:	ef 92       	push	r14
      ae:	ff 92       	push	r15
      b0:	0f 93       	push	r16
      b2:	1f 93       	push	r17
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
      b8:	ec 01       	movw	r28, r24
	ASYNC(self->lcd, printAt, self->northQueue * 10);
      ba:	8c 85       	ldd	r24, Y+12	; 0x0c
      bc:	9d 85       	ldd	r25, Y+13	; 0x0d
      be:	6c 01       	movw	r12, r24
      c0:	cc 0c       	add	r12, r12
      c2:	dd 1c       	adc	r13, r13
      c4:	88 0f       	add	r24, r24
      c6:	99 1f       	adc	r25, r25
      c8:	88 0f       	add	r24, r24
      ca:	99 1f       	adc	r25, r25
      cc:	88 0f       	add	r24, r24
      ce:	99 1f       	adc	r25, r25
      d0:	c8 0e       	add	r12, r24
      d2:	d9 1e       	adc	r13, r25
      d4:	0e 81       	ldd	r16, Y+6	; 0x06
      d6:	1f 81       	ldd	r17, Y+7	; 0x07
      d8:	4b e1       	ldi	r20, 0x1B	; 27
      da:	e4 2e       	mov	r14, r20
      dc:	43 e0       	ldi	r20, 0x03	; 3
      de:	f4 2e       	mov	r15, r20
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	a9 01       	movw	r20, r18
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	cb 01       	movw	r24, r22
      ec:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
	ASYNC(self->lcd, printAt, self->onBridge * 10 + 2);
      f0:	8e 85       	ldd	r24, Y+14	; 0x0e
      f2:	9f 85       	ldd	r25, Y+15	; 0x0f
      f4:	6c 01       	movw	r12, r24
      f6:	cc 0c       	add	r12, r12
      f8:	dd 1c       	adc	r13, r13
      fa:	88 0f       	add	r24, r24
      fc:	99 1f       	adc	r25, r25
      fe:	88 0f       	add	r24, r24
     100:	99 1f       	adc	r25, r25
     102:	88 0f       	add	r24, r24
     104:	99 1f       	adc	r25, r25
     106:	c8 0e       	add	r12, r24
     108:	d9 1e       	adc	r13, r25
     10a:	82 e0       	ldi	r24, 0x02	; 2
     10c:	c8 0e       	add	r12, r24
     10e:	d1 1c       	adc	r13, r1
     110:	0e 81       	ldd	r16, Y+6	; 0x06
     112:	1f 81       	ldd	r17, Y+7	; 0x07
     114:	20 e0       	ldi	r18, 0x00	; 0
     116:	30 e0       	ldi	r19, 0x00	; 0
     118:	a9 01       	movw	r20, r18
     11a:	60 e0       	ldi	r22, 0x00	; 0
     11c:	70 e0       	ldi	r23, 0x00	; 0
     11e:	cb 01       	movw	r24, r22
     120:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
	ASYNC(self->lcd, printAt, self->southQueue * 10 + 4);
     124:	8a 85       	ldd	r24, Y+10	; 0x0a
     126:	9b 85       	ldd	r25, Y+11	; 0x0b
     128:	6c 01       	movw	r12, r24
     12a:	cc 0c       	add	r12, r12
     12c:	dd 1c       	adc	r13, r13
     12e:	88 0f       	add	r24, r24
     130:	99 1f       	adc	r25, r25
     132:	88 0f       	add	r24, r24
     134:	99 1f       	adc	r25, r25
     136:	88 0f       	add	r24, r24
     138:	99 1f       	adc	r25, r25
     13a:	c8 0e       	add	r12, r24
     13c:	d9 1e       	adc	r13, r25
     13e:	84 e0       	ldi	r24, 0x04	; 4
     140:	c8 0e       	add	r12, r24
     142:	d1 1c       	adc	r13, r1
     144:	0e 81       	ldd	r16, Y+6	; 0x06
     146:	1f 81       	ldd	r17, Y+7	; 0x07
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	a9 01       	movw	r20, r18
     14e:	60 e0       	ldi	r22, 0x00	; 0
     150:	70 e0       	ldi	r23, 0x00	; 0
     152:	cb 01       	movw	r24, r22
     154:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
}
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	1f 91       	pop	r17
     15e:	0f 91       	pop	r16
     160:	ff 90       	pop	r15
     162:	ef 90       	pop	r14
     164:	df 90       	pop	r13
     166:	cf 90       	pop	r12
     168:	08 95       	ret

0000016a <reduceBridge>:

// Seperate function that reduces onbridge (needed for AFTER)
int reduceBridge(Handler *self) {
     16a:	cf 92       	push	r12
     16c:	df 92       	push	r13
     16e:	ef 92       	push	r14
     170:	ff 92       	push	r15
     172:	0f 93       	push	r16
     174:	1f 93       	push	r17
	self->onBridge--;
     176:	fc 01       	movw	r30, r24
     178:	26 85       	ldd	r18, Z+14	; 0x0e
     17a:	37 85       	ldd	r19, Z+15	; 0x0f
     17c:	21 50       	subi	r18, 0x01	; 1
     17e:	31 09       	sbc	r19, r1
     180:	37 87       	std	Z+15, r19	; 0x0f
     182:	26 87       	std	Z+14, r18	; 0x0e
	ASYNC(self, updateDisplay, NULL);
     184:	c1 2c       	mov	r12, r1
     186:	d1 2c       	mov	r13, r1
     188:	24 e5       	ldi	r18, 0x54	; 84
     18a:	e2 2e       	mov	r14, r18
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	f2 2e       	mov	r15, r18
     190:	8c 01       	movw	r16, r24
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	a9 01       	movw	r20, r18
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	70 e0       	ldi	r23, 0x00	; 0
     19c:	cb 01       	movw	r24, r22
     19e:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
}
     1a2:	1f 91       	pop	r17
     1a4:	0f 91       	pop	r16
     1a6:	ff 90       	pop	r15
     1a8:	ef 90       	pop	r14
     1aa:	df 90       	pop	r13
     1ac:	cf 90       	pop	r12
     1ae:	08 95       	ret

000001b0 <deQueuer>:

// Moves car from queue (dependent on dir) to bridge
int deQueuer(Handler *self, int dir){
     1b0:	cf 92       	push	r12
     1b2:	df 92       	push	r13
     1b4:	ef 92       	push	r14
     1b6:	ff 92       	push	r15
     1b8:	0f 93       	push	r16
     1ba:	1f 93       	push	r17
     1bc:	fc 01       	movw	r30, r24
	if (dir){
     1be:	67 2b       	or	r22, r23
     1c0:	09 f5       	brne	.+66     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
		self->northQueue--;
	}
	else{
		self->southQueue--;
     1c2:	82 85       	ldd	r24, Z+10	; 0x0a
     1c4:	93 85       	ldd	r25, Z+11	; 0x0b
     1c6:	01 97       	sbiw	r24, 0x01	; 1
     1c8:	93 87       	std	Z+11, r25	; 0x0b
     1ca:	82 87       	std	Z+10, r24	; 0x0a
	}
	self->onBridge++;
     1cc:	86 85       	ldd	r24, Z+14	; 0x0e
     1ce:	97 85       	ldd	r25, Z+15	; 0x0f
     1d0:	01 96       	adiw	r24, 0x01	; 1
     1d2:	97 87       	std	Z+15, r25	; 0x0f
     1d4:	86 87       	std	Z+14, r24	; 0x0e
	//ASYNC(self, updateDisplay, NULL);	// <-- Unnecessary line? Should remove and test
	//ASYNC(self, updateDisplay, NULL);
	AFTER(MSEC(5000), self, reduceBridge, NULL);
     1d6:	c1 2c       	mov	r12, r1
     1d8:	d1 2c       	mov	r13, r1
     1da:	85 eb       	ldi	r24, 0xB5	; 181
     1dc:	e8 2e       	mov	r14, r24
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	f8 2e       	mov	r15, r24
     1e2:	8f 01       	movw	r16, r30
     1e4:	20 e0       	ldi	r18, 0x00	; 0
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	a9 01       	movw	r20, r18
     1ea:	6a e5       	ldi	r22, 0x5A	; 90
     1ec:	72 e6       	ldi	r23, 0x62	; 98
     1ee:	82 e0       	ldi	r24, 0x02	; 2
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
}
     1f6:	1f 91       	pop	r17
     1f8:	0f 91       	pop	r16
     1fa:	ff 90       	pop	r15
     1fc:	ef 90       	pop	r14
     1fe:	df 90       	pop	r13
     200:	cf 90       	pop	r12
     202:	08 95       	ret
}

// Moves car from queue (dependent on dir) to bridge
int deQueuer(Handler *self, int dir){
	if (dir){
		self->northQueue--;
     204:	84 85       	ldd	r24, Z+12	; 0x0c
     206:	95 85       	ldd	r25, Z+13	; 0x0d
     208:	01 97       	sbiw	r24, 0x01	; 1
     20a:	95 87       	std	Z+13, r25	; 0x0d
     20c:	84 87       	std	Z+12, r24	; 0x0c
     20e:	de cf       	rjmp	.-68     	; 0x1cc <deQueuer+0x1c>

00000210 <readValue>:
	//ASYNC(self, updateDisplay, NULL);
	AFTER(MSEC(5000), self, reduceBridge, NULL);
}

// Reads incoming data and changes variables accordingly
int readValue(Handler *self, int value) {
     210:	cf 92       	push	r12
     212:	df 92       	push	r13
     214:	ef 92       	push	r14
     216:	ff 92       	push	r15
     218:	0f 93       	push	r16
     21a:	1f 93       	push	r17
     21c:	cf 93       	push	r28
     21e:	df 93       	push	r29
     220:	ec 01       	movw	r28, r24
	if (value == 1) {			// Car enters northQueue
     222:	61 30       	cpi	r22, 0x01	; 1
     224:	71 05       	cpc	r23, r1
     226:	d9 f1       	breq	.+118    	; 0x29e <readValue+0x8e>
		self->northQueue++;
	}
	if (value == 2) {			// Car enters bridge from north
     228:	62 30       	cpi	r22, 0x02	; 2
     22a:	71 05       	cpc	r23, r1
     22c:	f1 f1       	breq	.+124    	; 0x2aa <readValue+0x9a>
		self->counter++;
		ASYNC(self, deQueuer, 1);
	}
	if (value == 4) {			// Car enters southQueue
     22e:	64 30       	cpi	r22, 0x04	; 4
     230:	71 05       	cpc	r23, r1
     232:	c1 f0       	breq	.+48     	; 0x264 <readValue+0x54>
		self->southQueue++;
	}
	if (value == 8) {			// Car enters bridge from south
     234:	68 30       	cpi	r22, 0x08	; 8
     236:	71 05       	cpc	r23, r1
     238:	d1 f4       	brne	.+52     	; 0x26e <readValue+0x5e>
		self->counter++;		
     23a:	88 89       	ldd	r24, Y+16	; 0x10
     23c:	99 89       	ldd	r25, Y+17	; 0x11
     23e:	01 96       	adiw	r24, 0x01	; 1
     240:	99 8b       	std	Y+17, r25	; 0x11
     242:	88 8b       	std	Y+16, r24	; 0x10
		ASYNC(self, deQueuer, 0);
     244:	c1 2c       	mov	r12, r1
     246:	d1 2c       	mov	r13, r1
     248:	98 ed       	ldi	r25, 0xD8	; 216
     24a:	e9 2e       	mov	r14, r25
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	f9 2e       	mov	r15, r25
     250:	8e 01       	movw	r16, r28
     252:	20 e0       	ldi	r18, 0x00	; 0
     254:	30 e0       	ldi	r19, 0x00	; 0
     256:	a9 01       	movw	r20, r18
     258:	60 e0       	ldi	r22, 0x00	; 0
     25a:	70 e0       	ldi	r23, 0x00	; 0
     25c:	cb 01       	movw	r24, r22
     25e:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
     262:	05 c0       	rjmp	.+10     	; 0x26e <readValue+0x5e>
	if (value == 2) {			// Car enters bridge from north
		self->counter++;
		ASYNC(self, deQueuer, 1);
	}
	if (value == 4) {			// Car enters southQueue
		self->southQueue++;
     264:	8a 85       	ldd	r24, Y+10	; 0x0a
     266:	9b 85       	ldd	r25, Y+11	; 0x0b
     268:	01 96       	adiw	r24, 0x01	; 1
     26a:	9b 87       	std	Y+11, r25	; 0x0b
     26c:	8a 87       	std	Y+10, r24	; 0x0a
	}
	if (value == 8) {			// Car enters bridge from south
		self->counter++;		
		ASYNC(self, deQueuer, 0);
	}
	ASYNC(self, switcher, NULL);
     26e:	c1 2c       	mov	r12, r1
     270:	d1 2c       	mov	r13, r1
     272:	8e e5       	ldi	r24, 0x5E	; 94
     274:	e8 2e       	mov	r14, r24
     276:	81 e0       	ldi	r24, 0x01	; 1
     278:	f8 2e       	mov	r15, r24
     27a:	8e 01       	movw	r16, r28
     27c:	20 e0       	ldi	r18, 0x00	; 0
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	a9 01       	movw	r20, r18
     282:	60 e0       	ldi	r22, 0x00	; 0
     284:	70 e0       	ldi	r23, 0x00	; 0
     286:	cb 01       	movw	r24, r22
     288:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
}
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	1f 91       	pop	r17
     292:	0f 91       	pop	r16
     294:	ff 90       	pop	r15
     296:	ef 90       	pop	r14
     298:	df 90       	pop	r13
     29a:	cf 90       	pop	r12
     29c:	08 95       	ret
}

// Reads incoming data and changes variables accordingly
int readValue(Handler *self, int value) {
	if (value == 1) {			// Car enters northQueue
		self->northQueue++;
     29e:	8c 85       	ldd	r24, Y+12	; 0x0c
     2a0:	9d 85       	ldd	r25, Y+13	; 0x0d
     2a2:	01 96       	adiw	r24, 0x01	; 1
     2a4:	9d 87       	std	Y+13, r25	; 0x0d
     2a6:	8c 87       	std	Y+12, r24	; 0x0c
     2a8:	e2 cf       	rjmp	.-60     	; 0x26e <readValue+0x5e>
	}
	if (value == 2) {			// Car enters bridge from north
		self->counter++;
     2aa:	88 89       	ldd	r24, Y+16	; 0x10
     2ac:	99 89       	ldd	r25, Y+17	; 0x11
     2ae:	01 96       	adiw	r24, 0x01	; 1
     2b0:	99 8b       	std	Y+17, r25	; 0x11
     2b2:	88 8b       	std	Y+16, r24	; 0x10
		ASYNC(self, deQueuer, 1);
     2b4:	cc 24       	eor	r12, r12
     2b6:	c3 94       	inc	r12
     2b8:	d1 2c       	mov	r13, r1
     2ba:	c6 cf       	rjmp	.-116    	; 0x248 <readValue+0x38>

000002bc <switcher>:
	}
	ASYNC(self, switcher, NULL);
}

// Determines how and when to signal green on either side
int switcher (Handler *self) {
     2bc:	cf 92       	push	r12
     2be:	df 92       	push	r13
     2c0:	ef 92       	push	r14
     2c2:	ff 92       	push	r15
     2c4:	0f 93       	push	r16
     2c6:	1f 93       	push	r17
     2c8:	cf 93       	push	r28
     2ca:	df 93       	push	r29
     2cc:	ec 01       	movw	r28, r24
	if (self->isNorth) {
     2ce:	88 85       	ldd	r24, Y+8	; 0x08
     2d0:	99 85       	ldd	r25, Y+9	; 0x09
     2d2:	89 2b       	or	r24, r25
     2d4:	e9 f5       	brne	.+122    	; 0x350 <switcher+0x94>
				test = AFTER(MSEC(1250), self, switcher, NULL);	// NOTE: time needs to be above 1 second to be sure that the update has happend
			}
		}
	}
	else if (!(self->isNorth)){
		if (self->southQueue && self->counter < 5) {
     2d6:	8a 85       	ldd	r24, Y+10	; 0x0a
     2d8:	9b 85       	ldd	r25, Y+11	; 0x0b
     2da:	89 2b       	or	r24, r25
     2dc:	09 f4       	brne	.+2      	; 0x2e0 <switcher+0x24>
     2de:	89 c0       	rjmp	.+274    	; 0x3f2 <switcher+0x136>
     2e0:	88 89       	ldd	r24, Y+16	; 0x10
     2e2:	99 89       	ldd	r25, Y+17	; 0x11
     2e4:	85 30       	cpi	r24, 0x05	; 5
     2e6:	91 05       	cpc	r25, r1
     2e8:	0c f4       	brge	.+2      	; 0x2ec <switcher+0x30>
     2ea:	b3 c0       	rjmp	.+358    	; 0x452 <__DATA_REGION_LENGTH__+0x52>
			ASYNC(self->com, transmit, 0b0110);				// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
     2ec:	2c 85       	ldd	r18, Y+12	; 0x0c
     2ee:	3d 85       	ldd	r19, Y+13	; 0x0d
     2f0:	23 2b       	or	r18, r19
     2f2:	09 f0       	breq	.+2      	; 0x2f6 <switcher+0x3a>
     2f4:	89 c0       	rjmp	.+274    	; 0x408 <__DATA_REGION_LENGTH__+0x8>
				self->counter = 0;
				self->isNorth = 1;
				ASYNC(self->com, transmit, 0b1001);			// Green north 
			}
			if (!(self->northQueue) && self->counter >= 5 && self->onBridge < 5) {
     2f6:	2e 85       	ldd	r18, Y+14	; 0x0e
     2f8:	3f 85       	ldd	r19, Y+15	; 0x0f
     2fa:	25 30       	cpi	r18, 0x05	; 5
     2fc:	31 05       	cpc	r19, r1
     2fe:	0c f4       	brge	.+2      	; 0x302 <switcher+0x46>
     300:	a5 c0       	rjmp	.+330    	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
				self->counter--;
				ASYNC(self->com, transmit, 0b0110);			// Green south
			}
			else {
				if (test) {
     302:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <test>
     306:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <test+0x1>
     30a:	00 97       	sbiw	r24, 0x00	; 0
     30c:	11 f0       	breq	.+4      	; 0x312 <switcher+0x56>
					ABORT(test);
     30e:	0e 94 b0 0f 	call	0x1f60	; 0x1f60 <ABORT>
				}
				test = AFTER(MSEC(1250), self, switcher, NULL);	// NOTE: time needs to be above 1 second to be sure that the update has happend
     312:	c1 2c       	mov	r12, r1
     314:	d1 2c       	mov	r13, r1
     316:	8e e5       	ldi	r24, 0x5E	; 94
     318:	e8 2e       	mov	r14, r24
     31a:	81 e0       	ldi	r24, 0x01	; 1
     31c:	f8 2e       	mov	r15, r24
     31e:	8e 01       	movw	r16, r28
     320:	20 e0       	ldi	r18, 0x00	; 0
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	a9 01       	movw	r20, r18
     326:	66 e9       	ldi	r22, 0x96	; 150
     328:	78 e9       	ldi	r23, 0x98	; 152
     32a:	80 e0       	ldi	r24, 0x00	; 0
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
     332:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <test+0x1>
     336:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <test>
			}
		}
	}
}
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	df 91       	pop	r29
     340:	cf 91       	pop	r28
     342:	1f 91       	pop	r17
     344:	0f 91       	pop	r16
     346:	ff 90       	pop	r15
     348:	ef 90       	pop	r14
     34a:	df 90       	pop	r13
     34c:	cf 90       	pop	r12
     34e:	08 95       	ret
}

// Determines how and when to signal green on either side
int switcher (Handler *self) {
	if (self->isNorth) {
		if (self->northQueue && self->counter < 5) {
     350:	8c 85       	ldd	r24, Y+12	; 0x0c
     352:	9d 85       	ldd	r25, Y+13	; 0x0d
     354:	89 2b       	or	r24, r25
     356:	19 f1       	breq	.+70     	; 0x39e <switcher+0xe2>
     358:	88 89       	ldd	r24, Y+16	; 0x10
     35a:	99 89       	ldd	r25, Y+17	; 0x11
     35c:	85 30       	cpi	r24, 0x05	; 5
     35e:	91 05       	cpc	r25, r1
     360:	64 f0       	brlt	.+24     	; 0x37a <switcher+0xbe>
			ASYNC(self->com, transmit, 0b1001);				// Green north
		}
		else {
			if (self->southQueue && self->onBridge == 0) {
     362:	2a 85       	ldd	r18, Y+10	; 0x0a
     364:	3b 85       	ldd	r19, Y+11	; 0x0b
     366:	23 2b       	or	r18, r19
     368:	f1 f4       	brne	.+60     	; 0x3a6 <switcher+0xea>
				self->counter = 0;
				self->isNorth = 0;
				ASYNC(self->com, transmit, 0b0110);			// Green south
			}
			if (!(self->southQueue) && self->counter >= 5 && self->onBridge < 5) {
     36a:	2e 85       	ldd	r18, Y+14	; 0x0e
     36c:	3f 85       	ldd	r19, Y+15	; 0x0f
     36e:	25 30       	cpi	r18, 0x05	; 5
     370:	31 05       	cpc	r19, r1
     372:	3c f6       	brge	.-114    	; 0x302 <switcher+0x46>
				self->counter--;
     374:	01 97       	sbiw	r24, 0x01	; 1
     376:	99 8b       	std	Y+17, r25	; 0x11
     378:	88 8b       	std	Y+16, r24	; 0x10
				ASYNC(self->com, transmit, 0b1001);			// Green north
     37a:	0c 81       	ldd	r16, Y+4	; 0x04
     37c:	1d 81       	ldd	r17, Y+5	; 0x05
     37e:	59 e0       	ldi	r21, 0x09	; 9
     380:	c5 2e       	mov	r12, r21
     382:	d1 2c       	mov	r13, r1
     384:	6d e4       	ldi	r22, 0x4D	; 77
     386:	e6 2e       	mov	r14, r22
     388:	60 e0       	ldi	r22, 0x00	; 0
     38a:	f6 2e       	mov	r15, r22
     38c:	20 e0       	ldi	r18, 0x00	; 0
     38e:	30 e0       	ldi	r19, 0x00	; 0
     390:	a9 01       	movw	r20, r18
     392:	60 e0       	ldi	r22, 0x00	; 0
     394:	70 e0       	ldi	r23, 0x00	; 0
     396:	cb 01       	movw	r24, r22
     398:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
     39c:	ce cf       	rjmp	.-100    	; 0x33a <switcher+0x7e>
	if (self->isNorth) {
		if (self->northQueue && self->counter < 5) {
			ASYNC(self->com, transmit, 0b1001);				// Green north
		}
		else {
			if (self->southQueue && self->onBridge == 0) {
     39e:	8a 85       	ldd	r24, Y+10	; 0x0a
     3a0:	9b 85       	ldd	r25, Y+11	; 0x0b
     3a2:	89 2b       	or	r24, r25
     3a4:	f9 f0       	breq	.+62     	; 0x3e4 <switcher+0x128>
     3a6:	8e 85       	ldd	r24, Y+14	; 0x0e
     3a8:	9f 85       	ldd	r25, Y+15	; 0x0f
     3aa:	89 2b       	or	r24, r25
     3ac:	09 f0       	breq	.+2      	; 0x3b0 <switcher+0xf4>
     3ae:	a9 cf       	rjmp	.-174    	; 0x302 <switcher+0x46>
				self->counter = 0;
     3b0:	19 8a       	std	Y+17, r1	; 0x11
     3b2:	18 8a       	std	Y+16, r1	; 0x10
				self->isNorth = 0;
     3b4:	19 86       	std	Y+9, r1	; 0x09
     3b6:	18 86       	std	Y+8, r1	; 0x08
				ASYNC(self->com, transmit, 0b0110);			// Green south
     3b8:	0c 81       	ldd	r16, Y+4	; 0x04
     3ba:	1d 81       	ldd	r17, Y+5	; 0x05
     3bc:	76 e0       	ldi	r23, 0x06	; 6
     3be:	c7 2e       	mov	r12, r23
     3c0:	d1 2c       	mov	r13, r1
     3c2:	ed e4       	ldi	r30, 0x4D	; 77
     3c4:	ee 2e       	mov	r14, r30
     3c6:	e0 e0       	ldi	r30, 0x00	; 0
     3c8:	fe 2e       	mov	r15, r30
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	a9 01       	movw	r20, r18
     3d0:	60 e0       	ldi	r22, 0x00	; 0
     3d2:	70 e0       	ldi	r23, 0x00	; 0
     3d4:	cb 01       	movw	r24, r22
     3d6:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
			}
			if (!(self->southQueue) && self->counter >= 5 && self->onBridge < 5) {
     3da:	8a 85       	ldd	r24, Y+10	; 0x0a
     3dc:	9b 85       	ldd	r25, Y+11	; 0x0b
     3de:	89 2b       	or	r24, r25
     3e0:	09 f0       	breq	.+2      	; 0x3e4 <switcher+0x128>
     3e2:	8f cf       	rjmp	.-226    	; 0x302 <switcher+0x46>
     3e4:	88 89       	ldd	r24, Y+16	; 0x10
     3e6:	99 89       	ldd	r25, Y+17	; 0x11
     3e8:	85 30       	cpi	r24, 0x05	; 5
     3ea:	91 05       	cpc	r25, r1
     3ec:	0c f4       	brge	.+2      	; 0x3f0 <switcher+0x134>
     3ee:	89 cf       	rjmp	.-238    	; 0x302 <switcher+0x46>
     3f0:	bc cf       	rjmp	.-136    	; 0x36a <switcher+0xae>
	else if (!(self->isNorth)){
		if (self->southQueue && self->counter < 5) {
			ASYNC(self->com, transmit, 0b0110);				// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
     3f2:	8c 85       	ldd	r24, Y+12	; 0x0c
     3f4:	9d 85       	ldd	r25, Y+13	; 0x0d
     3f6:	89 2b       	or	r24, r25
     3f8:	39 f4       	brne	.+14     	; 0x408 <__DATA_REGION_LENGTH__+0x8>
				self->counter = 0;
				self->isNorth = 1;
				ASYNC(self->com, transmit, 0b1001);			// Green north 
			}
			if (!(self->northQueue) && self->counter >= 5 && self->onBridge < 5) {
     3fa:	88 89       	ldd	r24, Y+16	; 0x10
     3fc:	99 89       	ldd	r25, Y+17	; 0x11
     3fe:	85 30       	cpi	r24, 0x05	; 5
     400:	91 05       	cpc	r25, r1
     402:	0c f4       	brge	.+2      	; 0x406 <__DATA_REGION_LENGTH__+0x6>
     404:	7e cf       	rjmp	.-260    	; 0x302 <switcher+0x46>
     406:	77 cf       	rjmp	.-274    	; 0x2f6 <switcher+0x3a>
	else if (!(self->isNorth)){
		if (self->southQueue && self->counter < 5) {
			ASYNC(self->com, transmit, 0b0110);				// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
     408:	8e 85       	ldd	r24, Y+14	; 0x0e
     40a:	9f 85       	ldd	r25, Y+15	; 0x0f
     40c:	89 2b       	or	r24, r25
     40e:	09 f0       	breq	.+2      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
     410:	78 cf       	rjmp	.-272    	; 0x302 <switcher+0x46>
				self->counter = 0;
     412:	19 8a       	std	Y+17, r1	; 0x11
     414:	18 8a       	std	Y+16, r1	; 0x10
				self->isNorth = 1;
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	99 87       	std	Y+9, r25	; 0x09
     41c:	88 87       	std	Y+8, r24	; 0x08
				ASYNC(self->com, transmit, 0b1001);			// Green north 
     41e:	0c 81       	ldd	r16, Y+4	; 0x04
     420:	1d 81       	ldd	r17, Y+5	; 0x05
     422:	39 e0       	ldi	r19, 0x09	; 9
     424:	c3 2e       	mov	r12, r19
     426:	d1 2c       	mov	r13, r1
     428:	4d e4       	ldi	r20, 0x4D	; 77
     42a:	e4 2e       	mov	r14, r20
     42c:	40 e0       	ldi	r20, 0x00	; 0
     42e:	f4 2e       	mov	r15, r20
     430:	20 e0       	ldi	r18, 0x00	; 0
     432:	30 e0       	ldi	r19, 0x00	; 0
     434:	a9 01       	movw	r20, r18
     436:	60 e0       	ldi	r22, 0x00	; 0
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	cb 01       	movw	r24, r22
     43c:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
			}
			if (!(self->northQueue) && self->counter >= 5 && self->onBridge < 5) {
     440:	8c 85       	ldd	r24, Y+12	; 0x0c
     442:	9d 85       	ldd	r25, Y+13	; 0x0d
     444:	89 2b       	or	r24, r25
     446:	09 f0       	breq	.+2      	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
     448:	5c cf       	rjmp	.-328    	; 0x302 <switcher+0x46>
     44a:	d7 cf       	rjmp	.-82     	; 0x3fa <switcher+0x13e>
				self->counter--;
     44c:	01 97       	sbiw	r24, 0x01	; 1
     44e:	99 8b       	std	Y+17, r25	; 0x11
     450:	88 8b       	std	Y+16, r24	; 0x10
				ASYNC(self->com, transmit, 0b0110);			// Green south
     452:	0c 81       	ldd	r16, Y+4	; 0x04
     454:	1d 81       	ldd	r17, Y+5	; 0x05
     456:	96 e0       	ldi	r25, 0x06	; 6
     458:	c9 2e       	mov	r12, r25
     45a:	d1 2c       	mov	r13, r1
     45c:	2d e4       	ldi	r18, 0x4D	; 77
     45e:	e2 2e       	mov	r14, r18
     460:	20 e0       	ldi	r18, 0x00	; 0
     462:	f2 2e       	mov	r15, r18
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	a9 01       	movw	r20, r18
     46a:	60 e0       	ldi	r22, 0x00	; 0
     46c:	70 e0       	ldi	r23, 0x00	; 0
     46e:	cb 01       	movw	r24, r22
     470:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
     474:	62 cf       	rjmp	.-316    	; 0x33a <switcher+0x7e>

00000476 <Init>:
#define BAUD 9600
#define MYUBRR ((FOSC/(16UL*BAUD))-1)

// Just what you woud expect, all things needed for initialization
void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
     476:	e1 e6       	ldi	r30, 0x61	; 97
     478:	f0 e0       	ldi	r31, 0x00	; 0
     47a:	80 e8       	ldi	r24, 0x80	; 128
     47c:	80 83       	st	Z, r24
	CLKPR = 0x00;
     47e:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     480:	8f e0       	ldi	r24, 0x0F	; 15
     482:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     486:	87 eb       	ldi	r24, 0xB7	; 183
     488:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     48c:	87 e0       	ldi	r24, 0x07	; 7
     48e:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     492:	80 ec       	ldi	r24, 0xC0	; 192
     494:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// ------------------------- Stuffs for communication -------------------------------------------------
	
	/* Set baud rate */
	UBRR0H = (uint8_t)(MYUBRR<<8);
     498:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (uint8_t)(MYUBRR);
     49c:	83 e3       	ldi	r24, 0x33	; 51
     49e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	/* Enable receiver and transmitter */
	UCSR0B = (1<<TXEN0) | (1<<RXEN0) | (1<<RXCIE0);
     4a2:	88 e9       	ldi	r24, 0x98	; 152
     4a4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
     4a8:	08 95       	ret

000004aa <interrupter>:

#include <avr/io.h>
#include "InterruptHandler.h"

// Simply calls readvalue. (We want this seperate object since multiple interrupts can happen in short proximity or simultaneously)
int interrupter(InterruptHandler *self) {
     4aa:	cf 92       	push	r12
     4ac:	df 92       	push	r13
     4ae:	ef 92       	push	r14
     4b0:	ff 92       	push	r15
     4b2:	0f 93       	push	r16
     4b4:	1f 93       	push	r17
	
	//AFTER(MSEC(1000), self->handler, readValue, UDR0);
	ASYNC(self->handler, readValue, UDR0);
     4b6:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     4ba:	d1 2c       	mov	r13, r1
     4bc:	fc 01       	movw	r30, r24
     4be:	04 81       	ldd	r16, Z+4	; 0x04
     4c0:	15 81       	ldd	r17, Z+5	; 0x05
     4c2:	88 e0       	ldi	r24, 0x08	; 8
     4c4:	e8 2e       	mov	r14, r24
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	f8 2e       	mov	r15, r24
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	30 e0       	ldi	r19, 0x00	; 0
     4ce:	a9 01       	movw	r20, r18
     4d0:	60 e0       	ldi	r22, 0x00	; 0
     4d2:	70 e0       	ldi	r23, 0x00	; 0
     4d4:	cb 01       	movw	r24, r22
     4d6:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
	return 0;
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	1f 91       	pop	r17
     4e0:	0f 91       	pop	r16
     4e2:	ff 90       	pop	r15
     4e4:	ef 90       	pop	r14
     4e6:	df 90       	pop	r13
     4e8:	cf 90       	pop	r12
     4ea:	08 95       	ret

000004ec <removeOldChar.part.0>:
};

// Switches between two segments 
void switchSegment() {
    LCDDR13 = !(LCDDR13 & 1);
    LCDDR18 = !(LCDDR18 & 1);
     4ec:	fc 01       	movw	r30, r24
     4ee:	20 81       	ld	r18, Z
     4f0:	29 70       	andi	r18, 0x09	; 9
     4f2:	20 83       	st	Z, r18
     4f4:	35 96       	adiw	r30, 0x05	; 5
     4f6:	9c 01       	movw	r18, r24
     4f8:	2c 5e       	subi	r18, 0xEC	; 236
     4fa:	3f 4f       	sbci	r19, 0xFF	; 255
     4fc:	90 81       	ld	r25, Z
     4fe:	9f 70       	andi	r25, 0x0F	; 15
     500:	90 83       	st	Z, r25
     502:	35 96       	adiw	r30, 0x05	; 5
     504:	e2 17       	cp	r30, r18
     506:	f3 07       	cpc	r31, r19
     508:	c9 f7       	brne	.-14     	; 0x4fc <removeOldChar.part.0+0x10>
     50a:	08 95       	ret

0000050c <displayChar>:
     50c:	cf 93       	push	r28
     50e:	df 93       	push	r29
     510:	00 d0       	rcall	.+0      	; 0x512 <displayChar+0x6>
     512:	00 d0       	rcall	.+0      	; 0x514 <displayChar+0x8>
     514:	cd b7       	in	r28, 0x3d	; 61
     516:	de b7       	in	r29, 0x3e	; 62
     518:	da 01       	movw	r26, r20
     51a:	90 ed       	ldi	r25, 0xD0	; 208
     51c:	98 0f       	add	r25, r24
     51e:	9a 30       	cpi	r25, 0x0A	; 10
     520:	e8 f1       	brcs	.+122    	; 0x59c <displayChar+0x90>
     522:	89 e0       	ldi	r24, 0x09	; 9
     524:	89 83       	std	Y+1, r24	; 0x01
     526:	8f e0       	ldi	r24, 0x0F	; 15
     528:	8a 83       	std	Y+2, r24	; 0x02
     52a:	8b 83       	std	Y+3, r24	; 0x03
     52c:	8c 83       	std	Y+4, r24	; 0x04
     52e:	99 e0       	ldi	r25, 0x09	; 9
     530:	66 23       	and	r22, r22
     532:	99 f0       	breq	.+38     	; 0x55a <displayChar+0x4e>
     534:	fe 01       	movw	r30, r28
     536:	31 96       	adiw	r30, 0x01	; 1
     538:	9e 01       	movw	r18, r28
     53a:	2b 5f       	subi	r18, 0xFB	; 251
     53c:	3f 4f       	sbci	r19, 0xFF	; 255
     53e:	92 95       	swap	r25
     540:	90 7f       	andi	r25, 0xF0	; 240
     542:	91 93       	st	Z+, r25
     544:	2e 17       	cp	r18, r30
     546:	3f 07       	cpc	r19, r31
     548:	39 f0       	breq	.+14     	; 0x558 <displayChar+0x4c>
     54a:	90 81       	ld	r25, Z
     54c:	92 95       	swap	r25
     54e:	90 7f       	andi	r25, 0xF0	; 240
     550:	91 93       	st	Z+, r25
     552:	2e 17       	cp	r18, r30
     554:	3f 07       	cpc	r19, r31
     556:	c9 f7       	brne	.-14     	; 0x54a <displayChar+0x3e>
     558:	99 81       	ldd	r25, Y+1	; 0x01
     55a:	8c 91       	ld	r24, X
     55c:	98 2b       	or	r25, r24
     55e:	9c 93       	st	X, r25
     560:	15 96       	adiw	r26, 0x05	; 5
     562:	9c 91       	ld	r25, X
     564:	15 97       	sbiw	r26, 0x05	; 5
     566:	8a 81       	ldd	r24, Y+2	; 0x02
     568:	89 2b       	or	r24, r25
     56a:	15 96       	adiw	r26, 0x05	; 5
     56c:	8c 93       	st	X, r24
     56e:	15 97       	sbiw	r26, 0x05	; 5
     570:	1a 96       	adiw	r26, 0x0a	; 10
     572:	9c 91       	ld	r25, X
     574:	1a 97       	sbiw	r26, 0x0a	; 10
     576:	8b 81       	ldd	r24, Y+3	; 0x03
     578:	89 2b       	or	r24, r25
     57a:	1a 96       	adiw	r26, 0x0a	; 10
     57c:	8c 93       	st	X, r24
     57e:	1a 97       	sbiw	r26, 0x0a	; 10
     580:	1f 96       	adiw	r26, 0x0f	; 15
     582:	9c 91       	ld	r25, X
     584:	1f 97       	sbiw	r26, 0x0f	; 15
     586:	8c 81       	ldd	r24, Y+4	; 0x04
     588:	89 2b       	or	r24, r25
     58a:	1f 96       	adiw	r26, 0x0f	; 15
     58c:	8c 93       	st	X, r24
     58e:	0f 90       	pop	r0
     590:	0f 90       	pop	r0
     592:	0f 90       	pop	r0
     594:	0f 90       	pop	r0
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	08 95       	ret
     59c:	e8 2f       	mov	r30, r24
     59e:	f0 e0       	ldi	r31, 0x00	; 0
     5a0:	ee 0f       	add	r30, r30
     5a2:	ff 1f       	adc	r31, r31
     5a4:	ee 0f       	add	r30, r30
     5a6:	ff 1f       	adc	r31, r31
     5a8:	e8 5b       	subi	r30, 0xB8	; 184
     5aa:	ff 4f       	sbci	r31, 0xFF	; 255
     5ac:	90 81       	ld	r25, Z
     5ae:	99 83       	std	Y+1, r25	; 0x01
     5b0:	81 81       	ldd	r24, Z+1	; 0x01
     5b2:	8a 83       	std	Y+2, r24	; 0x02
     5b4:	82 81       	ldd	r24, Z+2	; 0x02
     5b6:	8b 83       	std	Y+3, r24	; 0x03
     5b8:	83 81       	ldd	r24, Z+3	; 0x03
     5ba:	8c 83       	std	Y+4, r24	; 0x04
     5bc:	b9 cf       	rjmp	.-142    	; 0x530 <displayChar+0x24>

000005be <writeChar>:
     5be:	0f 93       	push	r16
     5c0:	1f 93       	push	r17
     5c2:	cf 93       	push	r28
     5c4:	60 fd       	sbrc	r22, 0
     5c6:	1c c0       	rjmp	.+56     	; 0x600 <writeChar+0x42>
     5c8:	77 fd       	sbrc	r23, 7
     5ca:	30 c0       	rjmp	.+96     	; 0x62c <writeChar+0x6e>
     5cc:	75 95       	asr	r23
     5ce:	67 95       	ror	r22
     5d0:	ab 01       	movw	r20, r22
     5d2:	44 51       	subi	r20, 0x14	; 20
     5d4:	5f 4f       	sbci	r21, 0xFF	; 255
     5d6:	fa 01       	movw	r30, r20
     5d8:	90 81       	ld	r25, Z
     5da:	90 79       	andi	r25, 0x90	; 144
     5dc:	90 83       	st	Z, r25
     5de:	35 96       	adiw	r30, 0x05	; 5
     5e0:	9a 01       	movw	r18, r20
     5e2:	2c 5e       	subi	r18, 0xEC	; 236
     5e4:	3f 4f       	sbci	r19, 0xFF	; 255
     5e6:	90 81       	ld	r25, Z
     5e8:	90 7f       	andi	r25, 0xF0	; 240
     5ea:	90 83       	st	Z, r25
     5ec:	35 96       	adiw	r30, 0x05	; 5
     5ee:	e2 17       	cp	r30, r18
     5f0:	f3 07       	cpc	r31, r19
     5f2:	c9 f7       	brne	.-14     	; 0x5e6 <writeChar+0x28>
     5f4:	60 e0       	ldi	r22, 0x00	; 0
     5f6:	cf 91       	pop	r28
     5f8:	1f 91       	pop	r17
     5fa:	0f 91       	pop	r16
     5fc:	0c 94 86 02 	jmp	0x50c	; 0x50c <displayChar>
     600:	ab 01       	movw	r20, r22
     602:	41 50       	subi	r20, 0x01	; 1
     604:	51 09       	sbc	r21, r1
     606:	57 fd       	sbrc	r21, 7
     608:	14 c0       	rjmp	.+40     	; 0x632 <writeChar+0x74>
     60a:	c8 2f       	mov	r28, r24
     60c:	55 95       	asr	r21
     60e:	47 95       	ror	r20
     610:	8a 01       	movw	r16, r20
     612:	04 51       	subi	r16, 0x14	; 20
     614:	1f 4f       	sbci	r17, 0xFF	; 255
     616:	c8 01       	movw	r24, r16
     618:	0e 94 76 02 	call	0x4ec	; 0x4ec <removeOldChar.part.0>
     61c:	a8 01       	movw	r20, r16
     61e:	61 e0       	ldi	r22, 0x01	; 1
     620:	8c 2f       	mov	r24, r28
     622:	cf 91       	pop	r28
     624:	1f 91       	pop	r17
     626:	0f 91       	pop	r16
     628:	0c 94 86 02 	jmp	0x50c	; 0x50c <displayChar>
     62c:	6f 5f       	subi	r22, 0xFF	; 255
     62e:	7f 4f       	sbci	r23, 0xFF	; 255
     630:	cd cf       	rjmp	.-102    	; 0x5cc <writeChar+0xe>
     632:	ab 01       	movw	r20, r22
     634:	ea cf       	rjmp	.-44     	; 0x60a <writeChar+0x4c>

00000636 <printAt>:
}
 
// Displays last two digits of num in pos and pos+1
int  printAt(Lcd *self, int input) {  // [pos, num]
     636:	ef 92       	push	r14
     638:	ff 92       	push	r15
     63a:	0f 93       	push	r16
     63c:	1f 93       	push	r17
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	cb 01       	movw	r24, r22
    int pp = input % 10;
     644:	0a e0       	ldi	r16, 0x0A	; 10
     646:	10 e0       	ldi	r17, 0x00	; 0
     648:	b8 01       	movw	r22, r16
     64a:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__divmodhi4>
     64e:	7b 01       	movw	r14, r22
     650:	ec 01       	movw	r28, r24
    int num = input / 10;
    writeChar((num % 100) / 10 + '0', pp);
     652:	cb 01       	movw	r24, r22
     654:	64 e6       	ldi	r22, 0x64	; 100
     656:	70 e0       	ldi	r23, 0x00	; 0
     658:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__divmodhi4>
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__divmodhi4>
     662:	86 2f       	mov	r24, r22
     664:	be 01       	movw	r22, r28
     666:	80 5d       	subi	r24, 0xD0	; 208
     668:	0e 94 df 02 	call	0x5be	; 0x5be <writeChar>
    pp++;
    writeChar( num % 10 + '0', pp);
     66c:	21 96       	adiw	r28, 0x01	; 1
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__divmodhi4>
     676:	be 01       	movw	r22, r28
     678:	80 5d       	subi	r24, 0xD0	; 208
     67a:	0e 94 df 02 	call	0x5be	; 0x5be <writeChar>

    return 0;
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	df 91       	pop	r29
     684:	cf 91       	pop	r28
     686:	1f 91       	pop	r17
     688:	0f 91       	pop	r16
     68a:	ff 90       	pop	r15
     68c:	ef 90       	pop	r14
     68e:	08 95       	ret

00000690 <main>:
#include "Communication.h"
#include "Lcd.h"
#include "TinyTimber.h"
#include "InterruptHandler.h"

int main(void) {
     690:	cf 93       	push	r28
     692:	df 93       	push	r29
     694:	cd b7       	in	r28, 0x3d	; 61
     696:	de b7       	in	r29, 0x3e	; 62
     698:	a0 97       	sbiw	r28, 0x20	; 32
     69a:	0f b6       	in	r0, 0x3f	; 63
     69c:	f8 94       	cli
     69e:	de bf       	out	0x3e, r29	; 62
     6a0:	0f be       	out	0x3f, r0	; 63
     6a2:	cd bf       	out	0x3d, r28	; 61
    Init();
     6a4:	0e 94 3b 02 	call	0x476	; 0x476 <Init>
	Lcd lcd = initLcd();
     6a8:	1e 8e       	std	Y+30, r1	; 0x1e
     6aa:	1d 8e       	std	Y+29, r1	; 0x1d
     6ac:	18 a2       	std	Y+32, r1	; 0x20
     6ae:	1f 8e       	std	Y+31, r1	; 0x1f
	Communication com = initCommunication();
     6b0:	1a 8e       	std	Y+26, r1	; 0x1a
     6b2:	19 8e       	std	Y+25, r1	; 0x19
     6b4:	1c 8e       	std	Y+28, r1	; 0x1c
     6b6:	1b 8e       	std	Y+27, r1	; 0x1b
	Handler handler = initHandler(&com, &lcd);
     6b8:	1a 82       	std	Y+2, r1	; 0x02
     6ba:	19 82       	std	Y+1, r1	; 0x01
     6bc:	1c 82       	std	Y+4, r1	; 0x04
     6be:	1b 82       	std	Y+3, r1	; 0x03
     6c0:	ce 01       	movw	r24, r28
     6c2:	49 96       	adiw	r24, 0x19	; 25
     6c4:	9e 83       	std	Y+6, r25	; 0x06
     6c6:	8d 83       	std	Y+5, r24	; 0x05
     6c8:	04 96       	adiw	r24, 0x04	; 4
     6ca:	98 87       	std	Y+8, r25	; 0x08
     6cc:	8f 83       	std	Y+7, r24	; 0x07
     6ce:	81 e0       	ldi	r24, 0x01	; 1
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	9a 87       	std	Y+10, r25	; 0x0a
     6d4:	89 87       	std	Y+9, r24	; 0x09
     6d6:	1c 86       	std	Y+12, r1	; 0x0c
     6d8:	1b 86       	std	Y+11, r1	; 0x0b
     6da:	1e 86       	std	Y+14, r1	; 0x0e
     6dc:	1d 86       	std	Y+13, r1	; 0x0d
     6de:	18 8a       	std	Y+16, r1	; 0x10
     6e0:	1f 86       	std	Y+15, r1	; 0x0f
     6e2:	1a 8a       	std	Y+18, r1	; 0x12
     6e4:	19 8a       	std	Y+17, r1	; 0x11
	InterruptHandler interruptHandler = initInterruptHandler(&handler);
     6e6:	1c 8a       	std	Y+20, r1	; 0x14
     6e8:	1b 8a       	std	Y+19, r1	; 0x13
     6ea:	1e 8a       	std	Y+22, r1	; 0x16
     6ec:	1d 8a       	std	Y+21, r1	; 0x15
     6ee:	ce 01       	movw	r24, r28
     6f0:	01 96       	adiw	r24, 0x01	; 1
     6f2:	98 8f       	std	Y+24, r25	; 0x18
     6f4:	8f 8b       	std	Y+23, r24	; 0x17
	INSTALL(&interruptHandler, interrupter, IRQ_USART0_RX);
     6f6:	48 e0       	ldi	r20, 0x08	; 8
     6f8:	65 e5       	ldi	r22, 0x55	; 85
     6fa:	72 e0       	ldi	r23, 0x02	; 2
     6fc:	42 96       	adiw	r24, 0x12	; 18
     6fe:	0e 94 36 10 	call	0x206c	; 0x206c <install>
	return tinytimber(NULL, NULL, NULL);
     702:	40 e0       	ldi	r20, 0x00	; 0
     704:	50 e0       	ldi	r21, 0x00	; 0
     706:	60 e0       	ldi	r22, 0x00	; 0
     708:	70 e0       	ldi	r23, 0x00	; 0
     70a:	80 e0       	ldi	r24, 0x00	; 0
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	0e 94 50 10 	call	0x20a0	; 0x20a0 <tinytimber>
}
     712:	a0 96       	adiw	r28, 0x20	; 32
     714:	0f b6       	in	r0, 0x3f	; 63
     716:	f8 94       	cli
     718:	de bf       	out	0x3e, r29	; 62
     71a:	0f be       	out	0x3f, r0	; 63
     71c:	cd bf       	out	0x3d, r28	; 61
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	08 95       	ret

00000724 <initialize>:
    char status;
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	00 d0       	rcall	.+0      	; 0x72a <initialize+0x6>
     72a:	00 d0       	rcall	.+0      	; 0x72c <initialize+0x8>
     72c:	cd b7       	in	r28, 0x3d	; 61
     72e:	de b7       	in	r29, 0x3e	; 62
     730:	8b e2       	ldi	r24, 0x2B	; 43
     732:	92 e0       	ldi	r25, 0x02	; 2
     734:	2b e0       	ldi	r18, 0x0B	; 11
     736:	33 e0       	ldi	r19, 0x03	; 3
     738:	fc 01       	movw	r30, r24
     73a:	70 97       	sbiw	r30, 0x10	; 16
     73c:	91 83       	std	Z+1, r25	; 0x01
     73e:	80 83       	st	Z, r24
     740:	40 96       	adiw	r24, 0x10	; 16
     742:	82 17       	cp	r24, r18
     744:	93 07       	cpc	r25, r19
     746:	c1 f7       	brne	.-16     	; 0x738 <initialize+0x14>
     748:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     74c:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     750:	e6 e6       	ldi	r30, 0x66	; 102
     752:	f1 e0       	ldi	r31, 0x01	; 1
     754:	83 e8       	ldi	r24, 0x83	; 131
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	91 83       	std	Z+1, r25	; 0x01
     75a:	80 83       	st	Z, r24
     75c:	80 ea       	ldi	r24, 0xA0	; 160
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	96 8f       	std	Z+30, r25	; 0x1e
     762:	85 8f       	std	Z+29, r24	; 0x1d
     764:	ad eb       	ldi	r26, 0xBD	; 189
     766:	b1 e0       	ldi	r27, 0x01	; 1
     768:	b3 af       	std	Z+59, r27	; 0x3b
     76a:	a2 af       	std	Z+58, r26	; 0x3a
     76c:	1d 92       	st	X+, r1
     76e:	1c 92       	st	X, r1
     770:	fa 83       	std	Y+2, r31	; 0x02
     772:	e9 83       	std	Y+1, r30	; 0x01
     774:	e7 e6       	ldi	r30, 0x67	; 103
     776:	f3 e0       	ldi	r31, 0x03	; 3
     778:	fc 83       	std	Y+4, r31	; 0x04
     77a:	eb 83       	std	Y+3, r30	; 0x03
     77c:	89 81       	ldd	r24, Y+1	; 0x01
     77e:	9a 81       	ldd	r25, Y+2	; 0x02
     780:	06 96       	adiw	r24, 0x06	; 6
     782:	0e 94 94 10 	call	0x2128	; 0x2128 <setjmp>
     786:	8b 81       	ldd	r24, Y+3	; 0x03
     788:	9c 81       	ldd	r25, Y+4	; 0x04
     78a:	e9 81       	ldd	r30, Y+1	; 0x01
     78c:	fa 81       	ldd	r31, Y+2	; 0x02
     78e:	97 8b       	std	Z+23, r25	; 0x17
     790:	86 8b       	std	Z+22, r24	; 0x16
     792:	91 8f       	std	Z+25, r25	; 0x19
     794:	80 8f       	std	Z+24, r24	; 0x18
     796:	85 e3       	ldi	r24, 0x35	; 53
     798:	9f e0       	ldi	r25, 0x0F	; 15
     79a:	94 8f       	std	Z+28, r25	; 0x1c
     79c:	83 8f       	std	Z+27, r24	; 0x1b
     79e:	15 82       	std	Z+5, r1	; 0x05
     7a0:	14 82       	std	Z+4, r1	; 0x04
     7a2:	7d 96       	adiw	r30, 0x1d	; 29
     7a4:	fa 83       	std	Y+2, r31	; 0x02
     7a6:	e9 83       	std	Y+1, r30	; 0x01
     7a8:	eb 81       	ldd	r30, Y+3	; 0x03
     7aa:	fc 81       	ldd	r31, Y+4	; 0x04
     7ac:	e0 5a       	subi	r30, 0xA0	; 160
     7ae:	ff 4f       	sbci	r31, 0xFF	; 255
     7b0:	fc 83       	std	Y+4, r31	; 0x04
     7b2:	eb 83       	std	Y+3, r30	; 0x03
     7b4:	89 81       	ldd	r24, Y+1	; 0x01
     7b6:	9a 81       	ldd	r25, Y+2	; 0x02
     7b8:	8a 5d       	subi	r24, 0xDA	; 218
     7ba:	91 40       	sbci	r25, 0x01	; 1
     7bc:	f9 f6       	brne	.-66     	; 0x77c <initialize+0x58>
     7be:	ee ef       	ldi	r30, 0xFE	; 254
     7c0:	f1 e0       	ldi	r31, 0x01	; 1
     7c2:	11 82       	std	Z+1, r1	; 0x01
     7c4:	10 82       	st	Z, r1
     7c6:	15 82       	std	Z+5, r1	; 0x05
     7c8:	14 82       	std	Z+4, r1	; 0x04
     7ca:	13 82       	std	Z+3, r1	; 0x03
     7cc:	12 82       	std	Z+2, r1	; 0x02
     7ce:	e1 e6       	ldi	r30, 0x61	; 97
     7d0:	f0 e0       	ldi	r31, 0x00	; 0
     7d2:	80 e8       	ldi	r24, 0x80	; 128
     7d4:	80 83       	st	Z, r24
     7d6:	10 82       	st	Z, r1
     7d8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     7dc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     7e0:	84 e0       	ldi	r24, 0x04	; 4
     7e2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     7ec:	0f 90       	pop	r0
     7ee:	0f 90       	pop	r0
     7f0:	0f 90       	pop	r0
     7f2:	0f 90       	pop	r0
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	08 95       	ret

000007fa <dispatch>:
     7fa:	cf 93       	push	r28
     7fc:	df 93       	push	r29
     7fe:	00 d0       	rcall	.+0      	; 0x800 <dispatch+0x6>
     800:	cd b7       	in	r28, 0x3d	; 61
     802:	de b7       	in	r29, 0x3e	; 62
     804:	9a 83       	std	Y+2, r25	; 0x02
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     80c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     810:	06 96       	adiw	r24, 0x06	; 6
     812:	0e 94 94 10 	call	0x2128	; 0x2128 <setjmp>
     816:	89 2b       	or	r24, r25
     818:	29 f0       	breq	.+10     	; 0x824 <dispatch+0x2a>
     81a:	0f 90       	pop	r0
     81c:	0f 90       	pop	r0
     81e:	df 91       	pop	r29
     820:	cf 91       	pop	r28
     822:	08 95       	ret
     824:	89 81       	ldd	r24, Y+1	; 0x01
     826:	9a 81       	ldd	r25, Y+2	; 0x02
     828:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     82c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     830:	61 e0       	ldi	r22, 0x01	; 1
     832:	70 e0       	ldi	r23, 0x00	; 0
     834:	06 96       	adiw	r24, 0x06	; 6
     836:	0e 94 b4 10 	call	0x2168	; 0x2168 <longjmp>

0000083a <schedule>:
     83a:	0f 93       	push	r16
     83c:	1f 93       	push	r17
     83e:	cf 93       	push	r28
     840:	df 93       	push	r29
     842:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <msgQ>
     846:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <msgQ+0x1>
     84a:	30 97       	sbiw	r30, 0x00	; 0
     84c:	f1 f0       	breq	.+60     	; 0x88a <schedule+0x50>
     84e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     852:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     856:	00 97       	sbiw	r24, 0x00	; 0
     858:	c1 f0       	breq	.+48     	; 0x88a <schedule+0x50>
     85a:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     85e:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     862:	aa 81       	ldd	r26, Y+2	; 0x02
     864:	bb 81       	ldd	r27, Y+3	; 0x03
     866:	10 97       	sbiw	r26, 0x00	; 0
     868:	a9 f0       	breq	.+42     	; 0x894 <schedule+0x5a>
     86a:	46 81       	ldd	r20, Z+6	; 0x06
     86c:	57 81       	ldd	r21, Z+7	; 0x07
     86e:	60 85       	ldd	r22, Z+8	; 0x08
     870:	71 85       	ldd	r23, Z+9	; 0x09
     872:	16 96       	adiw	r26, 0x06	; 6
     874:	0d 91       	ld	r16, X+
     876:	1d 91       	ld	r17, X+
     878:	2d 91       	ld	r18, X+
     87a:	3c 91       	ld	r19, X
     87c:	19 97       	sbiw	r26, 0x09	; 9
     87e:	40 1b       	sub	r20, r16
     880:	51 0b       	sbc	r21, r17
     882:	62 0b       	sbc	r22, r18
     884:	73 0b       	sbc	r23, r19
     886:	77 fd       	sbrc	r23, 7
     888:	05 c0       	rjmp	.+10     	; 0x894 <schedule+0x5a>
     88a:	df 91       	pop	r29
     88c:	cf 91       	pop	r28
     88e:	1f 91       	pop	r17
     890:	0f 91       	pop	r16
     892:	08 95       	ret
     894:	fc 01       	movw	r30, r24
     896:	20 81       	ld	r18, Z
     898:	31 81       	ldd	r19, Z+1	; 0x01
     89a:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     89e:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     8a2:	d1 83       	std	Z+1, r29	; 0x01
     8a4:	c0 83       	st	Z, r28
     8a6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     8aa:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     8ae:	df 91       	pop	r29
     8b0:	cf 91       	pop	r28
     8b2:	1f 91       	pop	r17
     8b4:	0f 91       	pop	r16
     8b6:	0c 94 fd 03 	jmp	0x7fa	; 0x7fa <dispatch>

000008ba <dequeue.part.0>:
     8ba:	8f ef       	ldi	r24, 0xFF	; 255
     8bc:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     8c0:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     8c4:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     8c8:	81 e0       	ldi	r24, 0x01	; 1
     8ca:	83 bf       	out	0x33, r24	; 51
     8cc:	88 95       	sleep
     8ce:	fd cf       	rjmp	.-6      	; 0x8ca <dequeue.part.0+0x10>

000008d0 <__vector_1>:
     8d0:	1f 92       	push	r1
     8d2:	0f 92       	push	r0
     8d4:	0f b6       	in	r0, 0x3f	; 63
     8d6:	0f 92       	push	r0
     8d8:	11 24       	eor	r1, r1
     8da:	2f 93       	push	r18
     8dc:	3f 93       	push	r19
     8de:	4f 93       	push	r20
     8e0:	5f 93       	push	r21
     8e2:	6f 93       	push	r22
     8e4:	7f 93       	push	r23
     8e6:	8f 93       	push	r24
     8e8:	9f 93       	push	r25
     8ea:	af 93       	push	r26
     8ec:	bf 93       	push	r27
     8ee:	ef 93       	push	r30
     8f0:	ff 93       	push	r31
     8f2:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     8f6:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     8fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     902:	c9 01       	movw	r24, r18
     904:	03 2e       	mov	r0, r19
     906:	00 0c       	add	r0, r0
     908:	aa 0b       	sbc	r26, r26
     90a:	bb 0b       	sbc	r27, r27
     90c:	dc 01       	movw	r26, r24
     90e:	99 27       	eor	r25, r25
     910:	88 27       	eor	r24, r24
     912:	60 e0       	ldi	r22, 0x00	; 0
     914:	70 e0       	ldi	r23, 0x00	; 0
     916:	84 2b       	or	r24, r20
     918:	95 2b       	or	r25, r21
     91a:	a6 2b       	or	r26, r22
     91c:	b7 2b       	or	r27, r23
     91e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     922:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     926:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     92a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     92e:	b0 9b       	sbis	0x16, 0	; 22
     930:	1b c0       	rjmp	.+54     	; 0x968 <__vector_1+0x98>
     932:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     936:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     93a:	c9 01       	movw	r24, r18
     93c:	01 96       	adiw	r24, 0x01	; 1
     93e:	09 2e       	mov	r0, r25
     940:	00 0c       	add	r0, r0
     942:	aa 0b       	sbc	r26, r26
     944:	bb 0b       	sbc	r27, r27
     946:	dc 01       	movw	r26, r24
     948:	99 27       	eor	r25, r25
     94a:	88 27       	eor	r24, r24
     94c:	60 e0       	ldi	r22, 0x00	; 0
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	84 2b       	or	r24, r20
     952:	95 2b       	or	r25, r21
     954:	a6 2b       	or	r26, r22
     956:	b7 2b       	or	r27, r23
     958:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     95c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     960:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     964:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     968:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     96c:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     970:	30 97       	sbiw	r30, 0x00	; 0
     972:	39 f0       	breq	.+14     	; 0x982 <__vector_1+0xb2>
     974:	60 e0       	ldi	r22, 0x00	; 0
     976:	70 e0       	ldi	r23, 0x00	; 0
     978:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     97c:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     980:	09 95       	icall
     982:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
     986:	ff 91       	pop	r31
     988:	ef 91       	pop	r30
     98a:	bf 91       	pop	r27
     98c:	af 91       	pop	r26
     98e:	9f 91       	pop	r25
     990:	8f 91       	pop	r24
     992:	7f 91       	pop	r23
     994:	6f 91       	pop	r22
     996:	5f 91       	pop	r21
     998:	4f 91       	pop	r20
     99a:	3f 91       	pop	r19
     99c:	2f 91       	pop	r18
     99e:	0f 90       	pop	r0
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	0f 90       	pop	r0
     9a4:	1f 90       	pop	r1
     9a6:	18 95       	reti

000009a8 <__vector_2>:
     9a8:	1f 92       	push	r1
     9aa:	0f 92       	push	r0
     9ac:	0f b6       	in	r0, 0x3f	; 63
     9ae:	0f 92       	push	r0
     9b0:	11 24       	eor	r1, r1
     9b2:	2f 93       	push	r18
     9b4:	3f 93       	push	r19
     9b6:	4f 93       	push	r20
     9b8:	5f 93       	push	r21
     9ba:	6f 93       	push	r22
     9bc:	7f 93       	push	r23
     9be:	8f 93       	push	r24
     9c0:	9f 93       	push	r25
     9c2:	af 93       	push	r26
     9c4:	bf 93       	push	r27
     9c6:	ef 93       	push	r30
     9c8:	ff 93       	push	r31
     9ca:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     9ce:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     9d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9da:	c9 01       	movw	r24, r18
     9dc:	03 2e       	mov	r0, r19
     9de:	00 0c       	add	r0, r0
     9e0:	aa 0b       	sbc	r26, r26
     9e2:	bb 0b       	sbc	r27, r27
     9e4:	dc 01       	movw	r26, r24
     9e6:	99 27       	eor	r25, r25
     9e8:	88 27       	eor	r24, r24
     9ea:	60 e0       	ldi	r22, 0x00	; 0
     9ec:	70 e0       	ldi	r23, 0x00	; 0
     9ee:	84 2b       	or	r24, r20
     9f0:	95 2b       	or	r25, r21
     9f2:	a6 2b       	or	r26, r22
     9f4:	b7 2b       	or	r27, r23
     9f6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     9fa:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     9fe:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     a02:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     a06:	b0 9b       	sbis	0x16, 0	; 22
     a08:	1b c0       	rjmp	.+54     	; 0xa40 <__vector_2+0x98>
     a0a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a0e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a12:	c9 01       	movw	r24, r18
     a14:	01 96       	adiw	r24, 0x01	; 1
     a16:	09 2e       	mov	r0, r25
     a18:	00 0c       	add	r0, r0
     a1a:	aa 0b       	sbc	r26, r26
     a1c:	bb 0b       	sbc	r27, r27
     a1e:	dc 01       	movw	r26, r24
     a20:	99 27       	eor	r25, r25
     a22:	88 27       	eor	r24, r24
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	84 2b       	or	r24, r20
     a2a:	95 2b       	or	r25, r21
     a2c:	a6 2b       	or	r26, r22
     a2e:	b7 2b       	or	r27, r23
     a30:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     a34:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     a38:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     a3c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     a40:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     a44:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     a48:	30 97       	sbiw	r30, 0x00	; 0
     a4a:	39 f0       	breq	.+14     	; 0xa5a <__vector_2+0xb2>
     a4c:	61 e0       	ldi	r22, 0x01	; 1
     a4e:	70 e0       	ldi	r23, 0x00	; 0
     a50:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     a54:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     a58:	09 95       	icall
     a5a:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
     a5e:	ff 91       	pop	r31
     a60:	ef 91       	pop	r30
     a62:	bf 91       	pop	r27
     a64:	af 91       	pop	r26
     a66:	9f 91       	pop	r25
     a68:	8f 91       	pop	r24
     a6a:	7f 91       	pop	r23
     a6c:	6f 91       	pop	r22
     a6e:	5f 91       	pop	r21
     a70:	4f 91       	pop	r20
     a72:	3f 91       	pop	r19
     a74:	2f 91       	pop	r18
     a76:	0f 90       	pop	r0
     a78:	0f be       	out	0x3f, r0	; 63
     a7a:	0f 90       	pop	r0
     a7c:	1f 90       	pop	r1
     a7e:	18 95       	reti

00000a80 <__vector_3>:
     a80:	1f 92       	push	r1
     a82:	0f 92       	push	r0
     a84:	0f b6       	in	r0, 0x3f	; 63
     a86:	0f 92       	push	r0
     a88:	11 24       	eor	r1, r1
     a8a:	2f 93       	push	r18
     a8c:	3f 93       	push	r19
     a8e:	4f 93       	push	r20
     a90:	5f 93       	push	r21
     a92:	6f 93       	push	r22
     a94:	7f 93       	push	r23
     a96:	8f 93       	push	r24
     a98:	9f 93       	push	r25
     a9a:	af 93       	push	r26
     a9c:	bf 93       	push	r27
     a9e:	ef 93       	push	r30
     aa0:	ff 93       	push	r31
     aa2:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     aa6:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     aaa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     aae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ab2:	c9 01       	movw	r24, r18
     ab4:	03 2e       	mov	r0, r19
     ab6:	00 0c       	add	r0, r0
     ab8:	aa 0b       	sbc	r26, r26
     aba:	bb 0b       	sbc	r27, r27
     abc:	dc 01       	movw	r26, r24
     abe:	99 27       	eor	r25, r25
     ac0:	88 27       	eor	r24, r24
     ac2:	60 e0       	ldi	r22, 0x00	; 0
     ac4:	70 e0       	ldi	r23, 0x00	; 0
     ac6:	84 2b       	or	r24, r20
     ac8:	95 2b       	or	r25, r21
     aca:	a6 2b       	or	r26, r22
     acc:	b7 2b       	or	r27, r23
     ace:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     ad2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     ad6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     ada:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     ade:	b0 9b       	sbis	0x16, 0	; 22
     ae0:	1b c0       	rjmp	.+54     	; 0xb18 <__vector_3+0x98>
     ae2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ae6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     aea:	c9 01       	movw	r24, r18
     aec:	01 96       	adiw	r24, 0x01	; 1
     aee:	09 2e       	mov	r0, r25
     af0:	00 0c       	add	r0, r0
     af2:	aa 0b       	sbc	r26, r26
     af4:	bb 0b       	sbc	r27, r27
     af6:	dc 01       	movw	r26, r24
     af8:	99 27       	eor	r25, r25
     afa:	88 27       	eor	r24, r24
     afc:	60 e0       	ldi	r22, 0x00	; 0
     afe:	70 e0       	ldi	r23, 0x00	; 0
     b00:	84 2b       	or	r24, r20
     b02:	95 2b       	or	r25, r21
     b04:	a6 2b       	or	r26, r22
     b06:	b7 2b       	or	r27, r23
     b08:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     b0c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     b10:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     b14:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     b18:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     b1c:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     b20:	30 97       	sbiw	r30, 0x00	; 0
     b22:	39 f0       	breq	.+14     	; 0xb32 <__vector_3+0xb2>
     b24:	62 e0       	ldi	r22, 0x02	; 2
     b26:	70 e0       	ldi	r23, 0x00	; 0
     b28:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     b2c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     b30:	09 95       	icall
     b32:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
     b36:	ff 91       	pop	r31
     b38:	ef 91       	pop	r30
     b3a:	bf 91       	pop	r27
     b3c:	af 91       	pop	r26
     b3e:	9f 91       	pop	r25
     b40:	8f 91       	pop	r24
     b42:	7f 91       	pop	r23
     b44:	6f 91       	pop	r22
     b46:	5f 91       	pop	r21
     b48:	4f 91       	pop	r20
     b4a:	3f 91       	pop	r19
     b4c:	2f 91       	pop	r18
     b4e:	0f 90       	pop	r0
     b50:	0f be       	out	0x3f, r0	; 63
     b52:	0f 90       	pop	r0
     b54:	1f 90       	pop	r1
     b56:	18 95       	reti

00000b58 <__vector_4>:
     b58:	1f 92       	push	r1
     b5a:	0f 92       	push	r0
     b5c:	0f b6       	in	r0, 0x3f	; 63
     b5e:	0f 92       	push	r0
     b60:	11 24       	eor	r1, r1
     b62:	2f 93       	push	r18
     b64:	3f 93       	push	r19
     b66:	4f 93       	push	r20
     b68:	5f 93       	push	r21
     b6a:	6f 93       	push	r22
     b6c:	7f 93       	push	r23
     b6e:	8f 93       	push	r24
     b70:	9f 93       	push	r25
     b72:	af 93       	push	r26
     b74:	bf 93       	push	r27
     b76:	ef 93       	push	r30
     b78:	ff 93       	push	r31
     b7a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     b7e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     b82:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b86:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b8a:	c9 01       	movw	r24, r18
     b8c:	03 2e       	mov	r0, r19
     b8e:	00 0c       	add	r0, r0
     b90:	aa 0b       	sbc	r26, r26
     b92:	bb 0b       	sbc	r27, r27
     b94:	dc 01       	movw	r26, r24
     b96:	99 27       	eor	r25, r25
     b98:	88 27       	eor	r24, r24
     b9a:	60 e0       	ldi	r22, 0x00	; 0
     b9c:	70 e0       	ldi	r23, 0x00	; 0
     b9e:	84 2b       	or	r24, r20
     ba0:	95 2b       	or	r25, r21
     ba2:	a6 2b       	or	r26, r22
     ba4:	b7 2b       	or	r27, r23
     ba6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     baa:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     bae:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     bb2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     bb6:	b0 9b       	sbis	0x16, 0	; 22
     bb8:	1b c0       	rjmp	.+54     	; 0xbf0 <__vector_4+0x98>
     bba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bbe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bc2:	c9 01       	movw	r24, r18
     bc4:	01 96       	adiw	r24, 0x01	; 1
     bc6:	09 2e       	mov	r0, r25
     bc8:	00 0c       	add	r0, r0
     bca:	aa 0b       	sbc	r26, r26
     bcc:	bb 0b       	sbc	r27, r27
     bce:	dc 01       	movw	r26, r24
     bd0:	99 27       	eor	r25, r25
     bd2:	88 27       	eor	r24, r24
     bd4:	60 e0       	ldi	r22, 0x00	; 0
     bd6:	70 e0       	ldi	r23, 0x00	; 0
     bd8:	84 2b       	or	r24, r20
     bda:	95 2b       	or	r25, r21
     bdc:	a6 2b       	or	r26, r22
     bde:	b7 2b       	or	r27, r23
     be0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     be4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     be8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     bec:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     bf0:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     bf4:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     bf8:	30 97       	sbiw	r30, 0x00	; 0
     bfa:	39 f0       	breq	.+14     	; 0xc0a <__vector_4+0xb2>
     bfc:	63 e0       	ldi	r22, 0x03	; 3
     bfe:	70 e0       	ldi	r23, 0x00	; 0
     c00:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     c04:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     c08:	09 95       	icall
     c0a:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
     c0e:	ff 91       	pop	r31
     c10:	ef 91       	pop	r30
     c12:	bf 91       	pop	r27
     c14:	af 91       	pop	r26
     c16:	9f 91       	pop	r25
     c18:	8f 91       	pop	r24
     c1a:	7f 91       	pop	r23
     c1c:	6f 91       	pop	r22
     c1e:	5f 91       	pop	r21
     c20:	4f 91       	pop	r20
     c22:	3f 91       	pop	r19
     c24:	2f 91       	pop	r18
     c26:	0f 90       	pop	r0
     c28:	0f be       	out	0x3f, r0	; 63
     c2a:	0f 90       	pop	r0
     c2c:	1f 90       	pop	r1
     c2e:	18 95       	reti

00000c30 <__vector_5>:
     c30:	1f 92       	push	r1
     c32:	0f 92       	push	r0
     c34:	0f b6       	in	r0, 0x3f	; 63
     c36:	0f 92       	push	r0
     c38:	11 24       	eor	r1, r1
     c3a:	2f 93       	push	r18
     c3c:	3f 93       	push	r19
     c3e:	4f 93       	push	r20
     c40:	5f 93       	push	r21
     c42:	6f 93       	push	r22
     c44:	7f 93       	push	r23
     c46:	8f 93       	push	r24
     c48:	9f 93       	push	r25
     c4a:	af 93       	push	r26
     c4c:	bf 93       	push	r27
     c4e:	ef 93       	push	r30
     c50:	ff 93       	push	r31
     c52:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     c56:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     c5a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c5e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c62:	c9 01       	movw	r24, r18
     c64:	03 2e       	mov	r0, r19
     c66:	00 0c       	add	r0, r0
     c68:	aa 0b       	sbc	r26, r26
     c6a:	bb 0b       	sbc	r27, r27
     c6c:	dc 01       	movw	r26, r24
     c6e:	99 27       	eor	r25, r25
     c70:	88 27       	eor	r24, r24
     c72:	60 e0       	ldi	r22, 0x00	; 0
     c74:	70 e0       	ldi	r23, 0x00	; 0
     c76:	84 2b       	or	r24, r20
     c78:	95 2b       	or	r25, r21
     c7a:	a6 2b       	or	r26, r22
     c7c:	b7 2b       	or	r27, r23
     c7e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     c82:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     c86:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     c8a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     c8e:	b0 9b       	sbis	0x16, 0	; 22
     c90:	1b c0       	rjmp	.+54     	; 0xcc8 <__vector_5+0x98>
     c92:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c96:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c9a:	c9 01       	movw	r24, r18
     c9c:	01 96       	adiw	r24, 0x01	; 1
     c9e:	09 2e       	mov	r0, r25
     ca0:	00 0c       	add	r0, r0
     ca2:	aa 0b       	sbc	r26, r26
     ca4:	bb 0b       	sbc	r27, r27
     ca6:	dc 01       	movw	r26, r24
     ca8:	99 27       	eor	r25, r25
     caa:	88 27       	eor	r24, r24
     cac:	60 e0       	ldi	r22, 0x00	; 0
     cae:	70 e0       	ldi	r23, 0x00	; 0
     cb0:	84 2b       	or	r24, r20
     cb2:	95 2b       	or	r25, r21
     cb4:	a6 2b       	or	r26, r22
     cb6:	b7 2b       	or	r27, r23
     cb8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     cbc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     cc0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     cc4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     cc8:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
     ccc:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
     cd0:	30 97       	sbiw	r30, 0x00	; 0
     cd2:	39 f0       	breq	.+14     	; 0xce2 <__vector_5+0xb2>
     cd4:	64 e0       	ldi	r22, 0x04	; 4
     cd6:	70 e0       	ldi	r23, 0x00	; 0
     cd8:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
     cdc:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
     ce0:	09 95       	icall
     ce2:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
     ce6:	ff 91       	pop	r31
     ce8:	ef 91       	pop	r30
     cea:	bf 91       	pop	r27
     cec:	af 91       	pop	r26
     cee:	9f 91       	pop	r25
     cf0:	8f 91       	pop	r24
     cf2:	7f 91       	pop	r23
     cf4:	6f 91       	pop	r22
     cf6:	5f 91       	pop	r21
     cf8:	4f 91       	pop	r20
     cfa:	3f 91       	pop	r19
     cfc:	2f 91       	pop	r18
     cfe:	0f 90       	pop	r0
     d00:	0f be       	out	0x3f, r0	; 63
     d02:	0f 90       	pop	r0
     d04:	1f 90       	pop	r1
     d06:	18 95       	reti

00000d08 <__vector_10>:
     d08:	1f 92       	push	r1
     d0a:	0f 92       	push	r0
     d0c:	0f b6       	in	r0, 0x3f	; 63
     d0e:	0f 92       	push	r0
     d10:	11 24       	eor	r1, r1
     d12:	2f 93       	push	r18
     d14:	3f 93       	push	r19
     d16:	4f 93       	push	r20
     d18:	5f 93       	push	r21
     d1a:	6f 93       	push	r22
     d1c:	7f 93       	push	r23
     d1e:	8f 93       	push	r24
     d20:	9f 93       	push	r25
     d22:	af 93       	push	r26
     d24:	bf 93       	push	r27
     d26:	ef 93       	push	r30
     d28:	ff 93       	push	r31
     d2a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     d2e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     d32:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d36:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d3a:	c9 01       	movw	r24, r18
     d3c:	03 2e       	mov	r0, r19
     d3e:	00 0c       	add	r0, r0
     d40:	aa 0b       	sbc	r26, r26
     d42:	bb 0b       	sbc	r27, r27
     d44:	dc 01       	movw	r26, r24
     d46:	99 27       	eor	r25, r25
     d48:	88 27       	eor	r24, r24
     d4a:	60 e0       	ldi	r22, 0x00	; 0
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	84 2b       	or	r24, r20
     d50:	95 2b       	or	r25, r21
     d52:	a6 2b       	or	r26, r22
     d54:	b7 2b       	or	r27, r23
     d56:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     d5a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     d5e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     d62:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     d66:	b0 9b       	sbis	0x16, 0	; 22
     d68:	1b c0       	rjmp	.+54     	; 0xda0 <__vector_10+0x98>
     d6a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d6e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d72:	c9 01       	movw	r24, r18
     d74:	01 96       	adiw	r24, 0x01	; 1
     d76:	09 2e       	mov	r0, r25
     d78:	00 0c       	add	r0, r0
     d7a:	aa 0b       	sbc	r26, r26
     d7c:	bb 0b       	sbc	r27, r27
     d7e:	dc 01       	movw	r26, r24
     d80:	99 27       	eor	r25, r25
     d82:	88 27       	eor	r24, r24
     d84:	60 e0       	ldi	r22, 0x00	; 0
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	84 2b       	or	r24, r20
     d8a:	95 2b       	or	r25, r21
     d8c:	a6 2b       	or	r26, r22
     d8e:	b7 2b       	or	r27, r23
     d90:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     d94:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     d98:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     d9c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     da0:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
     da4:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
     da8:	30 97       	sbiw	r30, 0x00	; 0
     daa:	39 f0       	breq	.+14     	; 0xdba <__vector_10+0xb2>
     dac:	65 e0       	ldi	r22, 0x05	; 5
     dae:	70 e0       	ldi	r23, 0x00	; 0
     db0:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
     db4:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
     db8:	09 95       	icall
     dba:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
     dbe:	ff 91       	pop	r31
     dc0:	ef 91       	pop	r30
     dc2:	bf 91       	pop	r27
     dc4:	af 91       	pop	r26
     dc6:	9f 91       	pop	r25
     dc8:	8f 91       	pop	r24
     dca:	7f 91       	pop	r23
     dcc:	6f 91       	pop	r22
     dce:	5f 91       	pop	r21
     dd0:	4f 91       	pop	r20
     dd2:	3f 91       	pop	r19
     dd4:	2f 91       	pop	r18
     dd6:	0f 90       	pop	r0
     dd8:	0f be       	out	0x3f, r0	; 63
     dda:	0f 90       	pop	r0
     ddc:	1f 90       	pop	r1
     dde:	18 95       	reti

00000de0 <__vector_11>:
     de0:	1f 92       	push	r1
     de2:	0f 92       	push	r0
     de4:	0f b6       	in	r0, 0x3f	; 63
     de6:	0f 92       	push	r0
     de8:	11 24       	eor	r1, r1
     dea:	2f 93       	push	r18
     dec:	3f 93       	push	r19
     dee:	4f 93       	push	r20
     df0:	5f 93       	push	r21
     df2:	6f 93       	push	r22
     df4:	7f 93       	push	r23
     df6:	8f 93       	push	r24
     df8:	9f 93       	push	r25
     dfa:	af 93       	push	r26
     dfc:	bf 93       	push	r27
     dfe:	ef 93       	push	r30
     e00:	ff 93       	push	r31
     e02:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     e06:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     e0a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e0e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e12:	c9 01       	movw	r24, r18
     e14:	03 2e       	mov	r0, r19
     e16:	00 0c       	add	r0, r0
     e18:	aa 0b       	sbc	r26, r26
     e1a:	bb 0b       	sbc	r27, r27
     e1c:	dc 01       	movw	r26, r24
     e1e:	99 27       	eor	r25, r25
     e20:	88 27       	eor	r24, r24
     e22:	60 e0       	ldi	r22, 0x00	; 0
     e24:	70 e0       	ldi	r23, 0x00	; 0
     e26:	84 2b       	or	r24, r20
     e28:	95 2b       	or	r25, r21
     e2a:	a6 2b       	or	r26, r22
     e2c:	b7 2b       	or	r27, r23
     e2e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e32:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e36:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e3a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e3e:	b0 9b       	sbis	0x16, 0	; 22
     e40:	1b c0       	rjmp	.+54     	; 0xe78 <__vector_11+0x98>
     e42:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e46:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e4a:	c9 01       	movw	r24, r18
     e4c:	01 96       	adiw	r24, 0x01	; 1
     e4e:	09 2e       	mov	r0, r25
     e50:	00 0c       	add	r0, r0
     e52:	aa 0b       	sbc	r26, r26
     e54:	bb 0b       	sbc	r27, r27
     e56:	dc 01       	movw	r26, r24
     e58:	99 27       	eor	r25, r25
     e5a:	88 27       	eor	r24, r24
     e5c:	60 e0       	ldi	r22, 0x00	; 0
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	84 2b       	or	r24, r20
     e62:	95 2b       	or	r25, r21
     e64:	a6 2b       	or	r26, r22
     e66:	b7 2b       	or	r27, r23
     e68:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e6c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e70:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e74:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e78:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
     e7c:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
     e80:	30 97       	sbiw	r30, 0x00	; 0
     e82:	39 f0       	breq	.+14     	; 0xe92 <__vector_11+0xb2>
     e84:	66 e0       	ldi	r22, 0x06	; 6
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
     e8c:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
     e90:	09 95       	icall
     e92:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
     e96:	ff 91       	pop	r31
     e98:	ef 91       	pop	r30
     e9a:	bf 91       	pop	r27
     e9c:	af 91       	pop	r26
     e9e:	9f 91       	pop	r25
     ea0:	8f 91       	pop	r24
     ea2:	7f 91       	pop	r23
     ea4:	6f 91       	pop	r22
     ea6:	5f 91       	pop	r21
     ea8:	4f 91       	pop	r20
     eaa:	3f 91       	pop	r19
     eac:	2f 91       	pop	r18
     eae:	0f 90       	pop	r0
     eb0:	0f be       	out	0x3f, r0	; 63
     eb2:	0f 90       	pop	r0
     eb4:	1f 90       	pop	r1
     eb6:	18 95       	reti

00000eb8 <__vector_12>:
     eb8:	1f 92       	push	r1
     eba:	0f 92       	push	r0
     ebc:	0f b6       	in	r0, 0x3f	; 63
     ebe:	0f 92       	push	r0
     ec0:	11 24       	eor	r1, r1
     ec2:	2f 93       	push	r18
     ec4:	3f 93       	push	r19
     ec6:	4f 93       	push	r20
     ec8:	5f 93       	push	r21
     eca:	6f 93       	push	r22
     ecc:	7f 93       	push	r23
     ece:	8f 93       	push	r24
     ed0:	9f 93       	push	r25
     ed2:	af 93       	push	r26
     ed4:	bf 93       	push	r27
     ed6:	ef 93       	push	r30
     ed8:	ff 93       	push	r31
     eda:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     ede:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     ee2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ee6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eea:	c9 01       	movw	r24, r18
     eec:	03 2e       	mov	r0, r19
     eee:	00 0c       	add	r0, r0
     ef0:	aa 0b       	sbc	r26, r26
     ef2:	bb 0b       	sbc	r27, r27
     ef4:	dc 01       	movw	r26, r24
     ef6:	99 27       	eor	r25, r25
     ef8:	88 27       	eor	r24, r24
     efa:	60 e0       	ldi	r22, 0x00	; 0
     efc:	70 e0       	ldi	r23, 0x00	; 0
     efe:	84 2b       	or	r24, r20
     f00:	95 2b       	or	r25, r21
     f02:	a6 2b       	or	r26, r22
     f04:	b7 2b       	or	r27, r23
     f06:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f0a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f0e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f12:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f16:	b0 9b       	sbis	0x16, 0	; 22
     f18:	1b c0       	rjmp	.+54     	; 0xf50 <__vector_12+0x98>
     f1a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f1e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f22:	c9 01       	movw	r24, r18
     f24:	01 96       	adiw	r24, 0x01	; 1
     f26:	09 2e       	mov	r0, r25
     f28:	00 0c       	add	r0, r0
     f2a:	aa 0b       	sbc	r26, r26
     f2c:	bb 0b       	sbc	r27, r27
     f2e:	dc 01       	movw	r26, r24
     f30:	99 27       	eor	r25, r25
     f32:	88 27       	eor	r24, r24
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	84 2b       	or	r24, r20
     f3a:	95 2b       	or	r25, r21
     f3c:	a6 2b       	or	r26, r22
     f3e:	b7 2b       	or	r27, r23
     f40:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f44:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f48:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f4c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f50:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
     f54:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
     f58:	30 97       	sbiw	r30, 0x00	; 0
     f5a:	39 f0       	breq	.+14     	; 0xf6a <__vector_12+0xb2>
     f5c:	67 e0       	ldi	r22, 0x07	; 7
     f5e:	70 e0       	ldi	r23, 0x00	; 0
     f60:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
     f64:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
     f68:	09 95       	icall
     f6a:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
     f6e:	ff 91       	pop	r31
     f70:	ef 91       	pop	r30
     f72:	bf 91       	pop	r27
     f74:	af 91       	pop	r26
     f76:	9f 91       	pop	r25
     f78:	8f 91       	pop	r24
     f7a:	7f 91       	pop	r23
     f7c:	6f 91       	pop	r22
     f7e:	5f 91       	pop	r21
     f80:	4f 91       	pop	r20
     f82:	3f 91       	pop	r19
     f84:	2f 91       	pop	r18
     f86:	0f 90       	pop	r0
     f88:	0f be       	out	0x3f, r0	; 63
     f8a:	0f 90       	pop	r0
     f8c:	1f 90       	pop	r1
     f8e:	18 95       	reti

00000f90 <__vector_13>:
     f90:	1f 92       	push	r1
     f92:	0f 92       	push	r0
     f94:	0f b6       	in	r0, 0x3f	; 63
     f96:	0f 92       	push	r0
     f98:	11 24       	eor	r1, r1
     f9a:	2f 93       	push	r18
     f9c:	3f 93       	push	r19
     f9e:	4f 93       	push	r20
     fa0:	5f 93       	push	r21
     fa2:	6f 93       	push	r22
     fa4:	7f 93       	push	r23
     fa6:	8f 93       	push	r24
     fa8:	9f 93       	push	r25
     faa:	af 93       	push	r26
     fac:	bf 93       	push	r27
     fae:	ef 93       	push	r30
     fb0:	ff 93       	push	r31
     fb2:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     fb6:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     fba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fbe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fc2:	c9 01       	movw	r24, r18
     fc4:	03 2e       	mov	r0, r19
     fc6:	00 0c       	add	r0, r0
     fc8:	aa 0b       	sbc	r26, r26
     fca:	bb 0b       	sbc	r27, r27
     fcc:	dc 01       	movw	r26, r24
     fce:	99 27       	eor	r25, r25
     fd0:	88 27       	eor	r24, r24
     fd2:	60 e0       	ldi	r22, 0x00	; 0
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	84 2b       	or	r24, r20
     fd8:	95 2b       	or	r25, r21
     fda:	a6 2b       	or	r26, r22
     fdc:	b7 2b       	or	r27, r23
     fde:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     fe2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     fe6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     fea:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     fee:	b0 9b       	sbis	0x16, 0	; 22
     ff0:	1b c0       	rjmp	.+54     	; 0x1028 <__vector_13+0x98>
     ff2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ff6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ffa:	c9 01       	movw	r24, r18
     ffc:	01 96       	adiw	r24, 0x01	; 1
     ffe:	09 2e       	mov	r0, r25
    1000:	00 0c       	add	r0, r0
    1002:	aa 0b       	sbc	r26, r26
    1004:	bb 0b       	sbc	r27, r27
    1006:	dc 01       	movw	r26, r24
    1008:	99 27       	eor	r25, r25
    100a:	88 27       	eor	r24, r24
    100c:	60 e0       	ldi	r22, 0x00	; 0
    100e:	70 e0       	ldi	r23, 0x00	; 0
    1010:	84 2b       	or	r24, r20
    1012:	95 2b       	or	r25, r21
    1014:	a6 2b       	or	r26, r22
    1016:	b7 2b       	or	r27, r23
    1018:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    101c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1020:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1024:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1028:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
    102c:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
    1030:	30 97       	sbiw	r30, 0x00	; 0
    1032:	39 f0       	breq	.+14     	; 0x1042 <__vector_13+0xb2>
    1034:	68 e0       	ldi	r22, 0x08	; 8
    1036:	70 e0       	ldi	r23, 0x00	; 0
    1038:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
    103c:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
    1040:	09 95       	icall
    1042:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    1046:	ff 91       	pop	r31
    1048:	ef 91       	pop	r30
    104a:	bf 91       	pop	r27
    104c:	af 91       	pop	r26
    104e:	9f 91       	pop	r25
    1050:	8f 91       	pop	r24
    1052:	7f 91       	pop	r23
    1054:	6f 91       	pop	r22
    1056:	5f 91       	pop	r21
    1058:	4f 91       	pop	r20
    105a:	3f 91       	pop	r19
    105c:	2f 91       	pop	r18
    105e:	0f 90       	pop	r0
    1060:	0f be       	out	0x3f, r0	; 63
    1062:	0f 90       	pop	r0
    1064:	1f 90       	pop	r1
    1066:	18 95       	reti

00001068 <__vector_14>:
    1068:	1f 92       	push	r1
    106a:	0f 92       	push	r0
    106c:	0f b6       	in	r0, 0x3f	; 63
    106e:	0f 92       	push	r0
    1070:	11 24       	eor	r1, r1
    1072:	2f 93       	push	r18
    1074:	3f 93       	push	r19
    1076:	4f 93       	push	r20
    1078:	5f 93       	push	r21
    107a:	6f 93       	push	r22
    107c:	7f 93       	push	r23
    107e:	8f 93       	push	r24
    1080:	9f 93       	push	r25
    1082:	af 93       	push	r26
    1084:	bf 93       	push	r27
    1086:	ef 93       	push	r30
    1088:	ff 93       	push	r31
    108a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    108e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1092:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1096:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    109a:	c9 01       	movw	r24, r18
    109c:	03 2e       	mov	r0, r19
    109e:	00 0c       	add	r0, r0
    10a0:	aa 0b       	sbc	r26, r26
    10a2:	bb 0b       	sbc	r27, r27
    10a4:	dc 01       	movw	r26, r24
    10a6:	99 27       	eor	r25, r25
    10a8:	88 27       	eor	r24, r24
    10aa:	60 e0       	ldi	r22, 0x00	; 0
    10ac:	70 e0       	ldi	r23, 0x00	; 0
    10ae:	84 2b       	or	r24, r20
    10b0:	95 2b       	or	r25, r21
    10b2:	a6 2b       	or	r26, r22
    10b4:	b7 2b       	or	r27, r23
    10b6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    10ba:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    10be:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    10c2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    10c6:	b0 9b       	sbis	0x16, 0	; 22
    10c8:	1b c0       	rjmp	.+54     	; 0x1100 <__vector_14+0x98>
    10ca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10ce:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10d2:	c9 01       	movw	r24, r18
    10d4:	01 96       	adiw	r24, 0x01	; 1
    10d6:	09 2e       	mov	r0, r25
    10d8:	00 0c       	add	r0, r0
    10da:	aa 0b       	sbc	r26, r26
    10dc:	bb 0b       	sbc	r27, r27
    10de:	dc 01       	movw	r26, r24
    10e0:	99 27       	eor	r25, r25
    10e2:	88 27       	eor	r24, r24
    10e4:	60 e0       	ldi	r22, 0x00	; 0
    10e6:	70 e0       	ldi	r23, 0x00	; 0
    10e8:	84 2b       	or	r24, r20
    10ea:	95 2b       	or	r25, r21
    10ec:	a6 2b       	or	r26, r22
    10ee:	b7 2b       	or	r27, r23
    10f0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    10f4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    10f8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    10fc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1100:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
    1104:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
    1108:	30 97       	sbiw	r30, 0x00	; 0
    110a:	39 f0       	breq	.+14     	; 0x111a <__vector_14+0xb2>
    110c:	69 e0       	ldi	r22, 0x09	; 9
    110e:	70 e0       	ldi	r23, 0x00	; 0
    1110:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
    1114:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
    1118:	09 95       	icall
    111a:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    111e:	ff 91       	pop	r31
    1120:	ef 91       	pop	r30
    1122:	bf 91       	pop	r27
    1124:	af 91       	pop	r26
    1126:	9f 91       	pop	r25
    1128:	8f 91       	pop	r24
    112a:	7f 91       	pop	r23
    112c:	6f 91       	pop	r22
    112e:	5f 91       	pop	r21
    1130:	4f 91       	pop	r20
    1132:	3f 91       	pop	r19
    1134:	2f 91       	pop	r18
    1136:	0f 90       	pop	r0
    1138:	0f be       	out	0x3f, r0	; 63
    113a:	0f 90       	pop	r0
    113c:	1f 90       	pop	r1
    113e:	18 95       	reti

00001140 <__vector_15>:
    1140:	1f 92       	push	r1
    1142:	0f 92       	push	r0
    1144:	0f b6       	in	r0, 0x3f	; 63
    1146:	0f 92       	push	r0
    1148:	11 24       	eor	r1, r1
    114a:	2f 93       	push	r18
    114c:	3f 93       	push	r19
    114e:	4f 93       	push	r20
    1150:	5f 93       	push	r21
    1152:	6f 93       	push	r22
    1154:	7f 93       	push	r23
    1156:	8f 93       	push	r24
    1158:	9f 93       	push	r25
    115a:	af 93       	push	r26
    115c:	bf 93       	push	r27
    115e:	ef 93       	push	r30
    1160:	ff 93       	push	r31
    1162:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1166:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    116a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    116e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1172:	c9 01       	movw	r24, r18
    1174:	03 2e       	mov	r0, r19
    1176:	00 0c       	add	r0, r0
    1178:	aa 0b       	sbc	r26, r26
    117a:	bb 0b       	sbc	r27, r27
    117c:	dc 01       	movw	r26, r24
    117e:	99 27       	eor	r25, r25
    1180:	88 27       	eor	r24, r24
    1182:	60 e0       	ldi	r22, 0x00	; 0
    1184:	70 e0       	ldi	r23, 0x00	; 0
    1186:	84 2b       	or	r24, r20
    1188:	95 2b       	or	r25, r21
    118a:	a6 2b       	or	r26, r22
    118c:	b7 2b       	or	r27, r23
    118e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1192:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1196:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    119a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    119e:	b0 9b       	sbis	0x16, 0	; 22
    11a0:	1b c0       	rjmp	.+54     	; 0x11d8 <__vector_15+0x98>
    11a2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11a6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11aa:	c9 01       	movw	r24, r18
    11ac:	01 96       	adiw	r24, 0x01	; 1
    11ae:	09 2e       	mov	r0, r25
    11b0:	00 0c       	add	r0, r0
    11b2:	aa 0b       	sbc	r26, r26
    11b4:	bb 0b       	sbc	r27, r27
    11b6:	dc 01       	movw	r26, r24
    11b8:	99 27       	eor	r25, r25
    11ba:	88 27       	eor	r24, r24
    11bc:	60 e0       	ldi	r22, 0x00	; 0
    11be:	70 e0       	ldi	r23, 0x00	; 0
    11c0:	84 2b       	or	r24, r20
    11c2:	95 2b       	or	r25, r21
    11c4:	a6 2b       	or	r26, r22
    11c6:	b7 2b       	or	r27, r23
    11c8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    11cc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    11d0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    11d4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    11d8:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
    11dc:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    11e0:	30 97       	sbiw	r30, 0x00	; 0
    11e2:	39 f0       	breq	.+14     	; 0x11f2 <__vector_15+0xb2>
    11e4:	6a e0       	ldi	r22, 0x0A	; 10
    11e6:	70 e0       	ldi	r23, 0x00	; 0
    11e8:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    11ec:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    11f0:	09 95       	icall
    11f2:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    11f6:	ff 91       	pop	r31
    11f8:	ef 91       	pop	r30
    11fa:	bf 91       	pop	r27
    11fc:	af 91       	pop	r26
    11fe:	9f 91       	pop	r25
    1200:	8f 91       	pop	r24
    1202:	7f 91       	pop	r23
    1204:	6f 91       	pop	r22
    1206:	5f 91       	pop	r21
    1208:	4f 91       	pop	r20
    120a:	3f 91       	pop	r19
    120c:	2f 91       	pop	r18
    120e:	0f 90       	pop	r0
    1210:	0f be       	out	0x3f, r0	; 63
    1212:	0f 90       	pop	r0
    1214:	1f 90       	pop	r1
    1216:	18 95       	reti

00001218 <__vector_16>:
    1218:	1f 92       	push	r1
    121a:	0f 92       	push	r0
    121c:	0f b6       	in	r0, 0x3f	; 63
    121e:	0f 92       	push	r0
    1220:	11 24       	eor	r1, r1
    1222:	2f 93       	push	r18
    1224:	3f 93       	push	r19
    1226:	4f 93       	push	r20
    1228:	5f 93       	push	r21
    122a:	6f 93       	push	r22
    122c:	7f 93       	push	r23
    122e:	8f 93       	push	r24
    1230:	9f 93       	push	r25
    1232:	af 93       	push	r26
    1234:	bf 93       	push	r27
    1236:	ef 93       	push	r30
    1238:	ff 93       	push	r31
    123a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    123e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1242:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1246:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    124a:	c9 01       	movw	r24, r18
    124c:	03 2e       	mov	r0, r19
    124e:	00 0c       	add	r0, r0
    1250:	aa 0b       	sbc	r26, r26
    1252:	bb 0b       	sbc	r27, r27
    1254:	dc 01       	movw	r26, r24
    1256:	99 27       	eor	r25, r25
    1258:	88 27       	eor	r24, r24
    125a:	60 e0       	ldi	r22, 0x00	; 0
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	84 2b       	or	r24, r20
    1260:	95 2b       	or	r25, r21
    1262:	a6 2b       	or	r26, r22
    1264:	b7 2b       	or	r27, r23
    1266:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    126a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    126e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1272:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1276:	b0 9b       	sbis	0x16, 0	; 22
    1278:	1b c0       	rjmp	.+54     	; 0x12b0 <__vector_16+0x98>
    127a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    127e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1282:	c9 01       	movw	r24, r18
    1284:	01 96       	adiw	r24, 0x01	; 1
    1286:	09 2e       	mov	r0, r25
    1288:	00 0c       	add	r0, r0
    128a:	aa 0b       	sbc	r26, r26
    128c:	bb 0b       	sbc	r27, r27
    128e:	dc 01       	movw	r26, r24
    1290:	99 27       	eor	r25, r25
    1292:	88 27       	eor	r24, r24
    1294:	60 e0       	ldi	r22, 0x00	; 0
    1296:	70 e0       	ldi	r23, 0x00	; 0
    1298:	84 2b       	or	r24, r20
    129a:	95 2b       	or	r25, r21
    129c:	a6 2b       	or	r26, r22
    129e:	b7 2b       	or	r27, r23
    12a0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    12a4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    12a8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    12ac:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    12b0:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    12b4:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    12b8:	30 97       	sbiw	r30, 0x00	; 0
    12ba:	39 f0       	breq	.+14     	; 0x12ca <__vector_16+0xb2>
    12bc:	6b e0       	ldi	r22, 0x0B	; 11
    12be:	70 e0       	ldi	r23, 0x00	; 0
    12c0:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    12c4:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    12c8:	09 95       	icall
    12ca:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    12ce:	ff 91       	pop	r31
    12d0:	ef 91       	pop	r30
    12d2:	bf 91       	pop	r27
    12d4:	af 91       	pop	r26
    12d6:	9f 91       	pop	r25
    12d8:	8f 91       	pop	r24
    12da:	7f 91       	pop	r23
    12dc:	6f 91       	pop	r22
    12de:	5f 91       	pop	r21
    12e0:	4f 91       	pop	r20
    12e2:	3f 91       	pop	r19
    12e4:	2f 91       	pop	r18
    12e6:	0f 90       	pop	r0
    12e8:	0f be       	out	0x3f, r0	; 63
    12ea:	0f 90       	pop	r0
    12ec:	1f 90       	pop	r1
    12ee:	18 95       	reti

000012f0 <__vector_17>:
    12f0:	1f 92       	push	r1
    12f2:	0f 92       	push	r0
    12f4:	0f b6       	in	r0, 0x3f	; 63
    12f6:	0f 92       	push	r0
    12f8:	11 24       	eor	r1, r1
    12fa:	2f 93       	push	r18
    12fc:	3f 93       	push	r19
    12fe:	4f 93       	push	r20
    1300:	5f 93       	push	r21
    1302:	6f 93       	push	r22
    1304:	7f 93       	push	r23
    1306:	8f 93       	push	r24
    1308:	9f 93       	push	r25
    130a:	af 93       	push	r26
    130c:	bf 93       	push	r27
    130e:	ef 93       	push	r30
    1310:	ff 93       	push	r31
    1312:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1316:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    131a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    131e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1322:	c9 01       	movw	r24, r18
    1324:	03 2e       	mov	r0, r19
    1326:	00 0c       	add	r0, r0
    1328:	aa 0b       	sbc	r26, r26
    132a:	bb 0b       	sbc	r27, r27
    132c:	dc 01       	movw	r26, r24
    132e:	99 27       	eor	r25, r25
    1330:	88 27       	eor	r24, r24
    1332:	60 e0       	ldi	r22, 0x00	; 0
    1334:	70 e0       	ldi	r23, 0x00	; 0
    1336:	84 2b       	or	r24, r20
    1338:	95 2b       	or	r25, r21
    133a:	a6 2b       	or	r26, r22
    133c:	b7 2b       	or	r27, r23
    133e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1342:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1346:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    134a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    134e:	b0 9b       	sbis	0x16, 0	; 22
    1350:	1b c0       	rjmp	.+54     	; 0x1388 <__vector_17+0x98>
    1352:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1356:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    135a:	c9 01       	movw	r24, r18
    135c:	01 96       	adiw	r24, 0x01	; 1
    135e:	09 2e       	mov	r0, r25
    1360:	00 0c       	add	r0, r0
    1362:	aa 0b       	sbc	r26, r26
    1364:	bb 0b       	sbc	r27, r27
    1366:	dc 01       	movw	r26, r24
    1368:	99 27       	eor	r25, r25
    136a:	88 27       	eor	r24, r24
    136c:	60 e0       	ldi	r22, 0x00	; 0
    136e:	70 e0       	ldi	r23, 0x00	; 0
    1370:	84 2b       	or	r24, r20
    1372:	95 2b       	or	r25, r21
    1374:	a6 2b       	or	r26, r22
    1376:	b7 2b       	or	r27, r23
    1378:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    137c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1380:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1384:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1388:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    138c:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    1390:	30 97       	sbiw	r30, 0x00	; 0
    1392:	39 f0       	breq	.+14     	; 0x13a2 <__vector_17+0xb2>
    1394:	6c e0       	ldi	r22, 0x0C	; 12
    1396:	70 e0       	ldi	r23, 0x00	; 0
    1398:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    139c:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    13a0:	09 95       	icall
    13a2:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    13a6:	ff 91       	pop	r31
    13a8:	ef 91       	pop	r30
    13aa:	bf 91       	pop	r27
    13ac:	af 91       	pop	r26
    13ae:	9f 91       	pop	r25
    13b0:	8f 91       	pop	r24
    13b2:	7f 91       	pop	r23
    13b4:	6f 91       	pop	r22
    13b6:	5f 91       	pop	r21
    13b8:	4f 91       	pop	r20
    13ba:	3f 91       	pop	r19
    13bc:	2f 91       	pop	r18
    13be:	0f 90       	pop	r0
    13c0:	0f be       	out	0x3f, r0	; 63
    13c2:	0f 90       	pop	r0
    13c4:	1f 90       	pop	r1
    13c6:	18 95       	reti

000013c8 <__vector_18>:
    13c8:	1f 92       	push	r1
    13ca:	0f 92       	push	r0
    13cc:	0f b6       	in	r0, 0x3f	; 63
    13ce:	0f 92       	push	r0
    13d0:	11 24       	eor	r1, r1
    13d2:	2f 93       	push	r18
    13d4:	3f 93       	push	r19
    13d6:	4f 93       	push	r20
    13d8:	5f 93       	push	r21
    13da:	6f 93       	push	r22
    13dc:	7f 93       	push	r23
    13de:	8f 93       	push	r24
    13e0:	9f 93       	push	r25
    13e2:	af 93       	push	r26
    13e4:	bf 93       	push	r27
    13e6:	ef 93       	push	r30
    13e8:	ff 93       	push	r31
    13ea:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    13ee:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    13f2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13f6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13fa:	c9 01       	movw	r24, r18
    13fc:	03 2e       	mov	r0, r19
    13fe:	00 0c       	add	r0, r0
    1400:	aa 0b       	sbc	r26, r26
    1402:	bb 0b       	sbc	r27, r27
    1404:	dc 01       	movw	r26, r24
    1406:	99 27       	eor	r25, r25
    1408:	88 27       	eor	r24, r24
    140a:	60 e0       	ldi	r22, 0x00	; 0
    140c:	70 e0       	ldi	r23, 0x00	; 0
    140e:	84 2b       	or	r24, r20
    1410:	95 2b       	or	r25, r21
    1412:	a6 2b       	or	r26, r22
    1414:	b7 2b       	or	r27, r23
    1416:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    141a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    141e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1422:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1426:	b0 9b       	sbis	0x16, 0	; 22
    1428:	1b c0       	rjmp	.+54     	; 0x1460 <__vector_18+0x98>
    142a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    142e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1432:	c9 01       	movw	r24, r18
    1434:	01 96       	adiw	r24, 0x01	; 1
    1436:	09 2e       	mov	r0, r25
    1438:	00 0c       	add	r0, r0
    143a:	aa 0b       	sbc	r26, r26
    143c:	bb 0b       	sbc	r27, r27
    143e:	dc 01       	movw	r26, r24
    1440:	99 27       	eor	r25, r25
    1442:	88 27       	eor	r24, r24
    1444:	60 e0       	ldi	r22, 0x00	; 0
    1446:	70 e0       	ldi	r23, 0x00	; 0
    1448:	84 2b       	or	r24, r20
    144a:	95 2b       	or	r25, r21
    144c:	a6 2b       	or	r26, r22
    144e:	b7 2b       	or	r27, r23
    1450:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1454:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1458:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    145c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1460:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    1464:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    1468:	30 97       	sbiw	r30, 0x00	; 0
    146a:	39 f0       	breq	.+14     	; 0x147a <__vector_18+0xb2>
    146c:	6d e0       	ldi	r22, 0x0D	; 13
    146e:	70 e0       	ldi	r23, 0x00	; 0
    1470:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    1474:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    1478:	09 95       	icall
    147a:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    147e:	ff 91       	pop	r31
    1480:	ef 91       	pop	r30
    1482:	bf 91       	pop	r27
    1484:	af 91       	pop	r26
    1486:	9f 91       	pop	r25
    1488:	8f 91       	pop	r24
    148a:	7f 91       	pop	r23
    148c:	6f 91       	pop	r22
    148e:	5f 91       	pop	r21
    1490:	4f 91       	pop	r20
    1492:	3f 91       	pop	r19
    1494:	2f 91       	pop	r18
    1496:	0f 90       	pop	r0
    1498:	0f be       	out	0x3f, r0	; 63
    149a:	0f 90       	pop	r0
    149c:	1f 90       	pop	r1
    149e:	18 95       	reti

000014a0 <__vector_19>:
    14a0:	1f 92       	push	r1
    14a2:	0f 92       	push	r0
    14a4:	0f b6       	in	r0, 0x3f	; 63
    14a6:	0f 92       	push	r0
    14a8:	11 24       	eor	r1, r1
    14aa:	2f 93       	push	r18
    14ac:	3f 93       	push	r19
    14ae:	4f 93       	push	r20
    14b0:	5f 93       	push	r21
    14b2:	6f 93       	push	r22
    14b4:	7f 93       	push	r23
    14b6:	8f 93       	push	r24
    14b8:	9f 93       	push	r25
    14ba:	af 93       	push	r26
    14bc:	bf 93       	push	r27
    14be:	ef 93       	push	r30
    14c0:	ff 93       	push	r31
    14c2:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    14c6:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    14ca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ce:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14d2:	c9 01       	movw	r24, r18
    14d4:	03 2e       	mov	r0, r19
    14d6:	00 0c       	add	r0, r0
    14d8:	aa 0b       	sbc	r26, r26
    14da:	bb 0b       	sbc	r27, r27
    14dc:	dc 01       	movw	r26, r24
    14de:	99 27       	eor	r25, r25
    14e0:	88 27       	eor	r24, r24
    14e2:	60 e0       	ldi	r22, 0x00	; 0
    14e4:	70 e0       	ldi	r23, 0x00	; 0
    14e6:	84 2b       	or	r24, r20
    14e8:	95 2b       	or	r25, r21
    14ea:	a6 2b       	or	r26, r22
    14ec:	b7 2b       	or	r27, r23
    14ee:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    14f2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    14f6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    14fa:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    14fe:	b0 9b       	sbis	0x16, 0	; 22
    1500:	1b c0       	rjmp	.+54     	; 0x1538 <__vector_19+0x98>
    1502:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1506:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    150a:	c9 01       	movw	r24, r18
    150c:	01 96       	adiw	r24, 0x01	; 1
    150e:	09 2e       	mov	r0, r25
    1510:	00 0c       	add	r0, r0
    1512:	aa 0b       	sbc	r26, r26
    1514:	bb 0b       	sbc	r27, r27
    1516:	dc 01       	movw	r26, r24
    1518:	99 27       	eor	r25, r25
    151a:	88 27       	eor	r24, r24
    151c:	60 e0       	ldi	r22, 0x00	; 0
    151e:	70 e0       	ldi	r23, 0x00	; 0
    1520:	84 2b       	or	r24, r20
    1522:	95 2b       	or	r25, r21
    1524:	a6 2b       	or	r26, r22
    1526:	b7 2b       	or	r27, r23
    1528:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    152c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1530:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1534:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1538:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    153c:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    1540:	30 97       	sbiw	r30, 0x00	; 0
    1542:	39 f0       	breq	.+14     	; 0x1552 <__vector_19+0xb2>
    1544:	6e e0       	ldi	r22, 0x0E	; 14
    1546:	70 e0       	ldi	r23, 0x00	; 0
    1548:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    154c:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    1550:	09 95       	icall
    1552:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    1556:	ff 91       	pop	r31
    1558:	ef 91       	pop	r30
    155a:	bf 91       	pop	r27
    155c:	af 91       	pop	r26
    155e:	9f 91       	pop	r25
    1560:	8f 91       	pop	r24
    1562:	7f 91       	pop	r23
    1564:	6f 91       	pop	r22
    1566:	5f 91       	pop	r21
    1568:	4f 91       	pop	r20
    156a:	3f 91       	pop	r19
    156c:	2f 91       	pop	r18
    156e:	0f 90       	pop	r0
    1570:	0f be       	out	0x3f, r0	; 63
    1572:	0f 90       	pop	r0
    1574:	1f 90       	pop	r1
    1576:	18 95       	reti

00001578 <__vector_20>:
    1578:	1f 92       	push	r1
    157a:	0f 92       	push	r0
    157c:	0f b6       	in	r0, 0x3f	; 63
    157e:	0f 92       	push	r0
    1580:	11 24       	eor	r1, r1
    1582:	2f 93       	push	r18
    1584:	3f 93       	push	r19
    1586:	4f 93       	push	r20
    1588:	5f 93       	push	r21
    158a:	6f 93       	push	r22
    158c:	7f 93       	push	r23
    158e:	8f 93       	push	r24
    1590:	9f 93       	push	r25
    1592:	af 93       	push	r26
    1594:	bf 93       	push	r27
    1596:	ef 93       	push	r30
    1598:	ff 93       	push	r31
    159a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    159e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    15a2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15a6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15aa:	c9 01       	movw	r24, r18
    15ac:	03 2e       	mov	r0, r19
    15ae:	00 0c       	add	r0, r0
    15b0:	aa 0b       	sbc	r26, r26
    15b2:	bb 0b       	sbc	r27, r27
    15b4:	dc 01       	movw	r26, r24
    15b6:	99 27       	eor	r25, r25
    15b8:	88 27       	eor	r24, r24
    15ba:	60 e0       	ldi	r22, 0x00	; 0
    15bc:	70 e0       	ldi	r23, 0x00	; 0
    15be:	84 2b       	or	r24, r20
    15c0:	95 2b       	or	r25, r21
    15c2:	a6 2b       	or	r26, r22
    15c4:	b7 2b       	or	r27, r23
    15c6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    15ca:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    15ce:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    15d2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    15d6:	b0 9b       	sbis	0x16, 0	; 22
    15d8:	1b c0       	rjmp	.+54     	; 0x1610 <__vector_20+0x98>
    15da:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15de:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15e2:	c9 01       	movw	r24, r18
    15e4:	01 96       	adiw	r24, 0x01	; 1
    15e6:	09 2e       	mov	r0, r25
    15e8:	00 0c       	add	r0, r0
    15ea:	aa 0b       	sbc	r26, r26
    15ec:	bb 0b       	sbc	r27, r27
    15ee:	dc 01       	movw	r26, r24
    15f0:	99 27       	eor	r25, r25
    15f2:	88 27       	eor	r24, r24
    15f4:	60 e0       	ldi	r22, 0x00	; 0
    15f6:	70 e0       	ldi	r23, 0x00	; 0
    15f8:	84 2b       	or	r24, r20
    15fa:	95 2b       	or	r25, r21
    15fc:	a6 2b       	or	r26, r22
    15fe:	b7 2b       	or	r27, r23
    1600:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1604:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1608:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    160c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1610:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    1614:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    1618:	30 97       	sbiw	r30, 0x00	; 0
    161a:	39 f0       	breq	.+14     	; 0x162a <__vector_20+0xb2>
    161c:	6f e0       	ldi	r22, 0x0F	; 15
    161e:	70 e0       	ldi	r23, 0x00	; 0
    1620:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    1624:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    1628:	09 95       	icall
    162a:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    162e:	ff 91       	pop	r31
    1630:	ef 91       	pop	r30
    1632:	bf 91       	pop	r27
    1634:	af 91       	pop	r26
    1636:	9f 91       	pop	r25
    1638:	8f 91       	pop	r24
    163a:	7f 91       	pop	r23
    163c:	6f 91       	pop	r22
    163e:	5f 91       	pop	r21
    1640:	4f 91       	pop	r20
    1642:	3f 91       	pop	r19
    1644:	2f 91       	pop	r18
    1646:	0f 90       	pop	r0
    1648:	0f be       	out	0x3f, r0	; 63
    164a:	0f 90       	pop	r0
    164c:	1f 90       	pop	r1
    164e:	18 95       	reti

00001650 <__vector_21>:
    1650:	1f 92       	push	r1
    1652:	0f 92       	push	r0
    1654:	0f b6       	in	r0, 0x3f	; 63
    1656:	0f 92       	push	r0
    1658:	11 24       	eor	r1, r1
    165a:	2f 93       	push	r18
    165c:	3f 93       	push	r19
    165e:	4f 93       	push	r20
    1660:	5f 93       	push	r21
    1662:	6f 93       	push	r22
    1664:	7f 93       	push	r23
    1666:	8f 93       	push	r24
    1668:	9f 93       	push	r25
    166a:	af 93       	push	r26
    166c:	bf 93       	push	r27
    166e:	ef 93       	push	r30
    1670:	ff 93       	push	r31
    1672:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1676:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    167a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    167e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1682:	c9 01       	movw	r24, r18
    1684:	03 2e       	mov	r0, r19
    1686:	00 0c       	add	r0, r0
    1688:	aa 0b       	sbc	r26, r26
    168a:	bb 0b       	sbc	r27, r27
    168c:	dc 01       	movw	r26, r24
    168e:	99 27       	eor	r25, r25
    1690:	88 27       	eor	r24, r24
    1692:	60 e0       	ldi	r22, 0x00	; 0
    1694:	70 e0       	ldi	r23, 0x00	; 0
    1696:	84 2b       	or	r24, r20
    1698:	95 2b       	or	r25, r21
    169a:	a6 2b       	or	r26, r22
    169c:	b7 2b       	or	r27, r23
    169e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    16a2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    16a6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    16aa:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    16ae:	b0 9b       	sbis	0x16, 0	; 22
    16b0:	1b c0       	rjmp	.+54     	; 0x16e8 <__vector_21+0x98>
    16b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ba:	c9 01       	movw	r24, r18
    16bc:	01 96       	adiw	r24, 0x01	; 1
    16be:	09 2e       	mov	r0, r25
    16c0:	00 0c       	add	r0, r0
    16c2:	aa 0b       	sbc	r26, r26
    16c4:	bb 0b       	sbc	r27, r27
    16c6:	dc 01       	movw	r26, r24
    16c8:	99 27       	eor	r25, r25
    16ca:	88 27       	eor	r24, r24
    16cc:	60 e0       	ldi	r22, 0x00	; 0
    16ce:	70 e0       	ldi	r23, 0x00	; 0
    16d0:	84 2b       	or	r24, r20
    16d2:	95 2b       	or	r25, r21
    16d4:	a6 2b       	or	r26, r22
    16d6:	b7 2b       	or	r27, r23
    16d8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    16dc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    16e0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    16e4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    16e8:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    16ec:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    16f0:	30 97       	sbiw	r30, 0x00	; 0
    16f2:	39 f0       	breq	.+14     	; 0x1702 <__vector_21+0xb2>
    16f4:	60 e1       	ldi	r22, 0x10	; 16
    16f6:	70 e0       	ldi	r23, 0x00	; 0
    16f8:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    16fc:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    1700:	09 95       	icall
    1702:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    1706:	ff 91       	pop	r31
    1708:	ef 91       	pop	r30
    170a:	bf 91       	pop	r27
    170c:	af 91       	pop	r26
    170e:	9f 91       	pop	r25
    1710:	8f 91       	pop	r24
    1712:	7f 91       	pop	r23
    1714:	6f 91       	pop	r22
    1716:	5f 91       	pop	r21
    1718:	4f 91       	pop	r20
    171a:	3f 91       	pop	r19
    171c:	2f 91       	pop	r18
    171e:	0f 90       	pop	r0
    1720:	0f be       	out	0x3f, r0	; 63
    1722:	0f 90       	pop	r0
    1724:	1f 90       	pop	r1
    1726:	18 95       	reti

00001728 <__vector_22>:
    1728:	1f 92       	push	r1
    172a:	0f 92       	push	r0
    172c:	0f b6       	in	r0, 0x3f	; 63
    172e:	0f 92       	push	r0
    1730:	11 24       	eor	r1, r1
    1732:	2f 93       	push	r18
    1734:	3f 93       	push	r19
    1736:	4f 93       	push	r20
    1738:	5f 93       	push	r21
    173a:	6f 93       	push	r22
    173c:	7f 93       	push	r23
    173e:	8f 93       	push	r24
    1740:	9f 93       	push	r25
    1742:	af 93       	push	r26
    1744:	bf 93       	push	r27
    1746:	ef 93       	push	r30
    1748:	ff 93       	push	r31
    174a:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    174e:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1752:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1756:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    175a:	c9 01       	movw	r24, r18
    175c:	03 2e       	mov	r0, r19
    175e:	00 0c       	add	r0, r0
    1760:	aa 0b       	sbc	r26, r26
    1762:	bb 0b       	sbc	r27, r27
    1764:	dc 01       	movw	r26, r24
    1766:	99 27       	eor	r25, r25
    1768:	88 27       	eor	r24, r24
    176a:	60 e0       	ldi	r22, 0x00	; 0
    176c:	70 e0       	ldi	r23, 0x00	; 0
    176e:	84 2b       	or	r24, r20
    1770:	95 2b       	or	r25, r21
    1772:	a6 2b       	or	r26, r22
    1774:	b7 2b       	or	r27, r23
    1776:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    177a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    177e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1782:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1786:	b0 9b       	sbis	0x16, 0	; 22
    1788:	1b c0       	rjmp	.+54     	; 0x17c0 <__vector_22+0x98>
    178a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    178e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1792:	c9 01       	movw	r24, r18
    1794:	01 96       	adiw	r24, 0x01	; 1
    1796:	09 2e       	mov	r0, r25
    1798:	00 0c       	add	r0, r0
    179a:	aa 0b       	sbc	r26, r26
    179c:	bb 0b       	sbc	r27, r27
    179e:	dc 01       	movw	r26, r24
    17a0:	99 27       	eor	r25, r25
    17a2:	88 27       	eor	r24, r24
    17a4:	60 e0       	ldi	r22, 0x00	; 0
    17a6:	70 e0       	ldi	r23, 0x00	; 0
    17a8:	84 2b       	or	r24, r20
    17aa:	95 2b       	or	r25, r21
    17ac:	a6 2b       	or	r26, r22
    17ae:	b7 2b       	or	r27, r23
    17b0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    17b4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    17b8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    17bc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    17c0:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    17c4:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    17c8:	30 97       	sbiw	r30, 0x00	; 0
    17ca:	39 f0       	breq	.+14     	; 0x17da <__vector_22+0xb2>
    17cc:	61 e1       	ldi	r22, 0x11	; 17
    17ce:	70 e0       	ldi	r23, 0x00	; 0
    17d0:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    17d4:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    17d8:	09 95       	icall
    17da:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    17de:	ff 91       	pop	r31
    17e0:	ef 91       	pop	r30
    17e2:	bf 91       	pop	r27
    17e4:	af 91       	pop	r26
    17e6:	9f 91       	pop	r25
    17e8:	8f 91       	pop	r24
    17ea:	7f 91       	pop	r23
    17ec:	6f 91       	pop	r22
    17ee:	5f 91       	pop	r21
    17f0:	4f 91       	pop	r20
    17f2:	3f 91       	pop	r19
    17f4:	2f 91       	pop	r18
    17f6:	0f 90       	pop	r0
    17f8:	0f be       	out	0x3f, r0	; 63
    17fa:	0f 90       	pop	r0
    17fc:	1f 90       	pop	r1
    17fe:	18 95       	reti

00001800 <__vector_9>:
    1800:	1f 92       	push	r1
    1802:	0f 92       	push	r0
    1804:	0f b6       	in	r0, 0x3f	; 63
    1806:	0f 92       	push	r0
    1808:	11 24       	eor	r1, r1
    180a:	2f 93       	push	r18
    180c:	3f 93       	push	r19
    180e:	4f 93       	push	r20
    1810:	5f 93       	push	r21
    1812:	6f 93       	push	r22
    1814:	7f 93       	push	r23
    1816:	8f 93       	push	r24
    1818:	9f 93       	push	r25
    181a:	ef 93       	push	r30
    181c:	ff 93       	push	r31
    181e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1822:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1826:	01 96       	adiw	r24, 0x01	; 1
    1828:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
    182c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
    1830:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <timerQ>
    1834:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <timerQ+0x1>
    1838:	30 97       	sbiw	r30, 0x00	; 0
    183a:	39 f0       	breq	.+14     	; 0x184a <__vector_9+0x4a>
    183c:	42 81       	ldd	r20, Z+2	; 0x02
    183e:	53 81       	ldd	r21, Z+3	; 0x03
    1840:	64 81       	ldd	r22, Z+4	; 0x04
    1842:	75 81       	ldd	r23, Z+5	; 0x05
    1844:	86 17       	cp	r24, r22
    1846:	97 07       	cpc	r25, r23
    1848:	a1 f0       	breq	.+40     	; 0x1872 <__vector_9+0x72>
    184a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    184e:	8d 7f       	andi	r24, 0xFD	; 253
    1850:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1854:	ff 91       	pop	r31
    1856:	ef 91       	pop	r30
    1858:	9f 91       	pop	r25
    185a:	8f 91       	pop	r24
    185c:	7f 91       	pop	r23
    185e:	6f 91       	pop	r22
    1860:	5f 91       	pop	r21
    1862:	4f 91       	pop	r20
    1864:	3f 91       	pop	r19
    1866:	2f 91       	pop	r18
    1868:	0f 90       	pop	r0
    186a:	0f be       	out	0x3f, r0	; 63
    186c:	0f 90       	pop	r0
    186e:	1f 90       	pop	r1
    1870:	18 95       	reti
    1872:	ca 01       	movw	r24, r20
    1874:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1878:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    187c:	42 1b       	sub	r20, r18
    187e:	53 0b       	sbc	r21, r19
    1880:	41 30       	cpi	r20, 0x01	; 1
    1882:	51 05       	cpc	r21, r1
    1884:	51 f0       	breq	.+20     	; 0x189a <__vector_9+0x9a>
    1886:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    188a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    188e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1892:	82 60       	ori	r24, 0x02	; 2
    1894:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1898:	dd cf       	rjmp	.-70     	; 0x1854 <__vector_9+0x54>
    189a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    189e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18a2:	01 96       	adiw	r24, 0x01	; 1
    18a4:	f0 cf       	rjmp	.-32     	; 0x1886 <__vector_9+0x86>

000018a6 <__vector_7>:
    18a6:	1f 92       	push	r1
    18a8:	0f 92       	push	r0
    18aa:	0f b6       	in	r0, 0x3f	; 63
    18ac:	0f 92       	push	r0
    18ae:	11 24       	eor	r1, r1
    18b0:	8f 92       	push	r8
    18b2:	9f 92       	push	r9
    18b4:	af 92       	push	r10
    18b6:	bf 92       	push	r11
    18b8:	cf 92       	push	r12
    18ba:	df 92       	push	r13
    18bc:	ef 92       	push	r14
    18be:	ff 92       	push	r15
    18c0:	0f 93       	push	r16
    18c2:	1f 93       	push	r17
    18c4:	2f 93       	push	r18
    18c6:	3f 93       	push	r19
    18c8:	4f 93       	push	r20
    18ca:	5f 93       	push	r21
    18cc:	6f 93       	push	r22
    18ce:	7f 93       	push	r23
    18d0:	8f 93       	push	r24
    18d2:	9f 93       	push	r25
    18d4:	af 93       	push	r26
    18d6:	bf 93       	push	r27
    18d8:	cf 93       	push	r28
    18da:	df 93       	push	r29
    18dc:	ef 93       	push	r30
    18de:	ff 93       	push	r31
    18e0:	e0 90 34 01 	lds	r14, 0x0134	; 0x800134 <__data_end>
    18e4:	f0 90 35 01 	lds	r15, 0x0135	; 0x800135 <__data_end+0x1>
    18e8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18ec:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18f0:	b0 99       	sbic	0x16, 0	; 22
    18f2:	98 c0       	rjmp	.+304    	; 0x1a24 <__vector_7+0x17e>
    18f4:	47 01       	movw	r8, r14
    18f6:	0f 2c       	mov	r0, r15
    18f8:	00 0c       	add	r0, r0
    18fa:	aa 08       	sbc	r10, r10
    18fc:	bb 08       	sbc	r11, r11
    18fe:	54 01       	movw	r10, r8
    1900:	99 24       	eor	r9, r9
    1902:	88 24       	eor	r8, r8
    1904:	a0 e0       	ldi	r26, 0x00	; 0
    1906:	b0 e0       	ldi	r27, 0x00	; 0
    1908:	88 2a       	or	r8, r24
    190a:	99 2a       	or	r9, r25
    190c:	aa 2a       	or	r10, r26
    190e:	bb 2a       	or	r11, r27
    1910:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    1914:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    1918:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <msgQ>
    191c:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <msgQ+0x1>
    1920:	20 97       	sbiw	r28, 0x00	; 0
    1922:	09 f4       	brne	.+2      	; 0x1926 <__vector_7+0x80>
    1924:	3f c0       	rjmp	.+126    	; 0x19a4 <__vector_7+0xfe>
    1926:	4a 81       	ldd	r20, Y+2	; 0x02
    1928:	5b 81       	ldd	r21, Y+3	; 0x03
    192a:	6c 81       	ldd	r22, Y+4	; 0x04
    192c:	7d 81       	ldd	r23, Y+5	; 0x05
    192e:	8a 01       	movw	r16, r20
    1930:	9b 01       	movw	r18, r22
    1932:	08 19       	sub	r16, r8
    1934:	19 09       	sbc	r17, r9
    1936:	2a 09       	sbc	r18, r10
    1938:	3b 09       	sbc	r19, r11
    193a:	10 16       	cp	r1, r16
    193c:	11 06       	cpc	r1, r17
    193e:	12 06       	cpc	r1, r18
    1940:	13 06       	cpc	r1, r19
    1942:	0c f4       	brge	.+2      	; 0x1946 <__vector_7+0xa0>
    1944:	40 c0       	rjmp	.+128    	; 0x19c6 <__vector_7+0x120>
    1946:	d8 80       	ld	r13, Y
    1948:	c9 80       	ldd	r12, Y+1	; 0x01
    194a:	00 97       	sbiw	r24, 0x00	; 0
    194c:	b9 f1       	breq	.+110    	; 0x19bc <__vector_7+0x116>
    194e:	0e 81       	ldd	r16, Y+6	; 0x06
    1950:	1f 81       	ldd	r17, Y+7	; 0x07
    1952:	28 85       	ldd	r18, Y+8	; 0x08
    1954:	39 85       	ldd	r19, Y+9	; 0x09
    1956:	fc 01       	movw	r30, r24
    1958:	46 81       	ldd	r20, Z+6	; 0x06
    195a:	57 81       	ldd	r21, Z+7	; 0x07
    195c:	60 85       	ldd	r22, Z+8	; 0x08
    195e:	71 85       	ldd	r23, Z+9	; 0x09
    1960:	04 17       	cp	r16, r20
    1962:	15 07       	cpc	r17, r21
    1964:	26 07       	cpc	r18, r22
    1966:	37 07       	cpc	r19, r23
    1968:	4c f1       	brlt	.+82     	; 0x19bc <__vector_7+0x116>
    196a:	dc 01       	movw	r26, r24
    196c:	0a c0       	rjmp	.+20     	; 0x1982 <__vector_7+0xdc>
    196e:	46 81       	ldd	r20, Z+6	; 0x06
    1970:	57 81       	ldd	r21, Z+7	; 0x07
    1972:	60 85       	ldd	r22, Z+8	; 0x08
    1974:	71 85       	ldd	r23, Z+9	; 0x09
    1976:	04 17       	cp	r16, r20
    1978:	15 07       	cpc	r17, r21
    197a:	26 07       	cpc	r18, r22
    197c:	37 07       	cpc	r19, r23
    197e:	dc f0       	brlt	.+54     	; 0x19b6 <__vector_7+0x110>
    1980:	df 01       	movw	r26, r30
    1982:	ed 91       	ld	r30, X+
    1984:	fc 91       	ld	r31, X
    1986:	11 97       	sbiw	r26, 0x01	; 1
    1988:	30 97       	sbiw	r30, 0x00	; 0
    198a:	89 f7       	brne	.-30     	; 0x196e <__vector_7+0xc8>
    198c:	19 82       	std	Y+1, r1	; 0x01
    198e:	18 82       	st	Y, r1
    1990:	cd 93       	st	X+, r28
    1992:	dc 93       	st	X, r29
    1994:	38 2f       	mov	r19, r24
    1996:	29 2f       	mov	r18, r25
    1998:	cd 2d       	mov	r28, r13
    199a:	dc 2d       	mov	r29, r12
    199c:	83 2f       	mov	r24, r19
    199e:	92 2f       	mov	r25, r18
    19a0:	20 97       	sbiw	r28, 0x00	; 0
    19a2:	09 f6       	brne	.-126    	; 0x1926 <__vector_7+0x80>
    19a4:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <timerQ+0x1>
    19a8:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <timerQ>
    19ac:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    19b0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    19b4:	13 c0       	rjmp	.+38     	; 0x19dc <__vector_7+0x136>
    19b6:	f9 83       	std	Y+1, r31	; 0x01
    19b8:	e8 83       	st	Y, r30
    19ba:	ea cf       	rjmp	.-44     	; 0x1990 <__vector_7+0xea>
    19bc:	99 83       	std	Y+1, r25	; 0x01
    19be:	88 83       	st	Y, r24
    19c0:	3c 2f       	mov	r19, r28
    19c2:	2d 2f       	mov	r18, r29
    19c4:	e9 cf       	rjmp	.-46     	; 0x1998 <__vector_7+0xf2>
    19c6:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    19ca:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    19ce:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    19d2:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    19d6:	e6 16       	cp	r14, r22
    19d8:	f7 06       	cpc	r15, r23
    19da:	d9 f1       	breq	.+118    	; 0x1a52 <__vector_7+0x1ac>
    19dc:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    19e0:	8d 7f       	andi	r24, 0xFD	; 253
    19e2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    19e6:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    19ea:	ff 91       	pop	r31
    19ec:	ef 91       	pop	r30
    19ee:	df 91       	pop	r29
    19f0:	cf 91       	pop	r28
    19f2:	bf 91       	pop	r27
    19f4:	af 91       	pop	r26
    19f6:	9f 91       	pop	r25
    19f8:	8f 91       	pop	r24
    19fa:	7f 91       	pop	r23
    19fc:	6f 91       	pop	r22
    19fe:	5f 91       	pop	r21
    1a00:	4f 91       	pop	r20
    1a02:	3f 91       	pop	r19
    1a04:	2f 91       	pop	r18
    1a06:	1f 91       	pop	r17
    1a08:	0f 91       	pop	r16
    1a0a:	ff 90       	pop	r15
    1a0c:	ef 90       	pop	r14
    1a0e:	df 90       	pop	r13
    1a10:	cf 90       	pop	r12
    1a12:	bf 90       	pop	r11
    1a14:	af 90       	pop	r10
    1a16:	9f 90       	pop	r9
    1a18:	8f 90       	pop	r8
    1a1a:	0f 90       	pop	r0
    1a1c:	0f be       	out	0x3f, r0	; 63
    1a1e:	0f 90       	pop	r0
    1a20:	1f 90       	pop	r1
    1a22:	18 95       	reti
    1a24:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a28:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a2c:	47 01       	movw	r8, r14
    1a2e:	8f ef       	ldi	r24, 0xFF	; 255
    1a30:	88 1a       	sub	r8, r24
    1a32:	98 0a       	sbc	r9, r24
    1a34:	09 2c       	mov	r0, r9
    1a36:	00 0c       	add	r0, r0
    1a38:	aa 08       	sbc	r10, r10
    1a3a:	bb 08       	sbc	r11, r11
    1a3c:	d4 01       	movw	r26, r8
    1a3e:	99 27       	eor	r25, r25
    1a40:	88 27       	eor	r24, r24
    1a42:	49 01       	movw	r8, r18
    1a44:	a1 2c       	mov	r10, r1
    1a46:	b1 2c       	mov	r11, r1
    1a48:	88 2a       	or	r8, r24
    1a4a:	99 2a       	or	r9, r25
    1a4c:	aa 2a       	or	r10, r26
    1a4e:	bb 2a       	or	r11, r27
    1a50:	5f cf       	rjmp	.-322    	; 0x1910 <__vector_7+0x6a>
    1a52:	ca 01       	movw	r24, r20
    1a54:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a58:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a5c:	42 1b       	sub	r20, r18
    1a5e:	53 0b       	sbc	r21, r19
    1a60:	41 30       	cpi	r20, 0x01	; 1
    1a62:	51 05       	cpc	r21, r1
    1a64:	51 f0       	breq	.+20     	; 0x1a7a <__vector_7+0x1d4>
    1a66:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a6a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a6e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a72:	82 60       	ori	r24, 0x02	; 2
    1a74:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a78:	b6 cf       	rjmp	.-148    	; 0x19e6 <__vector_7+0x140>
    1a7a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a7e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a82:	01 96       	adiw	r24, 0x01	; 1
    1a84:	f0 cf       	rjmp	.-32     	; 0x1a66 <__vector_7+0x1c0>

00001a86 <async>:
    1a86:	3f 92       	push	r3
    1a88:	4f 92       	push	r4
    1a8a:	5f 92       	push	r5
    1a8c:	6f 92       	push	r6
    1a8e:	7f 92       	push	r7
    1a90:	8f 92       	push	r8
    1a92:	9f 92       	push	r9
    1a94:	af 92       	push	r10
    1a96:	bf 92       	push	r11
    1a98:	cf 92       	push	r12
    1a9a:	df 92       	push	r13
    1a9c:	ef 92       	push	r14
    1a9e:	ff 92       	push	r15
    1aa0:	0f 93       	push	r16
    1aa2:	1f 93       	push	r17
    1aa4:	cf 93       	push	r28
    1aa6:	df 93       	push	r29
    1aa8:	ef b7       	in	r30, 0x3f	; 63
    1aaa:	e0 78       	andi	r30, 0x80	; 128
    1aac:	3e 2e       	mov	r3, r30
    1aae:	f8 94       	cli
    1ab0:	c0 91 06 01 	lds	r28, 0x0106	; 0x800106 <msgPool>
    1ab4:	d0 91 07 01 	lds	r29, 0x0107	; 0x800107 <msgPool+0x1>
    1ab8:	20 97       	sbiw	r28, 0x00	; 0
    1aba:	09 f4       	brne	.+2      	; 0x1abe <async+0x38>
    1abc:	52 c1       	rjmp	.+676    	; 0x1d62 <async+0x2dc>
    1abe:	e8 81       	ld	r30, Y
    1ac0:	f9 81       	ldd	r31, Y+1	; 0x01
    1ac2:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <msgPool+0x1>
    1ac6:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <msgPool>
    1aca:	1b 87       	std	Y+11, r17	; 0x0b
    1acc:	0a 87       	std	Y+10, r16	; 0x0a
    1ace:	fd 86       	std	Y+13, r15	; 0x0d
    1ad0:	ec 86       	std	Y+12, r14	; 0x0c
    1ad2:	df 86       	std	Y+15, r13	; 0x0f
    1ad4:	ce 86       	std	Y+14, r12	; 0x0e
    1ad6:	33 20       	and	r3, r3
    1ad8:	09 f4       	brne	.+2      	; 0x1adc <async+0x56>
    1ada:	6f c0       	rjmp	.+222    	; 0x1bba <async+0x134>
    1adc:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ae0:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ae4:	02 80       	ldd	r0, Z+2	; 0x02
    1ae6:	f3 81       	ldd	r31, Z+3	; 0x03
    1ae8:	e0 2d       	mov	r30, r0
    1aea:	c2 80       	ldd	r12, Z+2	; 0x02
    1aec:	d3 80       	ldd	r13, Z+3	; 0x03
    1aee:	e4 80       	ldd	r14, Z+4	; 0x04
    1af0:	f5 80       	ldd	r15, Z+5	; 0x05
    1af2:	c6 0e       	add	r12, r22
    1af4:	d7 1e       	adc	r13, r23
    1af6:	e8 1e       	adc	r14, r24
    1af8:	f9 1e       	adc	r15, r25
    1afa:	ca 82       	std	Y+2, r12	; 0x02
    1afc:	db 82       	std	Y+3, r13	; 0x03
    1afe:	ec 82       	std	Y+4, r14	; 0x04
    1b00:	fd 82       	std	Y+5, r15	; 0x05
    1b02:	12 16       	cp	r1, r18
    1b04:	13 06       	cpc	r1, r19
    1b06:	14 06       	cpc	r1, r20
    1b08:	15 06       	cpc	r1, r21
    1b0a:	0c f0       	brlt	.+2      	; 0x1b0e <async+0x88>
    1b0c:	f8 c0       	rjmp	.+496    	; 0x1cfe <async+0x278>
    1b0e:	da 01       	movw	r26, r20
    1b10:	c9 01       	movw	r24, r18
    1b12:	8c 01       	movw	r16, r24
    1b14:	9d 01       	movw	r18, r26
    1b16:	0c 0d       	add	r16, r12
    1b18:	1d 1d       	adc	r17, r13
    1b1a:	2e 1d       	adc	r18, r14
    1b1c:	3f 1d       	adc	r19, r15
    1b1e:	0e 83       	std	Y+6, r16	; 0x06
    1b20:	1f 83       	std	Y+7, r17	; 0x07
    1b22:	28 87       	std	Y+8, r18	; 0x08
    1b24:	39 87       	std	Y+9, r19	; 0x09
    1b26:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1b2a:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1b2e:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b32:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b36:	b0 99       	sbic	0x16, 0	; 22
    1b38:	49 c0       	rjmp	.+146    	; 0x1bcc <async+0x146>
    1b3a:	2c 01       	movw	r4, r24
    1b3c:	09 2e       	mov	r0, r25
    1b3e:	00 0c       	add	r0, r0
    1b40:	66 08       	sbc	r6, r6
    1b42:	77 08       	sbc	r7, r7
    1b44:	52 01       	movw	r10, r4
    1b46:	99 24       	eor	r9, r9
    1b48:	88 24       	eor	r8, r8
    1b4a:	2b 01       	movw	r4, r22
    1b4c:	61 2c       	mov	r6, r1
    1b4e:	71 2c       	mov	r7, r1
    1b50:	48 28       	or	r4, r8
    1b52:	59 28       	or	r5, r9
    1b54:	6a 28       	or	r6, r10
    1b56:	7b 28       	or	r7, r11
    1b58:	b7 01       	movw	r22, r14
    1b5a:	a6 01       	movw	r20, r12
    1b5c:	44 19       	sub	r20, r4
    1b5e:	55 09       	sbc	r21, r5
    1b60:	66 09       	sbc	r22, r6
    1b62:	77 09       	sbc	r23, r7
    1b64:	14 16       	cp	r1, r20
    1b66:	15 06       	cpc	r1, r21
    1b68:	16 06       	cpc	r1, r22
    1b6a:	17 06       	cpc	r1, r23
    1b6c:	0c f0       	brlt	.+2      	; 0x1b70 <async+0xea>
    1b6e:	68 c0       	rjmp	.+208    	; 0x1c40 <async+0x1ba>
    1b70:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <timerQ>
    1b74:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <timerQ+0x1>
    1b78:	10 97       	sbiw	r26, 0x00	; 0
    1b7a:	09 f4       	brne	.+2      	; 0x1b7e <async+0xf8>
    1b7c:	dc c0       	rjmp	.+440    	; 0x1d36 <async+0x2b0>
    1b7e:	12 96       	adiw	r26, 0x02	; 2
    1b80:	0d 91       	ld	r16, X+
    1b82:	1d 91       	ld	r17, X+
    1b84:	2d 91       	ld	r18, X+
    1b86:	3c 91       	ld	r19, X
    1b88:	15 97       	sbiw	r26, 0x05	; 5
    1b8a:	c0 16       	cp	r12, r16
    1b8c:	d1 06       	cpc	r13, r17
    1b8e:	e2 06       	cpc	r14, r18
    1b90:	f3 06       	cpc	r15, r19
    1b92:	5c f4       	brge	.+22     	; 0x1baa <async+0x124>
    1b94:	d0 c0       	rjmp	.+416    	; 0x1d36 <async+0x2b0>
    1b96:	42 81       	ldd	r20, Z+2	; 0x02
    1b98:	53 81       	ldd	r21, Z+3	; 0x03
    1b9a:	64 81       	ldd	r22, Z+4	; 0x04
    1b9c:	75 81       	ldd	r23, Z+5	; 0x05
    1b9e:	c4 16       	cp	r12, r20
    1ba0:	d5 06       	cpc	r13, r21
    1ba2:	e6 06       	cpc	r14, r22
    1ba4:	f7 06       	cpc	r15, r23
    1ba6:	4c f1       	brlt	.+82     	; 0x1bfa <async+0x174>
    1ba8:	df 01       	movw	r26, r30
    1baa:	ed 91       	ld	r30, X+
    1bac:	fc 91       	ld	r31, X
    1bae:	11 97       	sbiw	r26, 0x01	; 1
    1bb0:	30 97       	sbiw	r30, 0x00	; 0
    1bb2:	89 f7       	brne	.-30     	; 0x1b96 <async+0x110>
    1bb4:	19 82       	std	Y+1, r1	; 0x01
    1bb6:	18 82       	st	Y, r1
    1bb8:	22 c0       	rjmp	.+68     	; 0x1bfe <async+0x178>
    1bba:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <timestamp>
    1bbe:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <timestamp+0x1>
    1bc2:	e0 90 38 01 	lds	r14, 0x0138	; 0x800138 <timestamp+0x2>
    1bc6:	f0 90 39 01 	lds	r15, 0x0139	; 0x800139 <timestamp+0x3>
    1bca:	93 cf       	rjmp	.-218    	; 0x1af2 <async+0x6c>
    1bcc:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bd0:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bd4:	2c 01       	movw	r4, r24
    1bd6:	4f ef       	ldi	r20, 0xFF	; 255
    1bd8:	44 1a       	sub	r4, r20
    1bda:	54 0a       	sbc	r5, r20
    1bdc:	05 2c       	mov	r0, r5
    1bde:	00 0c       	add	r0, r0
    1be0:	66 08       	sbc	r6, r6
    1be2:	77 08       	sbc	r7, r7
    1be4:	b2 01       	movw	r22, r4
    1be6:	55 27       	eor	r21, r21
    1be8:	44 27       	eor	r20, r20
    1bea:	2f 01       	movw	r4, r30
    1bec:	61 2c       	mov	r6, r1
    1bee:	71 2c       	mov	r7, r1
    1bf0:	44 2a       	or	r4, r20
    1bf2:	55 2a       	or	r5, r21
    1bf4:	66 2a       	or	r6, r22
    1bf6:	77 2a       	or	r7, r23
    1bf8:	af cf       	rjmp	.-162    	; 0x1b58 <async+0xd2>
    1bfa:	f9 83       	std	Y+1, r31	; 0x01
    1bfc:	e8 83       	st	Y, r30
    1bfe:	cd 93       	st	X+, r28
    1c00:	dc 93       	st	X, r29
    1c02:	82 17       	cp	r24, r18
    1c04:	93 07       	cpc	r25, r19
    1c06:	09 f4       	brne	.+2      	; 0x1c0a <async+0x184>
    1c08:	7f c0       	rjmp	.+254    	; 0x1d08 <async+0x282>
    1c0a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c0e:	8d 7f       	andi	r24, 0xFD	; 253
    1c10:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c14:	33 20       	and	r3, r3
    1c16:	09 f0       	breq	.+2      	; 0x1c1a <async+0x194>
    1c18:	78 94       	sei
    1c1a:	ce 01       	movw	r24, r28
    1c1c:	df 91       	pop	r29
    1c1e:	cf 91       	pop	r28
    1c20:	1f 91       	pop	r17
    1c22:	0f 91       	pop	r16
    1c24:	ff 90       	pop	r15
    1c26:	ef 90       	pop	r14
    1c28:	df 90       	pop	r13
    1c2a:	cf 90       	pop	r12
    1c2c:	bf 90       	pop	r11
    1c2e:	af 90       	pop	r10
    1c30:	9f 90       	pop	r9
    1c32:	8f 90       	pop	r8
    1c34:	7f 90       	pop	r7
    1c36:	6f 90       	pop	r6
    1c38:	5f 90       	pop	r5
    1c3a:	4f 90       	pop	r4
    1c3c:	3f 90       	pop	r3
    1c3e:	08 95       	ret
    1c40:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <msgQ>
    1c44:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <msgQ+0x1>
    1c48:	10 97       	sbiw	r26, 0x00	; 0
    1c4a:	09 f4       	brne	.+2      	; 0x1c4e <async+0x1c8>
    1c4c:	83 c0       	rjmp	.+262    	; 0x1d54 <async+0x2ce>
    1c4e:	16 96       	adiw	r26, 0x06	; 6
    1c50:	cd 90       	ld	r12, X+
    1c52:	dd 90       	ld	r13, X+
    1c54:	ed 90       	ld	r14, X+
    1c56:	fc 90       	ld	r15, X
    1c58:	19 97       	sbiw	r26, 0x09	; 9
    1c5a:	0c 15       	cp	r16, r12
    1c5c:	1d 05       	cpc	r17, r13
    1c5e:	2e 05       	cpc	r18, r14
    1c60:	3f 05       	cpc	r19, r15
    1c62:	64 f4       	brge	.+24     	; 0x1c7c <async+0x1f6>
    1c64:	77 c0       	rjmp	.+238    	; 0x1d54 <async+0x2ce>
    1c66:	c6 80       	ldd	r12, Z+6	; 0x06
    1c68:	d7 80       	ldd	r13, Z+7	; 0x07
    1c6a:	e0 84       	ldd	r14, Z+8	; 0x08
    1c6c:	f1 84       	ldd	r15, Z+9	; 0x09
    1c6e:	0c 15       	cp	r16, r12
    1c70:	1d 05       	cpc	r17, r13
    1c72:	2e 05       	cpc	r18, r14
    1c74:	3f 05       	cpc	r19, r15
    1c76:	0c f4       	brge	.+2      	; 0x1c7a <async+0x1f4>
    1c78:	5b c0       	rjmp	.+182    	; 0x1d30 <async+0x2aa>
    1c7a:	df 01       	movw	r26, r30
    1c7c:	ed 91       	ld	r30, X+
    1c7e:	fc 91       	ld	r31, X
    1c80:	11 97       	sbiw	r26, 0x01	; 1
    1c82:	30 97       	sbiw	r30, 0x00	; 0
    1c84:	81 f7       	brne	.-32     	; 0x1c66 <async+0x1e0>
    1c86:	19 82       	std	Y+1, r1	; 0x01
    1c88:	18 82       	st	Y, r1
    1c8a:	cd 93       	st	X+, r28
    1c8c:	dc 93       	st	X, r29
    1c8e:	33 20       	and	r3, r3
    1c90:	21 f2       	breq	.-120    	; 0x1c1a <async+0x194>
    1c92:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1c96:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1c9a:	00 97       	sbiw	r24, 0x00	; 0
    1c9c:	09 f4       	brne	.+2      	; 0x1ca0 <async+0x21a>
    1c9e:	bc cf       	rjmp	.-136    	; 0x1c18 <async+0x192>
    1ca0:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1ca4:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1ca8:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <msgQ>
    1cac:	30 91 3d 01 	lds	r19, 0x013D	; 0x80013d <msgQ+0x1>
    1cb0:	02 81       	ldd	r16, Z+2	; 0x02
    1cb2:	13 81       	ldd	r17, Z+3	; 0x03
    1cb4:	d9 01       	movw	r26, r18
    1cb6:	16 96       	adiw	r26, 0x06	; 6
    1cb8:	4d 91       	ld	r20, X+
    1cba:	5d 91       	ld	r21, X+
    1cbc:	6d 91       	ld	r22, X+
    1cbe:	7c 91       	ld	r23, X
    1cc0:	19 97       	sbiw	r26, 0x09	; 9
    1cc2:	d8 01       	movw	r26, r16
    1cc4:	16 96       	adiw	r26, 0x06	; 6
    1cc6:	0d 91       	ld	r16, X+
    1cc8:	1d 91       	ld	r17, X+
    1cca:	2d 91       	ld	r18, X+
    1ccc:	3c 91       	ld	r19, X
    1cce:	19 97       	sbiw	r26, 0x09	; 9
    1cd0:	40 1b       	sub	r20, r16
    1cd2:	51 0b       	sbc	r21, r17
    1cd4:	62 0b       	sbc	r22, r18
    1cd6:	73 0b       	sbc	r23, r19
    1cd8:	77 ff       	sbrs	r23, 7
    1cda:	9e cf       	rjmp	.-196    	; 0x1c18 <async+0x192>
    1cdc:	dc 01       	movw	r26, r24
    1cde:	2d 91       	ld	r18, X+
    1ce0:	3c 91       	ld	r19, X
    1ce2:	11 97       	sbiw	r26, 0x01	; 1
    1ce4:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1ce8:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1cec:	ed 93       	st	X+, r30
    1cee:	fc 93       	st	X, r31
    1cf0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1cf4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1cf8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <dispatch>
    1cfc:	8d cf       	rjmp	.-230    	; 0x1c18 <async+0x192>
    1cfe:	8f ef       	ldi	r24, 0xFF	; 255
    1d00:	9f ef       	ldi	r25, 0xFF	; 255
    1d02:	af ef       	ldi	r26, 0xFF	; 255
    1d04:	bf e7       	ldi	r27, 0x7F	; 127
    1d06:	05 cf       	rjmp	.-502    	; 0x1b12 <async+0x8c>
    1d08:	c8 01       	movw	r24, r16
    1d0a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d0e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d12:	04 1b       	sub	r16, r20
    1d14:	15 0b       	sbc	r17, r21
    1d16:	01 30       	cpi	r16, 0x01	; 1
    1d18:	11 05       	cpc	r17, r1
    1d1a:	b1 f0       	breq	.+44     	; 0x1d48 <async+0x2c2>
    1d1c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d20:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d24:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1d28:	82 60       	ori	r24, 0x02	; 2
    1d2a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1d2e:	72 cf       	rjmp	.-284    	; 0x1c14 <async+0x18e>
    1d30:	f9 83       	std	Y+1, r31	; 0x01
    1d32:	e8 83       	st	Y, r30
    1d34:	aa cf       	rjmp	.-172    	; 0x1c8a <async+0x204>
    1d36:	b9 83       	std	Y+1, r27	; 0x01
    1d38:	a8 83       	st	Y, r26
    1d3a:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    1d3e:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    1d42:	97 01       	movw	r18, r14
    1d44:	86 01       	movw	r16, r12
    1d46:	5d cf       	rjmp	.-326    	; 0x1c02 <async+0x17c>
    1d48:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d4c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d50:	01 96       	adiw	r24, 0x01	; 1
    1d52:	e4 cf       	rjmp	.-56     	; 0x1d1c <async+0x296>
    1d54:	b9 83       	std	Y+1, r27	; 0x01
    1d56:	a8 83       	st	Y, r26
    1d58:	d0 93 3d 01 	sts	0x013D, r29	; 0x80013d <msgQ+0x1>
    1d5c:	c0 93 3c 01 	sts	0x013C, r28	; 0x80013c <msgQ>
    1d60:	96 cf       	rjmp	.-212    	; 0x1c8e <async+0x208>
    1d62:	0e 94 5d 04 	call	0x8ba	; 0x8ba <dequeue.part.0>

00001d66 <sync>:
    1d66:	cf 92       	push	r12
    1d68:	df 92       	push	r13
    1d6a:	ef 92       	push	r14
    1d6c:	ff 92       	push	r15
    1d6e:	0f 93       	push	r16
    1d70:	1f 93       	push	r17
    1d72:	cf 93       	push	r28
    1d74:	df 93       	push	r29
    1d76:	ec 01       	movw	r28, r24
    1d78:	7b 01       	movw	r14, r22
    1d7a:	6a 01       	movw	r12, r20
    1d7c:	1f b7       	in	r17, 0x3f	; 63
    1d7e:	10 78       	andi	r17, 0x80	; 128
    1d80:	f8 94       	cli
    1d82:	a8 81       	ld	r26, Y
    1d84:	b9 81       	ldd	r27, Y+1	; 0x01
    1d86:	10 97       	sbiw	r26, 0x00	; 0
    1d88:	19 f4       	brne	.+6      	; 0x1d90 <sync+0x2a>
    1d8a:	62 c0       	rjmp	.+196    	; 0x1e50 <sync+0xea>
    1d8c:	a0 81       	ld	r26, Z
    1d8e:	b1 81       	ldd	r27, Z+1	; 0x01
    1d90:	14 96       	adiw	r26, 0x04	; 4
    1d92:	ed 91       	ld	r30, X+
    1d94:	fc 91       	ld	r31, X
    1d96:	15 97       	sbiw	r26, 0x05	; 5
    1d98:	30 97       	sbiw	r30, 0x00	; 0
    1d9a:	c1 f7       	brne	.-16     	; 0x1d8c <sync+0x26>
    1d9c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1da0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1da4:	2a 17       	cp	r18, r26
    1da6:	3b 07       	cpc	r19, r27
    1da8:	09 f4       	brne	.+2      	; 0x1dac <sync+0x46>
    1daa:	4c c0       	rjmp	.+152    	; 0x1e44 <sync+0xde>
    1dac:	11 23       	and	r17, r17
    1dae:	a1 f1       	breq	.+104    	; 0x1e18 <sync+0xb2>
    1db0:	8a 81       	ldd	r24, Y+2	; 0x02
    1db2:	9b 81       	ldd	r25, Y+3	; 0x03
    1db4:	00 97       	sbiw	r24, 0x00	; 0
    1db6:	19 f0       	breq	.+6      	; 0x1dbe <sync+0x58>
    1db8:	fc 01       	movw	r30, r24
    1dba:	15 82       	std	Z+5, r1	; 0x05
    1dbc:	14 82       	std	Z+4, r1	; 0x04
    1dbe:	3b 83       	std	Y+3, r19	; 0x03
    1dc0:	2a 83       	std	Y+2, r18	; 0x02
    1dc2:	f9 01       	movw	r30, r18
    1dc4:	d5 83       	std	Z+5, r29	; 0x05
    1dc6:	c4 83       	std	Z+4, r28	; 0x04
    1dc8:	cd 01       	movw	r24, r26
    1dca:	0e 94 fd 03 	call	0x7fa	; 0x7fa <dispatch>
    1dce:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1dd2:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dd6:	82 81       	ldd	r24, Z+2	; 0x02
    1dd8:	93 81       	ldd	r25, Z+3	; 0x03
    1dda:	89 2b       	or	r24, r25
    1ddc:	09 f4       	brne	.+2      	; 0x1de0 <sync+0x7a>
    1dde:	41 c0       	rjmp	.+130    	; 0x1e62 <sync+0xfc>
    1de0:	f9 83       	std	Y+1, r31	; 0x01
    1de2:	e8 83       	st	Y, r30
    1de4:	8a 81       	ldd	r24, Y+2	; 0x02
    1de6:	9b 81       	ldd	r25, Y+3	; 0x03
    1de8:	01 97       	sbiw	r24, 0x01	; 1
    1dea:	09 f0       	breq	.+2      	; 0x1dee <sync+0x88>
    1dec:	78 94       	sei
    1dee:	b6 01       	movw	r22, r12
    1df0:	ce 01       	movw	r24, r28
    1df2:	f7 01       	movw	r30, r14
    1df4:	09 95       	icall
    1df6:	f8 2e       	mov	r15, r24
    1df8:	09 2f       	mov	r16, r25
    1dfa:	8f b7       	in	r24, 0x3f	; 63
    1dfc:	f8 94       	cli
    1dfe:	19 82       	std	Y+1, r1	; 0x01
    1e00:	18 82       	st	Y, r1
    1e02:	8a 81       	ldd	r24, Y+2	; 0x02
    1e04:	9b 81       	ldd	r25, Y+3	; 0x03
    1e06:	82 30       	cpi	r24, 0x02	; 2
    1e08:	91 05       	cpc	r25, r1
    1e0a:	a0 f4       	brcc	.+40     	; 0x1e34 <sync+0xce>
    1e0c:	11 23       	and	r17, r17
    1e0e:	79 f0       	breq	.+30     	; 0x1e2e <sync+0xc8>
    1e10:	78 94       	sei
    1e12:	8f 2d       	mov	r24, r15
    1e14:	90 2f       	mov	r25, r16
    1e16:	02 c0       	rjmp	.+4      	; 0x1e1c <sync+0xb6>
    1e18:	8f ef       	ldi	r24, 0xFF	; 255
    1e1a:	9f ef       	ldi	r25, 0xFF	; 255
    1e1c:	df 91       	pop	r29
    1e1e:	cf 91       	pop	r28
    1e20:	1f 91       	pop	r17
    1e22:	0f 91       	pop	r16
    1e24:	ff 90       	pop	r15
    1e26:	ef 90       	pop	r14
    1e28:	df 90       	pop	r13
    1e2a:	cf 90       	pop	r12
    1e2c:	08 95       	ret
    1e2e:	8f 2d       	mov	r24, r15
    1e30:	90 2f       	mov	r25, r16
    1e32:	f4 cf       	rjmp	.-24     	; 0x1e1c <sync+0xb6>
    1e34:	1b 82       	std	Y+3, r1	; 0x03
    1e36:	1a 82       	std	Y+2, r1	; 0x02
    1e38:	fc 01       	movw	r30, r24
    1e3a:	15 82       	std	Z+5, r1	; 0x05
    1e3c:	14 82       	std	Z+4, r1	; 0x04
    1e3e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <dispatch>
    1e42:	e4 cf       	rjmp	.-56     	; 0x1e0c <sync+0xa6>
    1e44:	11 23       	and	r17, r17
    1e46:	41 f3       	breq	.-48     	; 0x1e18 <sync+0xb2>
    1e48:	78 94       	sei
    1e4a:	8f ef       	ldi	r24, 0xFF	; 255
    1e4c:	9f ef       	ldi	r25, 0xFF	; 255
    1e4e:	e6 cf       	rjmp	.-52     	; 0x1e1c <sync+0xb6>
    1e50:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e54:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e58:	99 83       	std	Y+1, r25	; 0x01
    1e5a:	88 83       	st	Y, r24
    1e5c:	11 23       	and	r17, r17
    1e5e:	39 f2       	breq	.-114    	; 0x1dee <sync+0x88>
    1e60:	c1 cf       	rjmp	.-126    	; 0x1de4 <sync+0x7e>
    1e62:	78 94       	sei
    1e64:	80 e0       	ldi	r24, 0x00	; 0
    1e66:	90 e0       	ldi	r25, 0x00	; 0
    1e68:	d9 cf       	rjmp	.-78     	; 0x1e1c <sync+0xb6>

00001e6a <run>:
    1e6a:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1e6e:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1e72:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e76:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e7a:	20 97       	sbiw	r28, 0x00	; 0
    1e7c:	09 f4       	brne	.+2      	; 0x1e80 <run+0x16>
    1e7e:	6e c0       	rjmp	.+220    	; 0x1f5c <run+0xf2>
    1e80:	88 81       	ld	r24, Y
    1e82:	99 81       	ldd	r25, Y+1	; 0x01
    1e84:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    1e88:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    1e8c:	d3 83       	std	Z+3, r29	; 0x03
    1e8e:	c2 83       	std	Z+2, r28	; 0x02
    1e90:	78 94       	sei
    1e92:	4e 85       	ldd	r20, Y+14	; 0x0e
    1e94:	5f 85       	ldd	r21, Y+15	; 0x0f
    1e96:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e98:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e9a:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e9c:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e9e:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <sync>
    1ea2:	8f b7       	in	r24, 0x3f	; 63
    1ea4:	f8 94       	cli
    1ea6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1eaa:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1eae:	99 83       	std	Y+1, r25	; 0x01
    1eb0:	88 83       	st	Y, r24
    1eb2:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    1eb6:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    1eba:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <activeStack>
    1ebe:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <activeStack+0x1>
    1ec2:	f7 01       	movw	r30, r14
    1ec4:	a0 81       	ld	r26, Z
    1ec6:	b1 81       	ldd	r27, Z+1	; 0x01
    1ec8:	12 96       	adiw	r26, 0x02	; 2
    1eca:	8d 91       	ld	r24, X+
    1ecc:	9c 91       	ld	r25, X
    1ece:	13 97       	sbiw	r26, 0x03	; 3
    1ed0:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1ed4:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1ed8:	20 97       	sbiw	r28, 0x00	; 0
    1eda:	a9 f0       	breq	.+42     	; 0x1f06 <run+0x9c>
    1edc:	00 97       	sbiw	r24, 0x00	; 0
    1ede:	49 f2       	breq	.-110    	; 0x1e72 <run+0x8>
    1ee0:	4e 81       	ldd	r20, Y+6	; 0x06
    1ee2:	5f 81       	ldd	r21, Y+7	; 0x07
    1ee4:	68 85       	ldd	r22, Y+8	; 0x08
    1ee6:	79 85       	ldd	r23, Y+9	; 0x09
    1ee8:	fc 01       	movw	r30, r24
    1eea:	06 81       	ldd	r16, Z+6	; 0x06
    1eec:	17 81       	ldd	r17, Z+7	; 0x07
    1eee:	20 85       	ldd	r18, Z+8	; 0x08
    1ef0:	31 85       	ldd	r19, Z+9	; 0x09
    1ef2:	40 1b       	sub	r20, r16
    1ef4:	51 0b       	sbc	r21, r17
    1ef6:	62 0b       	sbc	r22, r18
    1ef8:	73 0b       	sbc	r23, r19
    1efa:	14 16       	cp	r1, r20
    1efc:	15 06       	cpc	r1, r21
    1efe:	16 06       	cpc	r1, r22
    1f00:	17 06       	cpc	r1, r23
    1f02:	0c f0       	brlt	.+2      	; 0x1f06 <run+0x9c>
    1f04:	b6 cf       	rjmp	.-148    	; 0x1e72 <run+0x8>
    1f06:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <activeStack+0x1>
    1f0a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <activeStack>
    1f0e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1f12:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1f16:	f7 01       	movw	r30, r14
    1f18:	91 83       	std	Z+1, r25	; 0x01
    1f1a:	80 83       	st	Z, r24
    1f1c:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <threadPool+0x1>
    1f20:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <threadPool>
    1f24:	14 96       	adiw	r26, 0x04	; 4
    1f26:	ed 91       	ld	r30, X+
    1f28:	fc 91       	ld	r31, X
    1f2a:	15 97       	sbiw	r26, 0x05	; 5
    1f2c:	30 97       	sbiw	r30, 0x00	; 0
    1f2e:	41 f0       	breq	.+16     	; 0x1f40 <run+0xd6>
    1f30:	a0 81       	ld	r26, Z
    1f32:	b1 81       	ldd	r27, Z+1	; 0x01
    1f34:	14 96       	adiw	r26, 0x04	; 4
    1f36:	ed 91       	ld	r30, X+
    1f38:	fc 91       	ld	r31, X
    1f3a:	15 97       	sbiw	r26, 0x05	; 5
    1f3c:	30 97       	sbiw	r30, 0x00	; 0
    1f3e:	c1 f7       	brne	.-16     	; 0x1f30 <run+0xc6>
    1f40:	cd 01       	movw	r24, r26
    1f42:	0e 94 fd 03 	call	0x7fa	; 0x7fa <dispatch>
    1f46:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1f4a:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1f4e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f52:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f56:	20 97       	sbiw	r28, 0x00	; 0
    1f58:	09 f0       	breq	.+2      	; 0x1f5c <run+0xf2>
    1f5a:	92 cf       	rjmp	.-220    	; 0x1e80 <run+0x16>
    1f5c:	0e 94 5d 04 	call	0x8ba	; 0x8ba <dequeue.part.0>

00001f60 <ABORT>:
    1f60:	cf 93       	push	r28
    1f62:	df 93       	push	r29
    1f64:	dc 01       	movw	r26, r24
    1f66:	4f b7       	in	r20, 0x3f	; 63
    1f68:	40 78       	andi	r20, 0x80	; 128
    1f6a:	f8 94       	cli
    1f6c:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    1f70:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    1f74:	20 97       	sbiw	r28, 0x00	; 0
    1f76:	69 f0       	breq	.+26     	; 0x1f92 <ABORT+0x32>
    1f78:	8c 17       	cp	r24, r28
    1f7a:	9d 07       	cpc	r25, r29
    1f7c:	31 f4       	brne	.+12     	; 0x1f8a <ABORT+0x2a>
    1f7e:	6c c0       	rjmp	.+216    	; 0x2058 <ABORT+0xf8>
    1f80:	ae 17       	cp	r26, r30
    1f82:	bf 07       	cpc	r27, r31
    1f84:	09 f4       	brne	.+2      	; 0x1f88 <ABORT+0x28>
    1f86:	47 c0       	rjmp	.+142    	; 0x2016 <ABORT+0xb6>
    1f88:	ef 01       	movw	r28, r30
    1f8a:	e8 81       	ld	r30, Y
    1f8c:	f9 81       	ldd	r31, Y+1	; 0x01
    1f8e:	30 97       	sbiw	r30, 0x00	; 0
    1f90:	b9 f7       	brne	.-18     	; 0x1f80 <ABORT+0x20>
    1f92:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1f96:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1f9a:	20 97       	sbiw	r28, 0x00	; 0
    1f9c:	69 f0       	breq	.+26     	; 0x1fb8 <ABORT+0x58>
    1f9e:	ac 17       	cp	r26, r28
    1fa0:	bd 07       	cpc	r27, r29
    1fa2:	31 f4       	brne	.+12     	; 0x1fb0 <ABORT+0x50>
    1fa4:	61 c0       	rjmp	.+194    	; 0x2068 <ABORT+0x108>
    1fa6:	ae 17       	cp	r26, r30
    1fa8:	bf 07       	cpc	r27, r31
    1faa:	09 f4       	brne	.+2      	; 0x1fae <ABORT+0x4e>
    1fac:	4c c0       	rjmp	.+152    	; 0x2046 <ABORT+0xe6>
    1fae:	ef 01       	movw	r28, r30
    1fb0:	e8 81       	ld	r30, Y
    1fb2:	f9 81       	ldd	r31, Y+1	; 0x01
    1fb4:	30 97       	sbiw	r30, 0x00	; 0
    1fb6:	b9 f7       	brne	.-18     	; 0x1fa6 <ABORT+0x46>
    1fb8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1fbc:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1fc0:	30 97       	sbiw	r30, 0x00	; 0
    1fc2:	d9 f1       	breq	.+118    	; 0x203a <ABORT+0xda>
    1fc4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fc8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fcc:	05 c0       	rjmp	.+10     	; 0x1fd8 <ABORT+0x78>
    1fce:	01 90       	ld	r0, Z+
    1fd0:	f0 81       	ld	r31, Z
    1fd2:	e0 2d       	mov	r30, r0
    1fd4:	30 97       	sbiw	r30, 0x00	; 0
    1fd6:	89 f1       	breq	.+98     	; 0x203a <ABORT+0xda>
    1fd8:	e2 17       	cp	r30, r18
    1fda:	f3 07       	cpc	r31, r19
    1fdc:	c1 f3       	breq	.-16     	; 0x1fce <ABORT+0x6e>
    1fde:	82 81       	ldd	r24, Z+2	; 0x02
    1fe0:	93 81       	ldd	r25, Z+3	; 0x03
    1fe2:	a8 17       	cp	r26, r24
    1fe4:	b9 07       	cpc	r27, r25
    1fe6:	99 f7       	brne	.-26     	; 0x1fce <ABORT+0x6e>
    1fe8:	64 81       	ldd	r22, Z+4	; 0x04
    1fea:	75 81       	ldd	r23, Z+5	; 0x05
    1fec:	1a 96       	adiw	r26, 0x0a	; 10
    1fee:	8d 91       	ld	r24, X+
    1ff0:	9c 91       	ld	r25, X
    1ff2:	1b 97       	sbiw	r26, 0x0b	; 11
    1ff4:	68 17       	cp	r22, r24
    1ff6:	79 07       	cpc	r23, r25
    1ff8:	51 f7       	brne	.-44     	; 0x1fce <ABORT+0x6e>
    1ffa:	13 82       	std	Z+3, r1	; 0x03
    1ffc:	12 82       	std	Z+2, r1	; 0x02
    1ffe:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    2002:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    2006:	11 96       	adiw	r26, 0x01	; 1
    2008:	9c 93       	st	X, r25
    200a:	8e 93       	st	-X, r24
    200c:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    2010:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    2014:	12 c0       	rjmp	.+36     	; 0x203a <ABORT+0xda>
    2016:	20 97       	sbiw	r28, 0x00	; 0
    2018:	01 f1       	breq	.+64     	; 0x205a <ABORT+0xfa>
    201a:	8d 91       	ld	r24, X+
    201c:	9c 91       	ld	r25, X
    201e:	11 97       	sbiw	r26, 0x01	; 1
    2020:	99 83       	std	Y+1, r25	; 0x01
    2022:	88 83       	st	Y, r24
    2024:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    2028:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    202c:	11 96       	adiw	r26, 0x01	; 1
    202e:	9c 93       	st	X, r25
    2030:	8e 93       	st	-X, r24
    2032:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    2036:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    203a:	44 23       	and	r20, r20
    203c:	09 f0       	breq	.+2      	; 0x2040 <ABORT+0xe0>
    203e:	78 94       	sei
    2040:	df 91       	pop	r29
    2042:	cf 91       	pop	r28
    2044:	08 95       	ret
    2046:	20 97       	sbiw	r28, 0x00	; 0
    2048:	41 f7       	brne	.-48     	; 0x201a <ABORT+0xba>
    204a:	80 81       	ld	r24, Z
    204c:	91 81       	ldd	r25, Z+1	; 0x01
    204e:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    2052:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    2056:	e6 cf       	rjmp	.-52     	; 0x2024 <ABORT+0xc4>
    2058:	fc 01       	movw	r30, r24
    205a:	80 81       	ld	r24, Z
    205c:	91 81       	ldd	r25, Z+1	; 0x01
    205e:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timerQ+0x1>
    2062:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timerQ>
    2066:	de cf       	rjmp	.-68     	; 0x2024 <ABORT+0xc4>
    2068:	fd 01       	movw	r30, r26
    206a:	ef cf       	rjmp	.-34     	; 0x204a <ABORT+0xea>

0000206c <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    206c:	42 31       	cpi	r20, 0x12	; 18
    206e:	b8 f4       	brcc	.+46     	; 0x209e <install+0x32>
        char status;
        DISABLE(status);
    2070:	2f b7       	in	r18, 0x3f	; 63
    2072:	f8 94       	cli
        otable[i] = obj;
    2074:	50 e0       	ldi	r21, 0x00	; 0
    2076:	44 0f       	add	r20, r20
    2078:	55 1f       	adc	r21, r21
    207a:	fa 01       	movw	r30, r20
    207c:	ee 5b       	subi	r30, 0xBE	; 190
    207e:	fe 4f       	sbci	r31, 0xFE	; 254
    2080:	91 83       	std	Z+1, r25	; 0x01
    2082:	80 83       	st	Z, r24
        mtable[i] = m;
    2084:	fa 01       	movw	r30, r20
    2086:	e6 52       	subi	r30, 0x26	; 38
    2088:	fe 4f       	sbci	r31, 0xFE	; 254
    208a:	71 83       	std	Z+1, r23	; 0x01
    208c:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    208e:	41 e0       	ldi	r20, 0x01	; 1
    2090:	50 e0       	ldi	r21, 0x00	; 0
    2092:	fc 01       	movw	r30, r24
    2094:	53 83       	std	Z+3, r21	; 0x03
    2096:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    2098:	27 ff       	sbrs	r18, 7
    209a:	01 c0       	rjmp	.+2      	; 0x209e <install+0x32>
    209c:	78 94       	sei
    209e:	08 95       	ret

000020a0 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    20a0:	8c 01       	movw	r16, r24
    20a2:	7b 01       	movw	r14, r22
    20a4:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    20a6:	8f b7       	in	r24, 0x3f	; 63
    20a8:	f8 94       	cli
    initialize();
    20aa:	0e 94 92 03 	call	0x724	; 0x724 <initialize>
    ENABLE(1);
    20ae:	78 94       	sei
    if (m != NULL)
    20b0:	e1 14       	cp	r14, r1
    20b2:	f1 04       	cpc	r15, r1
    20b4:	41 f0       	breq	.+16     	; 0x20c6 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    20b6:	20 e0       	ldi	r18, 0x00	; 0
    20b8:	30 e0       	ldi	r19, 0x00	; 0
    20ba:	a9 01       	movw	r20, r18
    20bc:	60 e0       	ldi	r22, 0x00	; 0
    20be:	70 e0       	ldi	r23, 0x00	; 0
    20c0:	cb 01       	movw	r24, r22
    20c2:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <async>
    DISABLE(status);
    20c6:	8f b7       	in	r24, 0x3f	; 63
    20c8:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    20ca:	0e 94 1d 04 	call	0x83a	; 0x83a <schedule>
    ENABLE(1);
    20ce:	78 94       	sei
    while (1) {
        SLEEP();
    20d0:	81 e0       	ldi	r24, 0x01	; 1
    20d2:	83 bf       	out	0x33, r24	; 51
    20d4:	88 95       	sleep
    20d6:	fd cf       	rjmp	.-6      	; 0x20d2 <tinytimber+0x32>

000020d8 <__divmodhi4>:
    20d8:	97 fb       	bst	r25, 7
    20da:	07 2e       	mov	r0, r23
    20dc:	16 f4       	brtc	.+4      	; 0x20e2 <__divmodhi4+0xa>
    20de:	00 94       	com	r0
    20e0:	07 d0       	rcall	.+14     	; 0x20f0 <__divmodhi4_neg1>
    20e2:	77 fd       	sbrc	r23, 7
    20e4:	09 d0       	rcall	.+18     	; 0x20f8 <__divmodhi4_neg2>
    20e6:	0e 94 80 10 	call	0x2100	; 0x2100 <__udivmodhi4>
    20ea:	07 fc       	sbrc	r0, 7
    20ec:	05 d0       	rcall	.+10     	; 0x20f8 <__divmodhi4_neg2>
    20ee:	3e f4       	brtc	.+14     	; 0x20fe <__divmodhi4_exit>

000020f0 <__divmodhi4_neg1>:
    20f0:	90 95       	com	r25
    20f2:	81 95       	neg	r24
    20f4:	9f 4f       	sbci	r25, 0xFF	; 255
    20f6:	08 95       	ret

000020f8 <__divmodhi4_neg2>:
    20f8:	70 95       	com	r23
    20fa:	61 95       	neg	r22
    20fc:	7f 4f       	sbci	r23, 0xFF	; 255

000020fe <__divmodhi4_exit>:
    20fe:	08 95       	ret

00002100 <__udivmodhi4>:
    2100:	aa 1b       	sub	r26, r26
    2102:	bb 1b       	sub	r27, r27
    2104:	51 e1       	ldi	r21, 0x11	; 17
    2106:	07 c0       	rjmp	.+14     	; 0x2116 <__udivmodhi4_ep>

00002108 <__udivmodhi4_loop>:
    2108:	aa 1f       	adc	r26, r26
    210a:	bb 1f       	adc	r27, r27
    210c:	a6 17       	cp	r26, r22
    210e:	b7 07       	cpc	r27, r23
    2110:	10 f0       	brcs	.+4      	; 0x2116 <__udivmodhi4_ep>
    2112:	a6 1b       	sub	r26, r22
    2114:	b7 0b       	sbc	r27, r23

00002116 <__udivmodhi4_ep>:
    2116:	88 1f       	adc	r24, r24
    2118:	99 1f       	adc	r25, r25
    211a:	5a 95       	dec	r21
    211c:	a9 f7       	brne	.-22     	; 0x2108 <__udivmodhi4_loop>
    211e:	80 95       	com	r24
    2120:	90 95       	com	r25
    2122:	bc 01       	movw	r22, r24
    2124:	cd 01       	movw	r24, r26
    2126:	08 95       	ret

00002128 <setjmp>:
    2128:	dc 01       	movw	r26, r24
    212a:	2d 92       	st	X+, r2
    212c:	3d 92       	st	X+, r3
    212e:	4d 92       	st	X+, r4
    2130:	5d 92       	st	X+, r5
    2132:	6d 92       	st	X+, r6
    2134:	7d 92       	st	X+, r7
    2136:	8d 92       	st	X+, r8
    2138:	9d 92       	st	X+, r9
    213a:	ad 92       	st	X+, r10
    213c:	bd 92       	st	X+, r11
    213e:	cd 92       	st	X+, r12
    2140:	dd 92       	st	X+, r13
    2142:	ed 92       	st	X+, r14
    2144:	fd 92       	st	X+, r15
    2146:	0d 93       	st	X+, r16
    2148:	1d 93       	st	X+, r17
    214a:	cd 93       	st	X+, r28
    214c:	dd 93       	st	X+, r29
    214e:	ff 91       	pop	r31
    2150:	ef 91       	pop	r30
    2152:	8d b7       	in	r24, 0x3d	; 61
    2154:	8d 93       	st	X+, r24
    2156:	8e b7       	in	r24, 0x3e	; 62
    2158:	8d 93       	st	X+, r24
    215a:	8f b7       	in	r24, 0x3f	; 63
    215c:	8d 93       	st	X+, r24
    215e:	ed 93       	st	X+, r30
    2160:	fd 93       	st	X+, r31
    2162:	88 27       	eor	r24, r24
    2164:	99 27       	eor	r25, r25
    2166:	09 94       	ijmp

00002168 <longjmp>:
    2168:	dc 01       	movw	r26, r24
    216a:	cb 01       	movw	r24, r22
    216c:	81 30       	cpi	r24, 0x01	; 1
    216e:	91 05       	cpc	r25, r1
    2170:	81 1d       	adc	r24, r1
    2172:	2d 90       	ld	r2, X+
    2174:	3d 90       	ld	r3, X+
    2176:	4d 90       	ld	r4, X+
    2178:	5d 90       	ld	r5, X+
    217a:	6d 90       	ld	r6, X+
    217c:	7d 90       	ld	r7, X+
    217e:	8d 90       	ld	r8, X+
    2180:	9d 90       	ld	r9, X+
    2182:	ad 90       	ld	r10, X+
    2184:	bd 90       	ld	r11, X+
    2186:	cd 90       	ld	r12, X+
    2188:	dd 90       	ld	r13, X+
    218a:	ed 90       	ld	r14, X+
    218c:	fd 90       	ld	r15, X+
    218e:	0d 91       	ld	r16, X+
    2190:	1d 91       	ld	r17, X+
    2192:	cd 91       	ld	r28, X+
    2194:	dd 91       	ld	r29, X+
    2196:	ed 91       	ld	r30, X+
    2198:	fd 91       	ld	r31, X+
    219a:	0d 90       	ld	r0, X+
    219c:	f8 94       	cli
    219e:	fe bf       	out	0x3e, r31	; 62
    21a0:	0f be       	out	0x3f, r0	; 63
    21a2:	ed bf       	out	0x3d, r30	; 61
    21a4:	ed 91       	ld	r30, X+
    21a6:	fd 91       	ld	r31, X+
    21a8:	09 94       	ijmp

000021aa <_exit>:
    21aa:	f8 94       	cli

000021ac <__stop_program>:
    21ac:	ff cf       	rjmp	.-2      	; 0x21ac <__stop_program>
