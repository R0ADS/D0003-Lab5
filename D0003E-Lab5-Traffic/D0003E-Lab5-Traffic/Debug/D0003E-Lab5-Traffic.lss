
D0003E-Lab5-Traffic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00002178  0000220c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002178  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800134  00800134  00002240  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002240  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002270  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000260  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002dc4  00000000  00000000  00002510  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011f4  00000000  00000000  000052d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000169e  00000000  00000000  000064c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c44  00000000  00000000  00007b68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000099d  00000000  00000000  000087ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000030f3  00000000  00000000  00009149  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f8  00000000  00000000  0000c23c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__vector_1>
       8:	0c 94 b9 04 	jmp	0x972	; 0x972 <__vector_2>
       c:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__vector_3>
      10:	0c 94 91 05 	jmp	0xb22	; 0xb22 <__vector_4>
      14:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 38 0c 	jmp	0x1870	; 0x1870 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 e5 0b 	jmp	0x17ca	; 0x17ca <__vector_9>
      28:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__vector_10>
      2c:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__vector_11>
      30:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__vector_12>
      34:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__vector_13>
      38:	0c 94 19 08 	jmp	0x1032	; 0x1032 <__vector_14>
      3c:	0c 94 85 08 	jmp	0x110a	; 0x110a <__vector_15>
      40:	0c 94 f1 08 	jmp	0x11e2	; 0x11e2 <__vector_16>
      44:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__vector_17>
      48:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__vector_18>
      4c:	0c 94 35 0a 	jmp	0x146a	; 0x146a <__vector_19>
      50:	0c 94 a1 0a 	jmp	0x1542	; 0x1542 <__vector_20>
      54:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <__vector_21>
      58:	0c 94 79 0b 	jmp	0x16f2	; 0x16f2 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e8 e7       	ldi	r30, 0x78	; 120
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a4 33       	cpi	r26, 0x34	; 52
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a4 e3       	ldi	r26, 0x34	; 52
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 2d 03 	call	0x65a	; 0x65a <main>
      92:	0c 94 ba 10 	jmp	0x2174	; 0x2174 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <transmit>:
#include <avr/io.h>
#include "Communication.h"

// Sends data to simulator
int transmit(Communication *self, int data) {
	while ( !(UCSR0A & (1<<UDRE0)) );
      9a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
      9e:	85 ff       	sbrs	r24, 5
      a0:	fc cf       	rjmp	.-8      	; 0x9a <transmit>
	UDR0 = data;
      a2:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
      a6:	08 95       	ret

000000a8 <updateDisplay>:
int Temp(Handler *self, int value) {
	AFTER(MSEC(1000), self, readValue, value);
}

// Displays our three variables on corresponding segments
int updateDisplay(Handler *self) {
      a8:	cf 92       	push	r12
      aa:	df 92       	push	r13
      ac:	ef 92       	push	r14
      ae:	ff 92       	push	r15
      b0:	0f 93       	push	r16
      b2:	1f 93       	push	r17
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
      b8:	ec 01       	movw	r28, r24
	ASYNC(self->lcd, printAt, self->northQueue * 10);
      ba:	8c 85       	ldd	r24, Y+12	; 0x0c
      bc:	9d 85       	ldd	r25, Y+13	; 0x0d
      be:	6c 01       	movw	r12, r24
      c0:	cc 0c       	add	r12, r12
      c2:	dd 1c       	adc	r13, r13
      c4:	88 0f       	add	r24, r24
      c6:	99 1f       	adc	r25, r25
      c8:	88 0f       	add	r24, r24
      ca:	99 1f       	adc	r25, r25
      cc:	88 0f       	add	r24, r24
      ce:	99 1f       	adc	r25, r25
      d0:	c8 0e       	add	r12, r24
      d2:	d9 1e       	adc	r13, r25
      d4:	0e 81       	ldd	r16, Y+6	; 0x06
      d6:	1f 81       	ldd	r17, Y+7	; 0x07
      d8:	40 e0       	ldi	r20, 0x00	; 0
      da:	e4 2e       	mov	r14, r20
      dc:	43 e0       	ldi	r20, 0x03	; 3
      de:	f4 2e       	mov	r15, r20
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	a9 01       	movw	r20, r18
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	cb 01       	movw	r24, r22
      ec:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
	ASYNC(self->lcd, printAt, self->onBridge * 10 + 2);
      f0:	8e 85       	ldd	r24, Y+14	; 0x0e
      f2:	9f 85       	ldd	r25, Y+15	; 0x0f
      f4:	6c 01       	movw	r12, r24
      f6:	cc 0c       	add	r12, r12
      f8:	dd 1c       	adc	r13, r13
      fa:	88 0f       	add	r24, r24
      fc:	99 1f       	adc	r25, r25
      fe:	88 0f       	add	r24, r24
     100:	99 1f       	adc	r25, r25
     102:	88 0f       	add	r24, r24
     104:	99 1f       	adc	r25, r25
     106:	c8 0e       	add	r12, r24
     108:	d9 1e       	adc	r13, r25
     10a:	82 e0       	ldi	r24, 0x02	; 2
     10c:	c8 0e       	add	r12, r24
     10e:	d1 1c       	adc	r13, r1
     110:	0e 81       	ldd	r16, Y+6	; 0x06
     112:	1f 81       	ldd	r17, Y+7	; 0x07
     114:	20 e0       	ldi	r18, 0x00	; 0
     116:	30 e0       	ldi	r19, 0x00	; 0
     118:	a9 01       	movw	r20, r18
     11a:	60 e0       	ldi	r22, 0x00	; 0
     11c:	70 e0       	ldi	r23, 0x00	; 0
     11e:	cb 01       	movw	r24, r22
     120:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
	ASYNC(self->lcd, printAt, self->southQueue * 10 + 4);
     124:	8a 85       	ldd	r24, Y+10	; 0x0a
     126:	9b 85       	ldd	r25, Y+11	; 0x0b
     128:	6c 01       	movw	r12, r24
     12a:	cc 0c       	add	r12, r12
     12c:	dd 1c       	adc	r13, r13
     12e:	88 0f       	add	r24, r24
     130:	99 1f       	adc	r25, r25
     132:	88 0f       	add	r24, r24
     134:	99 1f       	adc	r25, r25
     136:	88 0f       	add	r24, r24
     138:	99 1f       	adc	r25, r25
     13a:	c8 0e       	add	r12, r24
     13c:	d9 1e       	adc	r13, r25
     13e:	84 e0       	ldi	r24, 0x04	; 4
     140:	c8 0e       	add	r12, r24
     142:	d1 1c       	adc	r13, r1
     144:	0e 81       	ldd	r16, Y+6	; 0x06
     146:	1f 81       	ldd	r17, Y+7	; 0x07
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	a9 01       	movw	r20, r18
     14e:	60 e0       	ldi	r22, 0x00	; 0
     150:	70 e0       	ldi	r23, 0x00	; 0
     152:	cb 01       	movw	r24, r22
     154:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
}
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	1f 91       	pop	r17
     15e:	0f 91       	pop	r16
     160:	ff 90       	pop	r15
     162:	ef 90       	pop	r14
     164:	df 90       	pop	r13
     166:	cf 90       	pop	r12
     168:	08 95       	ret

0000016a <reduceBridge>:

// Seperate function that reduces onbridge (needed for AFTER)
int reduceBridge(Handler *self) {
     16a:	cf 92       	push	r12
     16c:	df 92       	push	r13
     16e:	ef 92       	push	r14
     170:	ff 92       	push	r15
     172:	0f 93       	push	r16
     174:	1f 93       	push	r17
	self->onBridge--;
     176:	fc 01       	movw	r30, r24
     178:	26 85       	ldd	r18, Z+14	; 0x0e
     17a:	37 85       	ldd	r19, Z+15	; 0x0f
     17c:	21 50       	subi	r18, 0x01	; 1
     17e:	31 09       	sbc	r19, r1
     180:	37 87       	std	Z+15, r19	; 0x0f
     182:	26 87       	std	Z+14, r18	; 0x0e
	ASYNC(self, updateDisplay, NULL);
     184:	c1 2c       	mov	r12, r1
     186:	d1 2c       	mov	r13, r1
     188:	24 e5       	ldi	r18, 0x54	; 84
     18a:	e2 2e       	mov	r14, r18
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	f2 2e       	mov	r15, r18
     190:	8c 01       	movw	r16, r24
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	a9 01       	movw	r20, r18
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	70 e0       	ldi	r23, 0x00	; 0
     19c:	cb 01       	movw	r24, r22
     19e:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
}
     1a2:	1f 91       	pop	r17
     1a4:	0f 91       	pop	r16
     1a6:	ff 90       	pop	r15
     1a8:	ef 90       	pop	r14
     1aa:	df 90       	pop	r13
     1ac:	cf 90       	pop	r12
     1ae:	08 95       	ret

000001b0 <deQueuer>:

// Moves car from queue (dependent on dir) to bridge
int deQueuer(Handler *self, int dir){
     1b0:	cf 92       	push	r12
     1b2:	df 92       	push	r13
     1b4:	ef 92       	push	r14
     1b6:	ff 92       	push	r15
     1b8:	0f 93       	push	r16
     1ba:	1f 93       	push	r17
     1bc:	cf 93       	push	r28
     1be:	df 93       	push	r29
     1c0:	ec 01       	movw	r28, r24
	if (dir){
     1c2:	67 2b       	or	r22, r23
     1c4:	81 f5       	brne	.+96     	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
		self->northQueue--;
	}
	else{
		self->southQueue--;
     1c6:	8a 85       	ldd	r24, Y+10	; 0x0a
     1c8:	9b 85       	ldd	r25, Y+11	; 0x0b
     1ca:	01 97       	sbiw	r24, 0x01	; 1
     1cc:	9b 87       	std	Y+11, r25	; 0x0b
     1ce:	8a 87       	std	Y+10, r24	; 0x0a
	}
	self->onBridge++;
     1d0:	8e 85       	ldd	r24, Y+14	; 0x0e
     1d2:	9f 85       	ldd	r25, Y+15	; 0x0f
     1d4:	01 96       	adiw	r24, 0x01	; 1
     1d6:	9f 87       	std	Y+15, r25	; 0x0f
     1d8:	8e 87       	std	Y+14, r24	; 0x0e
	AFTER(MSEC(1000), self, switcher, NULL);
     1da:	c1 2c       	mov	r12, r1
     1dc:	d1 2c       	mov	r13, r1
     1de:	81 e8       	ldi	r24, 0x81	; 129
     1e0:	e8 2e       	mov	r14, r24
     1e2:	81 e0       	ldi	r24, 0x01	; 1
     1e4:	f8 2e       	mov	r15, r24
     1e6:	8e 01       	movw	r16, r28
     1e8:	20 e0       	ldi	r18, 0x00	; 0
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	a9 01       	movw	r20, r18
     1ee:	62 e1       	ldi	r22, 0x12	; 18
     1f0:	7a e7       	ldi	r23, 0x7A	; 122
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
	//ASYNC(self, updateDisplay, NULL);	// <-- Unnecessary line? Should remove and test
	AFTER(MSEC(5000), self, reduceBridge, NULL);
     1fa:	95 eb       	ldi	r25, 0xB5	; 181
     1fc:	e9 2e       	mov	r14, r25
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	f9 2e       	mov	r15, r25
     202:	20 e0       	ldi	r18, 0x00	; 0
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	a9 01       	movw	r20, r18
     208:	6a e5       	ldi	r22, 0x5A	; 90
     20a:	72 e6       	ldi	r23, 0x62	; 98
     20c:	82 e0       	ldi	r24, 0x02	; 2
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
}
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	1f 91       	pop	r17
     21a:	0f 91       	pop	r16
     21c:	ff 90       	pop	r15
     21e:	ef 90       	pop	r14
     220:	df 90       	pop	r13
     222:	cf 90       	pop	r12
     224:	08 95       	ret
}

// Moves car from queue (dependent on dir) to bridge
int deQueuer(Handler *self, int dir){
	if (dir){
		self->northQueue--;
     226:	8c 85       	ldd	r24, Y+12	; 0x0c
     228:	9d 85       	ldd	r25, Y+13	; 0x0d
     22a:	01 97       	sbiw	r24, 0x01	; 1
     22c:	9d 87       	std	Y+13, r25	; 0x0d
     22e:	8c 87       	std	Y+12, r24	; 0x0c
     230:	cf cf       	rjmp	.-98     	; 0x1d0 <deQueuer+0x20>

00000232 <readValue>:
	//ASYNC(self, updateDisplay, NULL);	// <-- Unnecessary line? Should remove and test
	AFTER(MSEC(5000), self, reduceBridge, NULL);
}

// Reads incoming data and changes variables accordingly
int readValue(Handler *self, int value) {
     232:	cf 92       	push	r12
     234:	df 92       	push	r13
     236:	ef 92       	push	r14
     238:	ff 92       	push	r15
     23a:	0f 93       	push	r16
     23c:	1f 93       	push	r17
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
     242:	ec 01       	movw	r28, r24
	if (value == 1) {			// Car enters northQueue
     244:	61 30       	cpi	r22, 0x01	; 1
     246:	71 05       	cpc	r23, r1
     248:	c1 f1       	breq	.+112    	; 0x2ba <readValue+0x88>
		self->northQueue++;
		ASYNC(self, switcher, NULL);
	}
	if (value == 2) {			// Car enters bridge from north
     24a:	62 30       	cpi	r22, 0x02	; 2
     24c:	71 05       	cpc	r23, r1
     24e:	09 f4       	brne	.+2      	; 0x252 <readValue+0x20>
     250:	49 c0       	rjmp	.+146    	; 0x2e4 <readValue+0xb2>
		self->counter++;
		ASYNC(self, deQueuer, 1);
	}
	if (value == 4) {			// Car enters southQueue
     252:	64 30       	cpi	r22, 0x04	; 4
     254:	71 05       	cpc	r23, r1
     256:	09 f4       	brne	.+2      	; 0x25a <readValue+0x28>
     258:	4e c0       	rjmp	.+156    	; 0x2f6 <readValue+0xc4>
		self->southQueue++;
		ASYNC(self, switcher, NULL);
	}
	if (value == 8) {			// Car enters bridge from south
     25a:	68 30       	cpi	r22, 0x08	; 8
     25c:	71 05       	cpc	r23, r1
     25e:	c1 f0       	breq	.+48     	; 0x290 <readValue+0x5e>
		self->counter++;		
		ASYNC(self, deQueuer, 0);
	}
	ASYNC(self, updateDisplay, NULL);
     260:	c1 2c       	mov	r12, r1
     262:	d1 2c       	mov	r13, r1
     264:	84 e5       	ldi	r24, 0x54	; 84
     266:	e8 2e       	mov	r14, r24
     268:	80 e0       	ldi	r24, 0x00	; 0
     26a:	f8 2e       	mov	r15, r24
     26c:	8e 01       	movw	r16, r28
     26e:	20 e0       	ldi	r18, 0x00	; 0
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	a9 01       	movw	r20, r18
     274:	60 e0       	ldi	r22, 0x00	; 0
     276:	70 e0       	ldi	r23, 0x00	; 0
     278:	cb 01       	movw	r24, r22
     27a:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
	//ASYNC(self, switcher, NULL);
}
     27e:	df 91       	pop	r29
     280:	cf 91       	pop	r28
     282:	1f 91       	pop	r17
     284:	0f 91       	pop	r16
     286:	ff 90       	pop	r15
     288:	ef 90       	pop	r14
     28a:	df 90       	pop	r13
     28c:	cf 90       	pop	r12
     28e:	08 95       	ret
	if (value == 4) {			// Car enters southQueue
		self->southQueue++;
		ASYNC(self, switcher, NULL);
	}
	if (value == 8) {			// Car enters bridge from south
		self->counter++;		
     290:	88 89       	ldd	r24, Y+16	; 0x10
     292:	99 89       	ldd	r25, Y+17	; 0x11
     294:	01 96       	adiw	r24, 0x01	; 1
     296:	99 8b       	std	Y+17, r25	; 0x11
     298:	88 8b       	std	Y+16, r24	; 0x10
		ASYNC(self, deQueuer, 0);
     29a:	c1 2c       	mov	r12, r1
     29c:	d1 2c       	mov	r13, r1
     29e:	98 ed       	ldi	r25, 0xD8	; 216
     2a0:	e9 2e       	mov	r14, r25
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	f9 2e       	mov	r15, r25
     2a6:	8e 01       	movw	r16, r28
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	a9 01       	movw	r20, r18
     2ae:	60 e0       	ldi	r22, 0x00	; 0
     2b0:	70 e0       	ldi	r23, 0x00	; 0
     2b2:	cb 01       	movw	r24, r22
     2b4:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
     2b8:	d3 cf       	rjmp	.-90     	; 0x260 <readValue+0x2e>
}

// Reads incoming data and changes variables accordingly
int readValue(Handler *self, int value) {
	if (value == 1) {			// Car enters northQueue
		self->northQueue++;
     2ba:	8c 85       	ldd	r24, Y+12	; 0x0c
     2bc:	9d 85       	ldd	r25, Y+13	; 0x0d
     2be:	01 96       	adiw	r24, 0x01	; 1
     2c0:	9d 87       	std	Y+13, r25	; 0x0d
     2c2:	8c 87       	std	Y+12, r24	; 0x0c
		self->counter++;
		ASYNC(self, deQueuer, 1);
	}
	if (value == 4) {			// Car enters southQueue
		self->southQueue++;
		ASYNC(self, switcher, NULL);
     2c4:	c1 2c       	mov	r12, r1
     2c6:	d1 2c       	mov	r13, r1
     2c8:	21 e8       	ldi	r18, 0x81	; 129
     2ca:	e2 2e       	mov	r14, r18
     2cc:	21 e0       	ldi	r18, 0x01	; 1
     2ce:	f2 2e       	mov	r15, r18
     2d0:	8e 01       	movw	r16, r28
     2d2:	20 e0       	ldi	r18, 0x00	; 0
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	a9 01       	movw	r20, r18
     2d8:	60 e0       	ldi	r22, 0x00	; 0
     2da:	70 e0       	ldi	r23, 0x00	; 0
     2dc:	cb 01       	movw	r24, r22
     2de:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
     2e2:	be cf       	rjmp	.-132    	; 0x260 <readValue+0x2e>
	if (value == 1) {			// Car enters northQueue
		self->northQueue++;
		ASYNC(self, switcher, NULL);
	}
	if (value == 2) {			// Car enters bridge from north
		self->counter++;
     2e4:	88 89       	ldd	r24, Y+16	; 0x10
     2e6:	99 89       	ldd	r25, Y+17	; 0x11
     2e8:	01 96       	adiw	r24, 0x01	; 1
     2ea:	99 8b       	std	Y+17, r25	; 0x11
     2ec:	88 8b       	std	Y+16, r24	; 0x10
		ASYNC(self, deQueuer, 1);
     2ee:	cc 24       	eor	r12, r12
     2f0:	c3 94       	inc	r12
     2f2:	d1 2c       	mov	r13, r1
     2f4:	d4 cf       	rjmp	.-88     	; 0x29e <readValue+0x6c>
	}
	if (value == 4) {			// Car enters southQueue
		self->southQueue++;
     2f6:	8a 85       	ldd	r24, Y+10	; 0x0a
     2f8:	9b 85       	ldd	r25, Y+11	; 0x0b
     2fa:	01 96       	adiw	r24, 0x01	; 1
     2fc:	9b 87       	std	Y+11, r25	; 0x0b
     2fe:	8a 87       	std	Y+10, r24	; 0x0a
     300:	e1 cf       	rjmp	.-62     	; 0x2c4 <readValue+0x92>

00000302 <switcher>:
	}
}*/

// Determines how and when to signal green on either side
// Determines how and when to signal green on either side
int switcher (Handler *self) {
     302:	cf 92       	push	r12
     304:	df 92       	push	r13
     306:	ef 92       	push	r14
     308:	ff 92       	push	r15
     30a:	0f 93       	push	r16
     30c:	1f 93       	push	r17
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	ec 01       	movw	r28, r24
	if (test){
     314:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <test>
     318:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <test+0x1>
     31c:	00 97       	sbiw	r24, 0x00	; 0
     31e:	31 f0       	breq	.+12     	; 0x32c <switcher+0x2a>
		ABORT(test);
     320:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <ABORT>
		test = NULL;
     324:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <test+0x1>
     328:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <test>
	}
    if (self->isNorth) {
     32c:	88 85       	ldd	r24, Y+8	; 0x08
     32e:	99 85       	ldd	r25, Y+9	; 0x09
     330:	89 2b       	or	r24, r25
     332:	41 f1       	breq	.+80     	; 0x384 <switcher+0x82>
        if (self->northQueue && self->counter < 5) {    // Let trhrough
     334:	8c 85       	ldd	r24, Y+12	; 0x0c
     336:	9d 85       	ldd	r25, Y+13	; 0x0d
     338:	89 2b       	or	r24, r25
     33a:	09 f4       	brne	.+2      	; 0x33e <switcher+0x3c>
     33c:	60 c0       	rjmp	.+192    	; 0x3fe <switcher+0xfc>
     33e:	88 89       	ldd	r24, Y+16	; 0x10
     340:	99 89       	ldd	r25, Y+17	; 0x11
     342:	05 97       	sbiw	r24, 0x05	; 5
     344:	ac f1       	brlt	.+106    	; 0x3b0 <switcher+0xae>
            ASYNC(self->com, transmit, 0b1001);
        }
        else if (self->counter >= 5) {
            if (self->onBridge == 0) {
     346:	8e 85       	ldd	r24, Y+14	; 0x0e
     348:	9f 85       	ldd	r25, Y+15	; 0x0f
     34a:	89 2b       	or	r24, r25
     34c:	09 f0       	breq	.+2      	; 0x350 <switcher+0x4e>
     34e:	63 c0       	rjmp	.+198    	; 0x416 <__DATA_REGION_LENGTH__+0x16>
                self->counter = 0;
     350:	19 8a       	std	Y+17, r1	; 0x11
     352:	18 8a       	std	Y+16, r1	; 0x10
                if (self->southQueue) {                    // Switch side
     354:	8a 85       	ldd	r24, Y+10	; 0x0a
     356:	9b 85       	ldd	r25, Y+11	; 0x0b
     358:	89 2b       	or	r24, r25
     35a:	51 f1       	breq	.+84     	; 0x3b0 <switcher+0xae>
                test = AFTER(MSEC(1250), self, switcher, NULL);
            }
        }
        else if (!(self->northQueue) && self->onBridge == 0) {
            self->counter = 0;
            self->isNorth = 0;
     35c:	19 86       	std	Y+9, r1	; 0x09
     35e:	18 86       	std	Y+8, r1	; 0x08
                if (self->northQueue) {
                    self->isNorth = 1;
                    ASYNC(self->com, transmit, 0b1001);
                }
                else {
                    ASYNC(self->com, transmit, 0b0110);
     360:	0c 81       	ldd	r16, Y+4	; 0x04
     362:	1d 81       	ldd	r17, Y+5	; 0x05
     364:	86 e0       	ldi	r24, 0x06	; 6
     366:	c8 2e       	mov	r12, r24
     368:	d1 2c       	mov	r13, r1
     36a:	9d e4       	ldi	r25, 0x4D	; 77
     36c:	e9 2e       	mov	r14, r25
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	f9 2e       	mov	r15, r25
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	a9 01       	movw	r20, r18
     378:	60 e0       	ldi	r22, 0x00	; 0
     37a:	70 e0       	ldi	r23, 0x00	; 0
     37c:	cb 01       	movw	r24, r22
     37e:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
     382:	27 c0       	rjmp	.+78     	; 0x3d2 <switcher+0xd0>
            self->isNorth = 0;
            ASYNC(self->com, transmit, 0b0110);
        }
    }
    else  {
        if (self->southQueue && self->counter < 5) {
     384:	8a 85       	ldd	r24, Y+10	; 0x0a
     386:	9b 85       	ldd	r25, Y+11	; 0x0b
     388:	89 2b       	or	r24, r25
     38a:	71 f1       	breq	.+92     	; 0x3e8 <switcher+0xe6>
     38c:	88 89       	ldd	r24, Y+16	; 0x10
     38e:	99 89       	ldd	r25, Y+17	; 0x11
     390:	05 97       	sbiw	r24, 0x05	; 5
     392:	34 f3       	brlt	.-52     	; 0x360 <switcher+0x5e>
            ASYNC(self->com, transmit, 0b0110);
        }
        else if (self->counter >= 5) {
            if (self->onBridge == 0) {
     394:	8e 85       	ldd	r24, Y+14	; 0x0e
     396:	9f 85       	ldd	r25, Y+15	; 0x0f
     398:	89 2b       	or	r24, r25
     39a:	e9 f5       	brne	.+122    	; 0x416 <__DATA_REGION_LENGTH__+0x16>
                self->counter = 0;
     39c:	19 8a       	std	Y+17, r1	; 0x11
     39e:	18 8a       	std	Y+16, r1	; 0x10
                if (self->northQueue) {
     3a0:	8c 85       	ldd	r24, Y+12	; 0x0c
     3a2:	9d 85       	ldd	r25, Y+13	; 0x0d
     3a4:	89 2b       	or	r24, r25
     3a6:	e1 f2       	breq	.-72     	; 0x360 <switcher+0x5e>
                    self->isNorth = 1;
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	99 87       	std	Y+9, r25	; 0x09
     3ae:	88 87       	std	Y+8, r24	; 0x08
                    ASYNC(self->com, transmit, 0b1001);
     3b0:	0c 81       	ldd	r16, Y+4	; 0x04
     3b2:	1d 81       	ldd	r17, Y+5	; 0x05
     3b4:	29 e0       	ldi	r18, 0x09	; 9
     3b6:	c2 2e       	mov	r12, r18
     3b8:	d1 2c       	mov	r13, r1
     3ba:	3d e4       	ldi	r19, 0x4D	; 77
     3bc:	e3 2e       	mov	r14, r19
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	f3 2e       	mov	r15, r19
     3c2:	20 e0       	ldi	r18, 0x00	; 0
     3c4:	30 e0       	ldi	r19, 0x00	; 0
     3c6:	a9 01       	movw	r20, r18
     3c8:	60 e0       	ldi	r22, 0x00	; 0
     3ca:	70 e0       	ldi	r23, 0x00	; 0
     3cc:	cb 01       	movw	r24, r22
     3ce:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
            self->counter = 0;
            self->isNorth = 1;
            ASYNC(self->com, transmit, 0b1001);
        }
    }
     3d2:	80 e0       	ldi	r24, 0x00	; 0
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	df 91       	pop	r29
     3d8:	cf 91       	pop	r28
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	ff 90       	pop	r15
     3e0:	ef 90       	pop	r14
     3e2:	df 90       	pop	r13
     3e4:	cf 90       	pop	r12
     3e6:	08 95       	ret
    }
    else  {
        if (self->southQueue && self->counter < 5) {
            ASYNC(self->com, transmit, 0b0110);
        }
        else if (self->counter >= 5) {
     3e8:	88 89       	ldd	r24, Y+16	; 0x10
     3ea:	99 89       	ldd	r25, Y+17	; 0x11
     3ec:	05 97       	sbiw	r24, 0x05	; 5
     3ee:	94 f6       	brge	.-92     	; 0x394 <switcher+0x92>
            }
            else {												// !Delay
                test = AFTER(MSEC(1250), self, switcher, NULL);
            }
        }
        else if (!(self->southQueue) && self->onBridge == 0){
     3f0:	8e 85       	ldd	r24, Y+14	; 0x0e
     3f2:	9f 85       	ldd	r25, Y+15	; 0x0f
     3f4:	89 2b       	or	r24, r25
     3f6:	69 f7       	brne	.-38     	; 0x3d2 <switcher+0xd0>
            self->counter = 0;
     3f8:	19 8a       	std	Y+17, r1	; 0x11
     3fa:	18 8a       	std	Y+16, r1	; 0x10
     3fc:	d5 cf       	rjmp	.-86     	; 0x3a8 <switcher+0xa6>
	}
    if (self->isNorth) {
        if (self->northQueue && self->counter < 5) {    // Let trhrough
            ASYNC(self->com, transmit, 0b1001);
        }
        else if (self->counter >= 5) {
     3fe:	88 89       	ldd	r24, Y+16	; 0x10
     400:	99 89       	ldd	r25, Y+17	; 0x11
     402:	05 97       	sbiw	r24, 0x05	; 5
     404:	0c f0       	brlt	.+2      	; 0x408 <__DATA_REGION_LENGTH__+0x8>
     406:	9f cf       	rjmp	.-194    	; 0x346 <switcher+0x44>
            }
            else {												// !Delay
                test = AFTER(MSEC(1250), self, switcher, NULL);
            }
        }
        else if (!(self->northQueue) && self->onBridge == 0) {
     408:	8e 85       	ldd	r24, Y+14	; 0x0e
     40a:	9f 85       	ldd	r25, Y+15	; 0x0f
     40c:	89 2b       	or	r24, r25
     40e:	09 f7       	brne	.-62     	; 0x3d2 <switcher+0xd0>
            self->counter = 0;
     410:	19 8a       	std	Y+17, r1	; 0x11
     412:	18 8a       	std	Y+16, r1	; 0x10
     414:	a3 cf       	rjmp	.-186    	; 0x35c <switcher+0x5a>
                else {
                    ASYNC(self->com, transmit, 0b1001);    // Reset and keep
                }
            }
            else {												// !Delay
                test = AFTER(MSEC(1250), self, switcher, NULL);
     416:	c1 2c       	mov	r12, r1
     418:	d1 2c       	mov	r13, r1
     41a:	41 e8       	ldi	r20, 0x81	; 129
     41c:	e4 2e       	mov	r14, r20
     41e:	41 e0       	ldi	r20, 0x01	; 1
     420:	f4 2e       	mov	r15, r20
     422:	8e 01       	movw	r16, r28
     424:	20 e0       	ldi	r18, 0x00	; 0
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	a9 01       	movw	r20, r18
     42a:	66 e9       	ldi	r22, 0x96	; 150
     42c:	78 e9       	ldi	r23, 0x98	; 152
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
     436:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <test+0x1>
     43a:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <test>
     43e:	c9 cf       	rjmp	.-110    	; 0x3d2 <switcher+0xd0>

00000440 <Init>:
#define BAUD 9600
#define MYUBRR ((FOSC/(16UL*BAUD))-1)

// Just what you woud expect, all things needed for initialization
void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
     440:	e1 e6       	ldi	r30, 0x61	; 97
     442:	f0 e0       	ldi	r31, 0x00	; 0
     444:	80 e8       	ldi	r24, 0x80	; 128
     446:	80 83       	st	Z, r24
	CLKPR = 0x00;
     448:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     44a:	8f e0       	ldi	r24, 0x0F	; 15
     44c:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     450:	87 eb       	ldi	r24, 0xB7	; 183
     452:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     456:	87 e0       	ldi	r24, 0x07	; 7
     458:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     45c:	80 ec       	ldi	r24, 0xC0	; 192
     45e:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// ------------------------- Stuffs for communication -------------------------------------------------
	
	/* Set baud rate */
	UBRR0H = (uint8_t)(MYUBRR<<8);
     462:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (uint8_t)(MYUBRR);
     466:	83 e3       	ldi	r24, 0x33	; 51
     468:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	/* Enable receiver and transmitter */
	UCSR0B = (1<<TXEN0) | (1<<RXEN0) | (1<<RXCIE0);
     46c:	88 e9       	ldi	r24, 0x98	; 152
     46e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
     472:	08 95       	ret

00000474 <interrupter>:

#include <avr/io.h>
#include "InterruptHandler.h"

// Simply calls readvalue. (We want this seperate object since multiple interrupts can happen in short proximity or simultaneously)
int interrupter(InterruptHandler *self) {
     474:	cf 92       	push	r12
     476:	df 92       	push	r13
     478:	ef 92       	push	r14
     47a:	ff 92       	push	r15
     47c:	0f 93       	push	r16
     47e:	1f 93       	push	r17
	
	//AFTER(MSEC(1000), self->handler, readValue, UDR0);
	ASYNC(self->handler, readValue, UDR0);
     480:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     484:	d1 2c       	mov	r13, r1
     486:	fc 01       	movw	r30, r24
     488:	04 81       	ldd	r16, Z+4	; 0x04
     48a:	15 81       	ldd	r17, Z+5	; 0x05
     48c:	89 e1       	ldi	r24, 0x19	; 25
     48e:	e8 2e       	mov	r14, r24
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	f8 2e       	mov	r15, r24
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	a9 01       	movw	r20, r18
     49a:	60 e0       	ldi	r22, 0x00	; 0
     49c:	70 e0       	ldi	r23, 0x00	; 0
     49e:	cb 01       	movw	r24, r22
     4a0:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
	return 0;
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	1f 91       	pop	r17
     4aa:	0f 91       	pop	r16
     4ac:	ff 90       	pop	r15
     4ae:	ef 90       	pop	r14
     4b0:	df 90       	pop	r13
     4b2:	cf 90       	pop	r12
     4b4:	08 95       	ret

000004b6 <removeOldChar.part.0>:
};

// Switches between two segments 
void switchSegment() {
    LCDDR13 = !(LCDDR13 & 1);
    LCDDR18 = !(LCDDR18 & 1);
     4b6:	fc 01       	movw	r30, r24
     4b8:	20 81       	ld	r18, Z
     4ba:	29 70       	andi	r18, 0x09	; 9
     4bc:	20 83       	st	Z, r18
     4be:	35 96       	adiw	r30, 0x05	; 5
     4c0:	9c 01       	movw	r18, r24
     4c2:	2c 5e       	subi	r18, 0xEC	; 236
     4c4:	3f 4f       	sbci	r19, 0xFF	; 255
     4c6:	90 81       	ld	r25, Z
     4c8:	9f 70       	andi	r25, 0x0F	; 15
     4ca:	90 83       	st	Z, r25
     4cc:	35 96       	adiw	r30, 0x05	; 5
     4ce:	e2 17       	cp	r30, r18
     4d0:	f3 07       	cpc	r31, r19
     4d2:	c9 f7       	brne	.-14     	; 0x4c6 <removeOldChar.part.0+0x10>
     4d4:	08 95       	ret

000004d6 <displayChar>:
     4d6:	cf 93       	push	r28
     4d8:	df 93       	push	r29
     4da:	00 d0       	rcall	.+0      	; 0x4dc <displayChar+0x6>
     4dc:	00 d0       	rcall	.+0      	; 0x4de <displayChar+0x8>
     4de:	cd b7       	in	r28, 0x3d	; 61
     4e0:	de b7       	in	r29, 0x3e	; 62
     4e2:	da 01       	movw	r26, r20
     4e4:	90 ed       	ldi	r25, 0xD0	; 208
     4e6:	98 0f       	add	r25, r24
     4e8:	9a 30       	cpi	r25, 0x0A	; 10
     4ea:	e8 f1       	brcs	.+122    	; 0x566 <__stack+0x67>
     4ec:	89 e0       	ldi	r24, 0x09	; 9
     4ee:	89 83       	std	Y+1, r24	; 0x01
     4f0:	8f e0       	ldi	r24, 0x0F	; 15
     4f2:	8a 83       	std	Y+2, r24	; 0x02
     4f4:	8b 83       	std	Y+3, r24	; 0x03
     4f6:	8c 83       	std	Y+4, r24	; 0x04
     4f8:	99 e0       	ldi	r25, 0x09	; 9
     4fa:	66 23       	and	r22, r22
     4fc:	99 f0       	breq	.+38     	; 0x524 <__stack+0x25>
     4fe:	fe 01       	movw	r30, r28
     500:	31 96       	adiw	r30, 0x01	; 1
     502:	9e 01       	movw	r18, r28
     504:	2b 5f       	subi	r18, 0xFB	; 251
     506:	3f 4f       	sbci	r19, 0xFF	; 255
     508:	92 95       	swap	r25
     50a:	90 7f       	andi	r25, 0xF0	; 240
     50c:	91 93       	st	Z+, r25
     50e:	2e 17       	cp	r18, r30
     510:	3f 07       	cpc	r19, r31
     512:	39 f0       	breq	.+14     	; 0x522 <__stack+0x23>
     514:	90 81       	ld	r25, Z
     516:	92 95       	swap	r25
     518:	90 7f       	andi	r25, 0xF0	; 240
     51a:	91 93       	st	Z+, r25
     51c:	2e 17       	cp	r18, r30
     51e:	3f 07       	cpc	r19, r31
     520:	c9 f7       	brne	.-14     	; 0x514 <__stack+0x15>
     522:	99 81       	ldd	r25, Y+1	; 0x01
     524:	8c 91       	ld	r24, X
     526:	98 2b       	or	r25, r24
     528:	9c 93       	st	X, r25
     52a:	15 96       	adiw	r26, 0x05	; 5
     52c:	9c 91       	ld	r25, X
     52e:	15 97       	sbiw	r26, 0x05	; 5
     530:	8a 81       	ldd	r24, Y+2	; 0x02
     532:	89 2b       	or	r24, r25
     534:	15 96       	adiw	r26, 0x05	; 5
     536:	8c 93       	st	X, r24
     538:	15 97       	sbiw	r26, 0x05	; 5
     53a:	1a 96       	adiw	r26, 0x0a	; 10
     53c:	9c 91       	ld	r25, X
     53e:	1a 97       	sbiw	r26, 0x0a	; 10
     540:	8b 81       	ldd	r24, Y+3	; 0x03
     542:	89 2b       	or	r24, r25
     544:	1a 96       	adiw	r26, 0x0a	; 10
     546:	8c 93       	st	X, r24
     548:	1a 97       	sbiw	r26, 0x0a	; 10
     54a:	1f 96       	adiw	r26, 0x0f	; 15
     54c:	9c 91       	ld	r25, X
     54e:	1f 97       	sbiw	r26, 0x0f	; 15
     550:	8c 81       	ldd	r24, Y+4	; 0x04
     552:	89 2b       	or	r24, r25
     554:	1f 96       	adiw	r26, 0x0f	; 15
     556:	8c 93       	st	X, r24
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	08 95       	ret
     566:	e8 2f       	mov	r30, r24
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	ee 0f       	add	r30, r30
     56c:	ff 1f       	adc	r31, r31
     56e:	ee 0f       	add	r30, r30
     570:	ff 1f       	adc	r31, r31
     572:	e8 5b       	subi	r30, 0xB8	; 184
     574:	ff 4f       	sbci	r31, 0xFF	; 255
     576:	90 81       	ld	r25, Z
     578:	99 83       	std	Y+1, r25	; 0x01
     57a:	81 81       	ldd	r24, Z+1	; 0x01
     57c:	8a 83       	std	Y+2, r24	; 0x02
     57e:	82 81       	ldd	r24, Z+2	; 0x02
     580:	8b 83       	std	Y+3, r24	; 0x03
     582:	83 81       	ldd	r24, Z+3	; 0x03
     584:	8c 83       	std	Y+4, r24	; 0x04
     586:	b9 cf       	rjmp	.-142    	; 0x4fa <displayChar+0x24>

00000588 <writeChar>:
     588:	0f 93       	push	r16
     58a:	1f 93       	push	r17
     58c:	cf 93       	push	r28
     58e:	60 fd       	sbrc	r22, 0
     590:	1c c0       	rjmp	.+56     	; 0x5ca <writeChar+0x42>
     592:	77 fd       	sbrc	r23, 7
     594:	30 c0       	rjmp	.+96     	; 0x5f6 <writeChar+0x6e>
     596:	75 95       	asr	r23
     598:	67 95       	ror	r22
     59a:	ab 01       	movw	r20, r22
     59c:	44 51       	subi	r20, 0x14	; 20
     59e:	5f 4f       	sbci	r21, 0xFF	; 255
     5a0:	fa 01       	movw	r30, r20
     5a2:	90 81       	ld	r25, Z
     5a4:	90 79       	andi	r25, 0x90	; 144
     5a6:	90 83       	st	Z, r25
     5a8:	35 96       	adiw	r30, 0x05	; 5
     5aa:	9a 01       	movw	r18, r20
     5ac:	2c 5e       	subi	r18, 0xEC	; 236
     5ae:	3f 4f       	sbci	r19, 0xFF	; 255
     5b0:	90 81       	ld	r25, Z
     5b2:	90 7f       	andi	r25, 0xF0	; 240
     5b4:	90 83       	st	Z, r25
     5b6:	35 96       	adiw	r30, 0x05	; 5
     5b8:	e2 17       	cp	r30, r18
     5ba:	f3 07       	cpc	r31, r19
     5bc:	c9 f7       	brne	.-14     	; 0x5b0 <writeChar+0x28>
     5be:	60 e0       	ldi	r22, 0x00	; 0
     5c0:	cf 91       	pop	r28
     5c2:	1f 91       	pop	r17
     5c4:	0f 91       	pop	r16
     5c6:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <displayChar>
     5ca:	ab 01       	movw	r20, r22
     5cc:	41 50       	subi	r20, 0x01	; 1
     5ce:	51 09       	sbc	r21, r1
     5d0:	57 fd       	sbrc	r21, 7
     5d2:	14 c0       	rjmp	.+40     	; 0x5fc <writeChar+0x74>
     5d4:	c8 2f       	mov	r28, r24
     5d6:	55 95       	asr	r21
     5d8:	47 95       	ror	r20
     5da:	8a 01       	movw	r16, r20
     5dc:	04 51       	subi	r16, 0x14	; 20
     5de:	1f 4f       	sbci	r17, 0xFF	; 255
     5e0:	c8 01       	movw	r24, r16
     5e2:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <removeOldChar.part.0>
     5e6:	a8 01       	movw	r20, r16
     5e8:	61 e0       	ldi	r22, 0x01	; 1
     5ea:	8c 2f       	mov	r24, r28
     5ec:	cf 91       	pop	r28
     5ee:	1f 91       	pop	r17
     5f0:	0f 91       	pop	r16
     5f2:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <displayChar>
     5f6:	6f 5f       	subi	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	cd cf       	rjmp	.-102    	; 0x596 <writeChar+0xe>
     5fc:	ab 01       	movw	r20, r22
     5fe:	ea cf       	rjmp	.-44     	; 0x5d4 <writeChar+0x4c>

00000600 <printAt>:
}
 
// Displays last two digits of num in pos and pos+1
int  printAt(Lcd *self, int input) {  // [pos, num]
     600:	ef 92       	push	r14
     602:	ff 92       	push	r15
     604:	0f 93       	push	r16
     606:	1f 93       	push	r17
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
     60c:	cb 01       	movw	r24, r22
    int pp = input % 10;
     60e:	0a e0       	ldi	r16, 0x0A	; 10
     610:	10 e0       	ldi	r17, 0x00	; 0
     612:	b8 01       	movw	r22, r16
     614:	0e 94 51 10 	call	0x20a2	; 0x20a2 <__divmodhi4>
     618:	7b 01       	movw	r14, r22
     61a:	ec 01       	movw	r28, r24
    int num = input / 10;
    writeChar((num % 100) / 10 + '0', pp);
     61c:	cb 01       	movw	r24, r22
     61e:	64 e6       	ldi	r22, 0x64	; 100
     620:	70 e0       	ldi	r23, 0x00	; 0
     622:	0e 94 51 10 	call	0x20a2	; 0x20a2 <__divmodhi4>
     626:	b8 01       	movw	r22, r16
     628:	0e 94 51 10 	call	0x20a2	; 0x20a2 <__divmodhi4>
     62c:	86 2f       	mov	r24, r22
     62e:	be 01       	movw	r22, r28
     630:	80 5d       	subi	r24, 0xD0	; 208
     632:	0e 94 c4 02 	call	0x588	; 0x588 <writeChar>
    pp++;
    writeChar( num % 10 + '0', pp);
     636:	21 96       	adiw	r28, 0x01	; 1
     638:	c7 01       	movw	r24, r14
     63a:	b8 01       	movw	r22, r16
     63c:	0e 94 51 10 	call	0x20a2	; 0x20a2 <__divmodhi4>
     640:	be 01       	movw	r22, r28
     642:	80 5d       	subi	r24, 0xD0	; 208
     644:	0e 94 c4 02 	call	0x588	; 0x588 <writeChar>

    return 0;
     648:	80 e0       	ldi	r24, 0x00	; 0
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	df 91       	pop	r29
     64e:	cf 91       	pop	r28
     650:	1f 91       	pop	r17
     652:	0f 91       	pop	r16
     654:	ff 90       	pop	r15
     656:	ef 90       	pop	r14
     658:	08 95       	ret

0000065a <main>:
#include "Communication.h"
#include "Lcd.h"
#include "TinyTimber.h"
#include "InterruptHandler.h"

int main(void) {
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
     65e:	cd b7       	in	r28, 0x3d	; 61
     660:	de b7       	in	r29, 0x3e	; 62
     662:	a0 97       	sbiw	r28, 0x20	; 32
     664:	0f b6       	in	r0, 0x3f	; 63
     666:	f8 94       	cli
     668:	de bf       	out	0x3e, r29	; 62
     66a:	0f be       	out	0x3f, r0	; 63
     66c:	cd bf       	out	0x3d, r28	; 61
    Init();
     66e:	0e 94 20 02 	call	0x440	; 0x440 <Init>
	Lcd lcd = initLcd();
     672:	1e 8e       	std	Y+30, r1	; 0x1e
     674:	1d 8e       	std	Y+29, r1	; 0x1d
     676:	18 a2       	std	Y+32, r1	; 0x20
     678:	1f 8e       	std	Y+31, r1	; 0x1f
	Communication com = initCommunication();
     67a:	1a 8e       	std	Y+26, r1	; 0x1a
     67c:	19 8e       	std	Y+25, r1	; 0x19
     67e:	1c 8e       	std	Y+28, r1	; 0x1c
     680:	1b 8e       	std	Y+27, r1	; 0x1b
	Handler handler = initHandler(&com, &lcd);
     682:	1a 82       	std	Y+2, r1	; 0x02
     684:	19 82       	std	Y+1, r1	; 0x01
     686:	1c 82       	std	Y+4, r1	; 0x04
     688:	1b 82       	std	Y+3, r1	; 0x03
     68a:	ce 01       	movw	r24, r28
     68c:	49 96       	adiw	r24, 0x19	; 25
     68e:	9e 83       	std	Y+6, r25	; 0x06
     690:	8d 83       	std	Y+5, r24	; 0x05
     692:	04 96       	adiw	r24, 0x04	; 4
     694:	98 87       	std	Y+8, r25	; 0x08
     696:	8f 83       	std	Y+7, r24	; 0x07
     698:	81 e0       	ldi	r24, 0x01	; 1
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	9a 87       	std	Y+10, r25	; 0x0a
     69e:	89 87       	std	Y+9, r24	; 0x09
     6a0:	1c 86       	std	Y+12, r1	; 0x0c
     6a2:	1b 86       	std	Y+11, r1	; 0x0b
     6a4:	1e 86       	std	Y+14, r1	; 0x0e
     6a6:	1d 86       	std	Y+13, r1	; 0x0d
     6a8:	18 8a       	std	Y+16, r1	; 0x10
     6aa:	1f 86       	std	Y+15, r1	; 0x0f
     6ac:	1a 8a       	std	Y+18, r1	; 0x12
     6ae:	19 8a       	std	Y+17, r1	; 0x11
	InterruptHandler interruptHandler = initInterruptHandler(&handler);
     6b0:	1c 8a       	std	Y+20, r1	; 0x14
     6b2:	1b 8a       	std	Y+19, r1	; 0x13
     6b4:	1e 8a       	std	Y+22, r1	; 0x16
     6b6:	1d 8a       	std	Y+21, r1	; 0x15
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	98 8f       	std	Y+24, r25	; 0x18
     6be:	8f 8b       	std	Y+23, r24	; 0x17
	INSTALL(&interruptHandler, interrupter, IRQ_USART0_RX);
     6c0:	48 e0       	ldi	r20, 0x08	; 8
     6c2:	6a e3       	ldi	r22, 0x3A	; 58
     6c4:	72 e0       	ldi	r23, 0x02	; 2
     6c6:	42 96       	adiw	r24, 0x12	; 18
     6c8:	0e 94 1b 10 	call	0x2036	; 0x2036 <install>
	return tinytimber(NULL, NULL, NULL);
     6cc:	40 e0       	ldi	r20, 0x00	; 0
     6ce:	50 e0       	ldi	r21, 0x00	; 0
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	70 e0       	ldi	r23, 0x00	; 0
     6d4:	80 e0       	ldi	r24, 0x00	; 0
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	0e 94 35 10 	call	0x206a	; 0x206a <tinytimber>
}
     6dc:	a0 96       	adiw	r28, 0x20	; 32
     6de:	0f b6       	in	r0, 0x3f	; 63
     6e0:	f8 94       	cli
     6e2:	de bf       	out	0x3e, r29	; 62
     6e4:	0f be       	out	0x3f, r0	; 63
     6e6:	cd bf       	out	0x3d, r28	; 61
     6e8:	df 91       	pop	r29
     6ea:	cf 91       	pop	r28
     6ec:	08 95       	ret

000006ee <initialize>:
    char status;
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	00 d0       	rcall	.+0      	; 0x6f4 <initialize+0x6>
     6f4:	00 d0       	rcall	.+0      	; 0x6f6 <initialize+0x8>
     6f6:	cd b7       	in	r28, 0x3d	; 61
     6f8:	de b7       	in	r29, 0x3e	; 62
     6fa:	8b e2       	ldi	r24, 0x2B	; 43
     6fc:	92 e0       	ldi	r25, 0x02	; 2
     6fe:	2b e0       	ldi	r18, 0x0B	; 11
     700:	33 e0       	ldi	r19, 0x03	; 3
     702:	fc 01       	movw	r30, r24
     704:	70 97       	sbiw	r30, 0x10	; 16
     706:	91 83       	std	Z+1, r25	; 0x01
     708:	80 83       	st	Z, r24
     70a:	40 96       	adiw	r24, 0x10	; 16
     70c:	82 17       	cp	r24, r18
     70e:	93 07       	cpc	r25, r19
     710:	c1 f7       	brne	.-16     	; 0x702 <initialize+0x14>
     712:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     716:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     71a:	e6 e6       	ldi	r30, 0x66	; 102
     71c:	f1 e0       	ldi	r31, 0x01	; 1
     71e:	83 e8       	ldi	r24, 0x83	; 131
     720:	91 e0       	ldi	r25, 0x01	; 1
     722:	91 83       	std	Z+1, r25	; 0x01
     724:	80 83       	st	Z, r24
     726:	80 ea       	ldi	r24, 0xA0	; 160
     728:	91 e0       	ldi	r25, 0x01	; 1
     72a:	96 8f       	std	Z+30, r25	; 0x1e
     72c:	85 8f       	std	Z+29, r24	; 0x1d
     72e:	ad eb       	ldi	r26, 0xBD	; 189
     730:	b1 e0       	ldi	r27, 0x01	; 1
     732:	b3 af       	std	Z+59, r27	; 0x3b
     734:	a2 af       	std	Z+58, r26	; 0x3a
     736:	1d 92       	st	X+, r1
     738:	1c 92       	st	X, r1
     73a:	fa 83       	std	Y+2, r31	; 0x02
     73c:	e9 83       	std	Y+1, r30	; 0x01
     73e:	e7 e6       	ldi	r30, 0x67	; 103
     740:	f3 e0       	ldi	r31, 0x03	; 3
     742:	fc 83       	std	Y+4, r31	; 0x04
     744:	eb 83       	std	Y+3, r30	; 0x03
     746:	89 81       	ldd	r24, Y+1	; 0x01
     748:	9a 81       	ldd	r25, Y+2	; 0x02
     74a:	06 96       	adiw	r24, 0x06	; 6
     74c:	0e 94 79 10 	call	0x20f2	; 0x20f2 <setjmp>
     750:	8b 81       	ldd	r24, Y+3	; 0x03
     752:	9c 81       	ldd	r25, Y+4	; 0x04
     754:	e9 81       	ldd	r30, Y+1	; 0x01
     756:	fa 81       	ldd	r31, Y+2	; 0x02
     758:	97 8b       	std	Z+23, r25	; 0x17
     75a:	86 8b       	std	Z+22, r24	; 0x16
     75c:	91 8f       	std	Z+25, r25	; 0x19
     75e:	80 8f       	std	Z+24, r24	; 0x18
     760:	8a e1       	ldi	r24, 0x1A	; 26
     762:	9f e0       	ldi	r25, 0x0F	; 15
     764:	94 8f       	std	Z+28, r25	; 0x1c
     766:	83 8f       	std	Z+27, r24	; 0x1b
     768:	15 82       	std	Z+5, r1	; 0x05
     76a:	14 82       	std	Z+4, r1	; 0x04
     76c:	7d 96       	adiw	r30, 0x1d	; 29
     76e:	fa 83       	std	Y+2, r31	; 0x02
     770:	e9 83       	std	Y+1, r30	; 0x01
     772:	eb 81       	ldd	r30, Y+3	; 0x03
     774:	fc 81       	ldd	r31, Y+4	; 0x04
     776:	e0 5a       	subi	r30, 0xA0	; 160
     778:	ff 4f       	sbci	r31, 0xFF	; 255
     77a:	fc 83       	std	Y+4, r31	; 0x04
     77c:	eb 83       	std	Y+3, r30	; 0x03
     77e:	89 81       	ldd	r24, Y+1	; 0x01
     780:	9a 81       	ldd	r25, Y+2	; 0x02
     782:	8a 5d       	subi	r24, 0xDA	; 218
     784:	91 40       	sbci	r25, 0x01	; 1
     786:	f9 f6       	brne	.-66     	; 0x746 <initialize+0x58>
     788:	ee ef       	ldi	r30, 0xFE	; 254
     78a:	f1 e0       	ldi	r31, 0x01	; 1
     78c:	11 82       	std	Z+1, r1	; 0x01
     78e:	10 82       	st	Z, r1
     790:	15 82       	std	Z+5, r1	; 0x05
     792:	14 82       	std	Z+4, r1	; 0x04
     794:	13 82       	std	Z+3, r1	; 0x03
     796:	12 82       	std	Z+2, r1	; 0x02
     798:	e1 e6       	ldi	r30, 0x61	; 97
     79a:	f0 e0       	ldi	r31, 0x00	; 0
     79c:	80 e8       	ldi	r24, 0x80	; 128
     79e:	80 83       	st	Z, r24
     7a0:	10 82       	st	Z, r1
     7a2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     7a6:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     7aa:	84 e0       	ldi	r24, 0x04	; 4
     7ac:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     7b0:	81 e0       	ldi	r24, 0x01	; 1
     7b2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     7b6:	0f 90       	pop	r0
     7b8:	0f 90       	pop	r0
     7ba:	0f 90       	pop	r0
     7bc:	0f 90       	pop	r0
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	08 95       	ret

000007c4 <dispatch>:
     7c4:	cf 93       	push	r28
     7c6:	df 93       	push	r29
     7c8:	00 d0       	rcall	.+0      	; 0x7ca <dispatch+0x6>
     7ca:	cd b7       	in	r28, 0x3d	; 61
     7cc:	de b7       	in	r29, 0x3e	; 62
     7ce:	9a 83       	std	Y+2, r25	; 0x02
     7d0:	89 83       	std	Y+1, r24	; 0x01
     7d2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7d6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7da:	06 96       	adiw	r24, 0x06	; 6
     7dc:	0e 94 79 10 	call	0x20f2	; 0x20f2 <setjmp>
     7e0:	89 2b       	or	r24, r25
     7e2:	29 f0       	breq	.+10     	; 0x7ee <dispatch+0x2a>
     7e4:	0f 90       	pop	r0
     7e6:	0f 90       	pop	r0
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	08 95       	ret
     7ee:	89 81       	ldd	r24, Y+1	; 0x01
     7f0:	9a 81       	ldd	r25, Y+2	; 0x02
     7f2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7f6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     7fa:	61 e0       	ldi	r22, 0x01	; 1
     7fc:	70 e0       	ldi	r23, 0x00	; 0
     7fe:	06 96       	adiw	r24, 0x06	; 6
     800:	0e 94 99 10 	call	0x2132	; 0x2132 <longjmp>

00000804 <schedule>:
     804:	0f 93       	push	r16
     806:	1f 93       	push	r17
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <msgQ>
     810:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <msgQ+0x1>
     814:	30 97       	sbiw	r30, 0x00	; 0
     816:	f1 f0       	breq	.+60     	; 0x854 <schedule+0x50>
     818:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     81c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     820:	00 97       	sbiw	r24, 0x00	; 0
     822:	c1 f0       	breq	.+48     	; 0x854 <schedule+0x50>
     824:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     828:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     82c:	aa 81       	ldd	r26, Y+2	; 0x02
     82e:	bb 81       	ldd	r27, Y+3	; 0x03
     830:	10 97       	sbiw	r26, 0x00	; 0
     832:	a9 f0       	breq	.+42     	; 0x85e <schedule+0x5a>
     834:	46 81       	ldd	r20, Z+6	; 0x06
     836:	57 81       	ldd	r21, Z+7	; 0x07
     838:	60 85       	ldd	r22, Z+8	; 0x08
     83a:	71 85       	ldd	r23, Z+9	; 0x09
     83c:	16 96       	adiw	r26, 0x06	; 6
     83e:	0d 91       	ld	r16, X+
     840:	1d 91       	ld	r17, X+
     842:	2d 91       	ld	r18, X+
     844:	3c 91       	ld	r19, X
     846:	19 97       	sbiw	r26, 0x09	; 9
     848:	40 1b       	sub	r20, r16
     84a:	51 0b       	sbc	r21, r17
     84c:	62 0b       	sbc	r22, r18
     84e:	73 0b       	sbc	r23, r19
     850:	77 fd       	sbrc	r23, 7
     852:	05 c0       	rjmp	.+10     	; 0x85e <schedule+0x5a>
     854:	df 91       	pop	r29
     856:	cf 91       	pop	r28
     858:	1f 91       	pop	r17
     85a:	0f 91       	pop	r16
     85c:	08 95       	ret
     85e:	fc 01       	movw	r30, r24
     860:	20 81       	ld	r18, Z
     862:	31 81       	ldd	r19, Z+1	; 0x01
     864:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     868:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     86c:	d1 83       	std	Z+1, r29	; 0x01
     86e:	c0 83       	st	Z, r28
     870:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     874:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     878:	df 91       	pop	r29
     87a:	cf 91       	pop	r28
     87c:	1f 91       	pop	r17
     87e:	0f 91       	pop	r16
     880:	0c 94 e2 03 	jmp	0x7c4	; 0x7c4 <dispatch>

00000884 <dequeue.part.0>:
     884:	8f ef       	ldi	r24, 0xFF	; 255
     886:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     88a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     88e:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     892:	81 e0       	ldi	r24, 0x01	; 1
     894:	83 bf       	out	0x33, r24	; 51
     896:	88 95       	sleep
     898:	fd cf       	rjmp	.-6      	; 0x894 <dequeue.part.0+0x10>

0000089a <__vector_1>:
     89a:	1f 92       	push	r1
     89c:	0f 92       	push	r0
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	0f 92       	push	r0
     8a2:	11 24       	eor	r1, r1
     8a4:	2f 93       	push	r18
     8a6:	3f 93       	push	r19
     8a8:	4f 93       	push	r20
     8aa:	5f 93       	push	r21
     8ac:	6f 93       	push	r22
     8ae:	7f 93       	push	r23
     8b0:	8f 93       	push	r24
     8b2:	9f 93       	push	r25
     8b4:	af 93       	push	r26
     8b6:	bf 93       	push	r27
     8b8:	ef 93       	push	r30
     8ba:	ff 93       	push	r31
     8bc:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     8c0:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     8c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8cc:	c9 01       	movw	r24, r18
     8ce:	03 2e       	mov	r0, r19
     8d0:	00 0c       	add	r0, r0
     8d2:	aa 0b       	sbc	r26, r26
     8d4:	bb 0b       	sbc	r27, r27
     8d6:	dc 01       	movw	r26, r24
     8d8:	99 27       	eor	r25, r25
     8da:	88 27       	eor	r24, r24
     8dc:	60 e0       	ldi	r22, 0x00	; 0
     8de:	70 e0       	ldi	r23, 0x00	; 0
     8e0:	84 2b       	or	r24, r20
     8e2:	95 2b       	or	r25, r21
     8e4:	a6 2b       	or	r26, r22
     8e6:	b7 2b       	or	r27, r23
     8e8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     8ec:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     8f0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     8f4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     8f8:	b0 9b       	sbis	0x16, 0	; 22
     8fa:	1b c0       	rjmp	.+54     	; 0x932 <__vector_1+0x98>
     8fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     900:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     904:	c9 01       	movw	r24, r18
     906:	01 96       	adiw	r24, 0x01	; 1
     908:	09 2e       	mov	r0, r25
     90a:	00 0c       	add	r0, r0
     90c:	aa 0b       	sbc	r26, r26
     90e:	bb 0b       	sbc	r27, r27
     910:	dc 01       	movw	r26, r24
     912:	99 27       	eor	r25, r25
     914:	88 27       	eor	r24, r24
     916:	60 e0       	ldi	r22, 0x00	; 0
     918:	70 e0       	ldi	r23, 0x00	; 0
     91a:	84 2b       	or	r24, r20
     91c:	95 2b       	or	r25, r21
     91e:	a6 2b       	or	r26, r22
     920:	b7 2b       	or	r27, r23
     922:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     926:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     92a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     92e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     932:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     936:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     93a:	30 97       	sbiw	r30, 0x00	; 0
     93c:	39 f0       	breq	.+14     	; 0x94c <__vector_1+0xb2>
     93e:	60 e0       	ldi	r22, 0x00	; 0
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     946:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     94a:	09 95       	icall
     94c:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
     950:	ff 91       	pop	r31
     952:	ef 91       	pop	r30
     954:	bf 91       	pop	r27
     956:	af 91       	pop	r26
     958:	9f 91       	pop	r25
     95a:	8f 91       	pop	r24
     95c:	7f 91       	pop	r23
     95e:	6f 91       	pop	r22
     960:	5f 91       	pop	r21
     962:	4f 91       	pop	r20
     964:	3f 91       	pop	r19
     966:	2f 91       	pop	r18
     968:	0f 90       	pop	r0
     96a:	0f be       	out	0x3f, r0	; 63
     96c:	0f 90       	pop	r0
     96e:	1f 90       	pop	r1
     970:	18 95       	reti

00000972 <__vector_2>:
     972:	1f 92       	push	r1
     974:	0f 92       	push	r0
     976:	0f b6       	in	r0, 0x3f	; 63
     978:	0f 92       	push	r0
     97a:	11 24       	eor	r1, r1
     97c:	2f 93       	push	r18
     97e:	3f 93       	push	r19
     980:	4f 93       	push	r20
     982:	5f 93       	push	r21
     984:	6f 93       	push	r22
     986:	7f 93       	push	r23
     988:	8f 93       	push	r24
     98a:	9f 93       	push	r25
     98c:	af 93       	push	r26
     98e:	bf 93       	push	r27
     990:	ef 93       	push	r30
     992:	ff 93       	push	r31
     994:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     998:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     99c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9a4:	c9 01       	movw	r24, r18
     9a6:	03 2e       	mov	r0, r19
     9a8:	00 0c       	add	r0, r0
     9aa:	aa 0b       	sbc	r26, r26
     9ac:	bb 0b       	sbc	r27, r27
     9ae:	dc 01       	movw	r26, r24
     9b0:	99 27       	eor	r25, r25
     9b2:	88 27       	eor	r24, r24
     9b4:	60 e0       	ldi	r22, 0x00	; 0
     9b6:	70 e0       	ldi	r23, 0x00	; 0
     9b8:	84 2b       	or	r24, r20
     9ba:	95 2b       	or	r25, r21
     9bc:	a6 2b       	or	r26, r22
     9be:	b7 2b       	or	r27, r23
     9c0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     9c4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     9c8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     9cc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     9d0:	b0 9b       	sbis	0x16, 0	; 22
     9d2:	1b c0       	rjmp	.+54     	; 0xa0a <__vector_2+0x98>
     9d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9dc:	c9 01       	movw	r24, r18
     9de:	01 96       	adiw	r24, 0x01	; 1
     9e0:	09 2e       	mov	r0, r25
     9e2:	00 0c       	add	r0, r0
     9e4:	aa 0b       	sbc	r26, r26
     9e6:	bb 0b       	sbc	r27, r27
     9e8:	dc 01       	movw	r26, r24
     9ea:	99 27       	eor	r25, r25
     9ec:	88 27       	eor	r24, r24
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	70 e0       	ldi	r23, 0x00	; 0
     9f2:	84 2b       	or	r24, r20
     9f4:	95 2b       	or	r25, r21
     9f6:	a6 2b       	or	r26, r22
     9f8:	b7 2b       	or	r27, r23
     9fa:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     9fe:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     a02:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     a06:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     a0a:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     a0e:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     a12:	30 97       	sbiw	r30, 0x00	; 0
     a14:	39 f0       	breq	.+14     	; 0xa24 <__vector_2+0xb2>
     a16:	61 e0       	ldi	r22, 0x01	; 1
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     a1e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     a22:	09 95       	icall
     a24:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
     a28:	ff 91       	pop	r31
     a2a:	ef 91       	pop	r30
     a2c:	bf 91       	pop	r27
     a2e:	af 91       	pop	r26
     a30:	9f 91       	pop	r25
     a32:	8f 91       	pop	r24
     a34:	7f 91       	pop	r23
     a36:	6f 91       	pop	r22
     a38:	5f 91       	pop	r21
     a3a:	4f 91       	pop	r20
     a3c:	3f 91       	pop	r19
     a3e:	2f 91       	pop	r18
     a40:	0f 90       	pop	r0
     a42:	0f be       	out	0x3f, r0	; 63
     a44:	0f 90       	pop	r0
     a46:	1f 90       	pop	r1
     a48:	18 95       	reti

00000a4a <__vector_3>:
     a4a:	1f 92       	push	r1
     a4c:	0f 92       	push	r0
     a4e:	0f b6       	in	r0, 0x3f	; 63
     a50:	0f 92       	push	r0
     a52:	11 24       	eor	r1, r1
     a54:	2f 93       	push	r18
     a56:	3f 93       	push	r19
     a58:	4f 93       	push	r20
     a5a:	5f 93       	push	r21
     a5c:	6f 93       	push	r22
     a5e:	7f 93       	push	r23
     a60:	8f 93       	push	r24
     a62:	9f 93       	push	r25
     a64:	af 93       	push	r26
     a66:	bf 93       	push	r27
     a68:	ef 93       	push	r30
     a6a:	ff 93       	push	r31
     a6c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     a70:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     a74:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a78:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a7c:	c9 01       	movw	r24, r18
     a7e:	03 2e       	mov	r0, r19
     a80:	00 0c       	add	r0, r0
     a82:	aa 0b       	sbc	r26, r26
     a84:	bb 0b       	sbc	r27, r27
     a86:	dc 01       	movw	r26, r24
     a88:	99 27       	eor	r25, r25
     a8a:	88 27       	eor	r24, r24
     a8c:	60 e0       	ldi	r22, 0x00	; 0
     a8e:	70 e0       	ldi	r23, 0x00	; 0
     a90:	84 2b       	or	r24, r20
     a92:	95 2b       	or	r25, r21
     a94:	a6 2b       	or	r26, r22
     a96:	b7 2b       	or	r27, r23
     a98:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     a9c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     aa0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     aa4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     aa8:	b0 9b       	sbis	0x16, 0	; 22
     aaa:	1b c0       	rjmp	.+54     	; 0xae2 <__vector_3+0x98>
     aac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ab0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ab4:	c9 01       	movw	r24, r18
     ab6:	01 96       	adiw	r24, 0x01	; 1
     ab8:	09 2e       	mov	r0, r25
     aba:	00 0c       	add	r0, r0
     abc:	aa 0b       	sbc	r26, r26
     abe:	bb 0b       	sbc	r27, r27
     ac0:	dc 01       	movw	r26, r24
     ac2:	99 27       	eor	r25, r25
     ac4:	88 27       	eor	r24, r24
     ac6:	60 e0       	ldi	r22, 0x00	; 0
     ac8:	70 e0       	ldi	r23, 0x00	; 0
     aca:	84 2b       	or	r24, r20
     acc:	95 2b       	or	r25, r21
     ace:	a6 2b       	or	r26, r22
     ad0:	b7 2b       	or	r27, r23
     ad2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     ad6:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     ada:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     ade:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     ae2:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     ae6:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     aea:	30 97       	sbiw	r30, 0x00	; 0
     aec:	39 f0       	breq	.+14     	; 0xafc <__vector_3+0xb2>
     aee:	62 e0       	ldi	r22, 0x02	; 2
     af0:	70 e0       	ldi	r23, 0x00	; 0
     af2:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     af6:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     afa:	09 95       	icall
     afc:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
     b00:	ff 91       	pop	r31
     b02:	ef 91       	pop	r30
     b04:	bf 91       	pop	r27
     b06:	af 91       	pop	r26
     b08:	9f 91       	pop	r25
     b0a:	8f 91       	pop	r24
     b0c:	7f 91       	pop	r23
     b0e:	6f 91       	pop	r22
     b10:	5f 91       	pop	r21
     b12:	4f 91       	pop	r20
     b14:	3f 91       	pop	r19
     b16:	2f 91       	pop	r18
     b18:	0f 90       	pop	r0
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	0f 90       	pop	r0
     b1e:	1f 90       	pop	r1
     b20:	18 95       	reti

00000b22 <__vector_4>:
     b22:	1f 92       	push	r1
     b24:	0f 92       	push	r0
     b26:	0f b6       	in	r0, 0x3f	; 63
     b28:	0f 92       	push	r0
     b2a:	11 24       	eor	r1, r1
     b2c:	2f 93       	push	r18
     b2e:	3f 93       	push	r19
     b30:	4f 93       	push	r20
     b32:	5f 93       	push	r21
     b34:	6f 93       	push	r22
     b36:	7f 93       	push	r23
     b38:	8f 93       	push	r24
     b3a:	9f 93       	push	r25
     b3c:	af 93       	push	r26
     b3e:	bf 93       	push	r27
     b40:	ef 93       	push	r30
     b42:	ff 93       	push	r31
     b44:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     b48:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     b4c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b50:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b54:	c9 01       	movw	r24, r18
     b56:	03 2e       	mov	r0, r19
     b58:	00 0c       	add	r0, r0
     b5a:	aa 0b       	sbc	r26, r26
     b5c:	bb 0b       	sbc	r27, r27
     b5e:	dc 01       	movw	r26, r24
     b60:	99 27       	eor	r25, r25
     b62:	88 27       	eor	r24, r24
     b64:	60 e0       	ldi	r22, 0x00	; 0
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	84 2b       	or	r24, r20
     b6a:	95 2b       	or	r25, r21
     b6c:	a6 2b       	or	r26, r22
     b6e:	b7 2b       	or	r27, r23
     b70:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     b74:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     b78:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     b7c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     b80:	b0 9b       	sbis	0x16, 0	; 22
     b82:	1b c0       	rjmp	.+54     	; 0xbba <__vector_4+0x98>
     b84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b8c:	c9 01       	movw	r24, r18
     b8e:	01 96       	adiw	r24, 0x01	; 1
     b90:	09 2e       	mov	r0, r25
     b92:	00 0c       	add	r0, r0
     b94:	aa 0b       	sbc	r26, r26
     b96:	bb 0b       	sbc	r27, r27
     b98:	dc 01       	movw	r26, r24
     b9a:	99 27       	eor	r25, r25
     b9c:	88 27       	eor	r24, r24
     b9e:	60 e0       	ldi	r22, 0x00	; 0
     ba0:	70 e0       	ldi	r23, 0x00	; 0
     ba2:	84 2b       	or	r24, r20
     ba4:	95 2b       	or	r25, r21
     ba6:	a6 2b       	or	r26, r22
     ba8:	b7 2b       	or	r27, r23
     baa:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     bae:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     bb2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     bb6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     bba:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     bbe:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     bc2:	30 97       	sbiw	r30, 0x00	; 0
     bc4:	39 f0       	breq	.+14     	; 0xbd4 <__vector_4+0xb2>
     bc6:	63 e0       	ldi	r22, 0x03	; 3
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     bce:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     bd2:	09 95       	icall
     bd4:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
     bd8:	ff 91       	pop	r31
     bda:	ef 91       	pop	r30
     bdc:	bf 91       	pop	r27
     bde:	af 91       	pop	r26
     be0:	9f 91       	pop	r25
     be2:	8f 91       	pop	r24
     be4:	7f 91       	pop	r23
     be6:	6f 91       	pop	r22
     be8:	5f 91       	pop	r21
     bea:	4f 91       	pop	r20
     bec:	3f 91       	pop	r19
     bee:	2f 91       	pop	r18
     bf0:	0f 90       	pop	r0
     bf2:	0f be       	out	0x3f, r0	; 63
     bf4:	0f 90       	pop	r0
     bf6:	1f 90       	pop	r1
     bf8:	18 95       	reti

00000bfa <__vector_5>:
     bfa:	1f 92       	push	r1
     bfc:	0f 92       	push	r0
     bfe:	0f b6       	in	r0, 0x3f	; 63
     c00:	0f 92       	push	r0
     c02:	11 24       	eor	r1, r1
     c04:	2f 93       	push	r18
     c06:	3f 93       	push	r19
     c08:	4f 93       	push	r20
     c0a:	5f 93       	push	r21
     c0c:	6f 93       	push	r22
     c0e:	7f 93       	push	r23
     c10:	8f 93       	push	r24
     c12:	9f 93       	push	r25
     c14:	af 93       	push	r26
     c16:	bf 93       	push	r27
     c18:	ef 93       	push	r30
     c1a:	ff 93       	push	r31
     c1c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     c20:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     c24:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c28:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c2c:	c9 01       	movw	r24, r18
     c2e:	03 2e       	mov	r0, r19
     c30:	00 0c       	add	r0, r0
     c32:	aa 0b       	sbc	r26, r26
     c34:	bb 0b       	sbc	r27, r27
     c36:	dc 01       	movw	r26, r24
     c38:	99 27       	eor	r25, r25
     c3a:	88 27       	eor	r24, r24
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	70 e0       	ldi	r23, 0x00	; 0
     c40:	84 2b       	or	r24, r20
     c42:	95 2b       	or	r25, r21
     c44:	a6 2b       	or	r26, r22
     c46:	b7 2b       	or	r27, r23
     c48:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     c4c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     c50:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     c54:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     c58:	b0 9b       	sbis	0x16, 0	; 22
     c5a:	1b c0       	rjmp	.+54     	; 0xc92 <__vector_5+0x98>
     c5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c64:	c9 01       	movw	r24, r18
     c66:	01 96       	adiw	r24, 0x01	; 1
     c68:	09 2e       	mov	r0, r25
     c6a:	00 0c       	add	r0, r0
     c6c:	aa 0b       	sbc	r26, r26
     c6e:	bb 0b       	sbc	r27, r27
     c70:	dc 01       	movw	r26, r24
     c72:	99 27       	eor	r25, r25
     c74:	88 27       	eor	r24, r24
     c76:	60 e0       	ldi	r22, 0x00	; 0
     c78:	70 e0       	ldi	r23, 0x00	; 0
     c7a:	84 2b       	or	r24, r20
     c7c:	95 2b       	or	r25, r21
     c7e:	a6 2b       	or	r26, r22
     c80:	b7 2b       	or	r27, r23
     c82:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     c86:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     c8a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     c8e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     c92:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
     c96:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
     c9a:	30 97       	sbiw	r30, 0x00	; 0
     c9c:	39 f0       	breq	.+14     	; 0xcac <__vector_5+0xb2>
     c9e:	64 e0       	ldi	r22, 0x04	; 4
     ca0:	70 e0       	ldi	r23, 0x00	; 0
     ca2:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
     ca6:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
     caa:	09 95       	icall
     cac:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
     cb0:	ff 91       	pop	r31
     cb2:	ef 91       	pop	r30
     cb4:	bf 91       	pop	r27
     cb6:	af 91       	pop	r26
     cb8:	9f 91       	pop	r25
     cba:	8f 91       	pop	r24
     cbc:	7f 91       	pop	r23
     cbe:	6f 91       	pop	r22
     cc0:	5f 91       	pop	r21
     cc2:	4f 91       	pop	r20
     cc4:	3f 91       	pop	r19
     cc6:	2f 91       	pop	r18
     cc8:	0f 90       	pop	r0
     cca:	0f be       	out	0x3f, r0	; 63
     ccc:	0f 90       	pop	r0
     cce:	1f 90       	pop	r1
     cd0:	18 95       	reti

00000cd2 <__vector_10>:
     cd2:	1f 92       	push	r1
     cd4:	0f 92       	push	r0
     cd6:	0f b6       	in	r0, 0x3f	; 63
     cd8:	0f 92       	push	r0
     cda:	11 24       	eor	r1, r1
     cdc:	2f 93       	push	r18
     cde:	3f 93       	push	r19
     ce0:	4f 93       	push	r20
     ce2:	5f 93       	push	r21
     ce4:	6f 93       	push	r22
     ce6:	7f 93       	push	r23
     ce8:	8f 93       	push	r24
     cea:	9f 93       	push	r25
     cec:	af 93       	push	r26
     cee:	bf 93       	push	r27
     cf0:	ef 93       	push	r30
     cf2:	ff 93       	push	r31
     cf4:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     cf8:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     cfc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d00:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d04:	c9 01       	movw	r24, r18
     d06:	03 2e       	mov	r0, r19
     d08:	00 0c       	add	r0, r0
     d0a:	aa 0b       	sbc	r26, r26
     d0c:	bb 0b       	sbc	r27, r27
     d0e:	dc 01       	movw	r26, r24
     d10:	99 27       	eor	r25, r25
     d12:	88 27       	eor	r24, r24
     d14:	60 e0       	ldi	r22, 0x00	; 0
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	84 2b       	or	r24, r20
     d1a:	95 2b       	or	r25, r21
     d1c:	a6 2b       	or	r26, r22
     d1e:	b7 2b       	or	r27, r23
     d20:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     d24:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     d28:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     d2c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     d30:	b0 9b       	sbis	0x16, 0	; 22
     d32:	1b c0       	rjmp	.+54     	; 0xd6a <__vector_10+0x98>
     d34:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d38:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d3c:	c9 01       	movw	r24, r18
     d3e:	01 96       	adiw	r24, 0x01	; 1
     d40:	09 2e       	mov	r0, r25
     d42:	00 0c       	add	r0, r0
     d44:	aa 0b       	sbc	r26, r26
     d46:	bb 0b       	sbc	r27, r27
     d48:	dc 01       	movw	r26, r24
     d4a:	99 27       	eor	r25, r25
     d4c:	88 27       	eor	r24, r24
     d4e:	60 e0       	ldi	r22, 0x00	; 0
     d50:	70 e0       	ldi	r23, 0x00	; 0
     d52:	84 2b       	or	r24, r20
     d54:	95 2b       	or	r25, r21
     d56:	a6 2b       	or	r26, r22
     d58:	b7 2b       	or	r27, r23
     d5a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     d5e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     d62:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     d66:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     d6a:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
     d6e:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
     d72:	30 97       	sbiw	r30, 0x00	; 0
     d74:	39 f0       	breq	.+14     	; 0xd84 <__vector_10+0xb2>
     d76:	65 e0       	ldi	r22, 0x05	; 5
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
     d7e:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
     d82:	09 95       	icall
     d84:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
     d88:	ff 91       	pop	r31
     d8a:	ef 91       	pop	r30
     d8c:	bf 91       	pop	r27
     d8e:	af 91       	pop	r26
     d90:	9f 91       	pop	r25
     d92:	8f 91       	pop	r24
     d94:	7f 91       	pop	r23
     d96:	6f 91       	pop	r22
     d98:	5f 91       	pop	r21
     d9a:	4f 91       	pop	r20
     d9c:	3f 91       	pop	r19
     d9e:	2f 91       	pop	r18
     da0:	0f 90       	pop	r0
     da2:	0f be       	out	0x3f, r0	; 63
     da4:	0f 90       	pop	r0
     da6:	1f 90       	pop	r1
     da8:	18 95       	reti

00000daa <__vector_11>:
     daa:	1f 92       	push	r1
     dac:	0f 92       	push	r0
     dae:	0f b6       	in	r0, 0x3f	; 63
     db0:	0f 92       	push	r0
     db2:	11 24       	eor	r1, r1
     db4:	2f 93       	push	r18
     db6:	3f 93       	push	r19
     db8:	4f 93       	push	r20
     dba:	5f 93       	push	r21
     dbc:	6f 93       	push	r22
     dbe:	7f 93       	push	r23
     dc0:	8f 93       	push	r24
     dc2:	9f 93       	push	r25
     dc4:	af 93       	push	r26
     dc6:	bf 93       	push	r27
     dc8:	ef 93       	push	r30
     dca:	ff 93       	push	r31
     dcc:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     dd0:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     dd4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dd8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ddc:	c9 01       	movw	r24, r18
     dde:	03 2e       	mov	r0, r19
     de0:	00 0c       	add	r0, r0
     de2:	aa 0b       	sbc	r26, r26
     de4:	bb 0b       	sbc	r27, r27
     de6:	dc 01       	movw	r26, r24
     de8:	99 27       	eor	r25, r25
     dea:	88 27       	eor	r24, r24
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	84 2b       	or	r24, r20
     df2:	95 2b       	or	r25, r21
     df4:	a6 2b       	or	r26, r22
     df6:	b7 2b       	or	r27, r23
     df8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     dfc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e00:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e04:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e08:	b0 9b       	sbis	0x16, 0	; 22
     e0a:	1b c0       	rjmp	.+54     	; 0xe42 <__vector_11+0x98>
     e0c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e10:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e14:	c9 01       	movw	r24, r18
     e16:	01 96       	adiw	r24, 0x01	; 1
     e18:	09 2e       	mov	r0, r25
     e1a:	00 0c       	add	r0, r0
     e1c:	aa 0b       	sbc	r26, r26
     e1e:	bb 0b       	sbc	r27, r27
     e20:	dc 01       	movw	r26, r24
     e22:	99 27       	eor	r25, r25
     e24:	88 27       	eor	r24, r24
     e26:	60 e0       	ldi	r22, 0x00	; 0
     e28:	70 e0       	ldi	r23, 0x00	; 0
     e2a:	84 2b       	or	r24, r20
     e2c:	95 2b       	or	r25, r21
     e2e:	a6 2b       	or	r26, r22
     e30:	b7 2b       	or	r27, r23
     e32:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e36:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e3a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e3e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e42:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
     e46:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
     e4a:	30 97       	sbiw	r30, 0x00	; 0
     e4c:	39 f0       	breq	.+14     	; 0xe5c <__vector_11+0xb2>
     e4e:	66 e0       	ldi	r22, 0x06	; 6
     e50:	70 e0       	ldi	r23, 0x00	; 0
     e52:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
     e56:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
     e5a:	09 95       	icall
     e5c:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
     e60:	ff 91       	pop	r31
     e62:	ef 91       	pop	r30
     e64:	bf 91       	pop	r27
     e66:	af 91       	pop	r26
     e68:	9f 91       	pop	r25
     e6a:	8f 91       	pop	r24
     e6c:	7f 91       	pop	r23
     e6e:	6f 91       	pop	r22
     e70:	5f 91       	pop	r21
     e72:	4f 91       	pop	r20
     e74:	3f 91       	pop	r19
     e76:	2f 91       	pop	r18
     e78:	0f 90       	pop	r0
     e7a:	0f be       	out	0x3f, r0	; 63
     e7c:	0f 90       	pop	r0
     e7e:	1f 90       	pop	r1
     e80:	18 95       	reti

00000e82 <__vector_12>:
     e82:	1f 92       	push	r1
     e84:	0f 92       	push	r0
     e86:	0f b6       	in	r0, 0x3f	; 63
     e88:	0f 92       	push	r0
     e8a:	11 24       	eor	r1, r1
     e8c:	2f 93       	push	r18
     e8e:	3f 93       	push	r19
     e90:	4f 93       	push	r20
     e92:	5f 93       	push	r21
     e94:	6f 93       	push	r22
     e96:	7f 93       	push	r23
     e98:	8f 93       	push	r24
     e9a:	9f 93       	push	r25
     e9c:	af 93       	push	r26
     e9e:	bf 93       	push	r27
     ea0:	ef 93       	push	r30
     ea2:	ff 93       	push	r31
     ea4:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     ea8:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     eac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eb0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eb4:	c9 01       	movw	r24, r18
     eb6:	03 2e       	mov	r0, r19
     eb8:	00 0c       	add	r0, r0
     eba:	aa 0b       	sbc	r26, r26
     ebc:	bb 0b       	sbc	r27, r27
     ebe:	dc 01       	movw	r26, r24
     ec0:	99 27       	eor	r25, r25
     ec2:	88 27       	eor	r24, r24
     ec4:	60 e0       	ldi	r22, 0x00	; 0
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	84 2b       	or	r24, r20
     eca:	95 2b       	or	r25, r21
     ecc:	a6 2b       	or	r26, r22
     ece:	b7 2b       	or	r27, r23
     ed0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     ed4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     ed8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     edc:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     ee0:	b0 9b       	sbis	0x16, 0	; 22
     ee2:	1b c0       	rjmp	.+54     	; 0xf1a <__vector_12+0x98>
     ee4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ee8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eec:	c9 01       	movw	r24, r18
     eee:	01 96       	adiw	r24, 0x01	; 1
     ef0:	09 2e       	mov	r0, r25
     ef2:	00 0c       	add	r0, r0
     ef4:	aa 0b       	sbc	r26, r26
     ef6:	bb 0b       	sbc	r27, r27
     ef8:	dc 01       	movw	r26, r24
     efa:	99 27       	eor	r25, r25
     efc:	88 27       	eor	r24, r24
     efe:	60 e0       	ldi	r22, 0x00	; 0
     f00:	70 e0       	ldi	r23, 0x00	; 0
     f02:	84 2b       	or	r24, r20
     f04:	95 2b       	or	r25, r21
     f06:	a6 2b       	or	r26, r22
     f08:	b7 2b       	or	r27, r23
     f0a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f0e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f12:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f16:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f1a:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
     f1e:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
     f22:	30 97       	sbiw	r30, 0x00	; 0
     f24:	39 f0       	breq	.+14     	; 0xf34 <__vector_12+0xb2>
     f26:	67 e0       	ldi	r22, 0x07	; 7
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
     f2e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
     f32:	09 95       	icall
     f34:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
     f38:	ff 91       	pop	r31
     f3a:	ef 91       	pop	r30
     f3c:	bf 91       	pop	r27
     f3e:	af 91       	pop	r26
     f40:	9f 91       	pop	r25
     f42:	8f 91       	pop	r24
     f44:	7f 91       	pop	r23
     f46:	6f 91       	pop	r22
     f48:	5f 91       	pop	r21
     f4a:	4f 91       	pop	r20
     f4c:	3f 91       	pop	r19
     f4e:	2f 91       	pop	r18
     f50:	0f 90       	pop	r0
     f52:	0f be       	out	0x3f, r0	; 63
     f54:	0f 90       	pop	r0
     f56:	1f 90       	pop	r1
     f58:	18 95       	reti

00000f5a <__vector_13>:
     f5a:	1f 92       	push	r1
     f5c:	0f 92       	push	r0
     f5e:	0f b6       	in	r0, 0x3f	; 63
     f60:	0f 92       	push	r0
     f62:	11 24       	eor	r1, r1
     f64:	2f 93       	push	r18
     f66:	3f 93       	push	r19
     f68:	4f 93       	push	r20
     f6a:	5f 93       	push	r21
     f6c:	6f 93       	push	r22
     f6e:	7f 93       	push	r23
     f70:	8f 93       	push	r24
     f72:	9f 93       	push	r25
     f74:	af 93       	push	r26
     f76:	bf 93       	push	r27
     f78:	ef 93       	push	r30
     f7a:	ff 93       	push	r31
     f7c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     f80:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     f84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f8c:	c9 01       	movw	r24, r18
     f8e:	03 2e       	mov	r0, r19
     f90:	00 0c       	add	r0, r0
     f92:	aa 0b       	sbc	r26, r26
     f94:	bb 0b       	sbc	r27, r27
     f96:	dc 01       	movw	r26, r24
     f98:	99 27       	eor	r25, r25
     f9a:	88 27       	eor	r24, r24
     f9c:	60 e0       	ldi	r22, 0x00	; 0
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	84 2b       	or	r24, r20
     fa2:	95 2b       	or	r25, r21
     fa4:	a6 2b       	or	r26, r22
     fa6:	b7 2b       	or	r27, r23
     fa8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     fac:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     fb0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     fb4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     fb8:	b0 9b       	sbis	0x16, 0	; 22
     fba:	1b c0       	rjmp	.+54     	; 0xff2 <__vector_13+0x98>
     fbc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fc0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fc4:	c9 01       	movw	r24, r18
     fc6:	01 96       	adiw	r24, 0x01	; 1
     fc8:	09 2e       	mov	r0, r25
     fca:	00 0c       	add	r0, r0
     fcc:	aa 0b       	sbc	r26, r26
     fce:	bb 0b       	sbc	r27, r27
     fd0:	dc 01       	movw	r26, r24
     fd2:	99 27       	eor	r25, r25
     fd4:	88 27       	eor	r24, r24
     fd6:	60 e0       	ldi	r22, 0x00	; 0
     fd8:	70 e0       	ldi	r23, 0x00	; 0
     fda:	84 2b       	or	r24, r20
     fdc:	95 2b       	or	r25, r21
     fde:	a6 2b       	or	r26, r22
     fe0:	b7 2b       	or	r27, r23
     fe2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     fe6:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     fea:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     fee:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     ff2:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
     ff6:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
     ffa:	30 97       	sbiw	r30, 0x00	; 0
     ffc:	39 f0       	breq	.+14     	; 0x100c <__vector_13+0xb2>
     ffe:	68 e0       	ldi	r22, 0x08	; 8
    1000:	70 e0       	ldi	r23, 0x00	; 0
    1002:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
    1006:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
    100a:	09 95       	icall
    100c:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    1010:	ff 91       	pop	r31
    1012:	ef 91       	pop	r30
    1014:	bf 91       	pop	r27
    1016:	af 91       	pop	r26
    1018:	9f 91       	pop	r25
    101a:	8f 91       	pop	r24
    101c:	7f 91       	pop	r23
    101e:	6f 91       	pop	r22
    1020:	5f 91       	pop	r21
    1022:	4f 91       	pop	r20
    1024:	3f 91       	pop	r19
    1026:	2f 91       	pop	r18
    1028:	0f 90       	pop	r0
    102a:	0f be       	out	0x3f, r0	; 63
    102c:	0f 90       	pop	r0
    102e:	1f 90       	pop	r1
    1030:	18 95       	reti

00001032 <__vector_14>:
    1032:	1f 92       	push	r1
    1034:	0f 92       	push	r0
    1036:	0f b6       	in	r0, 0x3f	; 63
    1038:	0f 92       	push	r0
    103a:	11 24       	eor	r1, r1
    103c:	2f 93       	push	r18
    103e:	3f 93       	push	r19
    1040:	4f 93       	push	r20
    1042:	5f 93       	push	r21
    1044:	6f 93       	push	r22
    1046:	7f 93       	push	r23
    1048:	8f 93       	push	r24
    104a:	9f 93       	push	r25
    104c:	af 93       	push	r26
    104e:	bf 93       	push	r27
    1050:	ef 93       	push	r30
    1052:	ff 93       	push	r31
    1054:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1058:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    105c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1060:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1064:	c9 01       	movw	r24, r18
    1066:	03 2e       	mov	r0, r19
    1068:	00 0c       	add	r0, r0
    106a:	aa 0b       	sbc	r26, r26
    106c:	bb 0b       	sbc	r27, r27
    106e:	dc 01       	movw	r26, r24
    1070:	99 27       	eor	r25, r25
    1072:	88 27       	eor	r24, r24
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	84 2b       	or	r24, r20
    107a:	95 2b       	or	r25, r21
    107c:	a6 2b       	or	r26, r22
    107e:	b7 2b       	or	r27, r23
    1080:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1084:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1088:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    108c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1090:	b0 9b       	sbis	0x16, 0	; 22
    1092:	1b c0       	rjmp	.+54     	; 0x10ca <__vector_14+0x98>
    1094:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1098:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    109c:	c9 01       	movw	r24, r18
    109e:	01 96       	adiw	r24, 0x01	; 1
    10a0:	09 2e       	mov	r0, r25
    10a2:	00 0c       	add	r0, r0
    10a4:	aa 0b       	sbc	r26, r26
    10a6:	bb 0b       	sbc	r27, r27
    10a8:	dc 01       	movw	r26, r24
    10aa:	99 27       	eor	r25, r25
    10ac:	88 27       	eor	r24, r24
    10ae:	60 e0       	ldi	r22, 0x00	; 0
    10b0:	70 e0       	ldi	r23, 0x00	; 0
    10b2:	84 2b       	or	r24, r20
    10b4:	95 2b       	or	r25, r21
    10b6:	a6 2b       	or	r26, r22
    10b8:	b7 2b       	or	r27, r23
    10ba:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    10be:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    10c2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    10c6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    10ca:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
    10ce:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
    10d2:	30 97       	sbiw	r30, 0x00	; 0
    10d4:	39 f0       	breq	.+14     	; 0x10e4 <__vector_14+0xb2>
    10d6:	69 e0       	ldi	r22, 0x09	; 9
    10d8:	70 e0       	ldi	r23, 0x00	; 0
    10da:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
    10de:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
    10e2:	09 95       	icall
    10e4:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    10e8:	ff 91       	pop	r31
    10ea:	ef 91       	pop	r30
    10ec:	bf 91       	pop	r27
    10ee:	af 91       	pop	r26
    10f0:	9f 91       	pop	r25
    10f2:	8f 91       	pop	r24
    10f4:	7f 91       	pop	r23
    10f6:	6f 91       	pop	r22
    10f8:	5f 91       	pop	r21
    10fa:	4f 91       	pop	r20
    10fc:	3f 91       	pop	r19
    10fe:	2f 91       	pop	r18
    1100:	0f 90       	pop	r0
    1102:	0f be       	out	0x3f, r0	; 63
    1104:	0f 90       	pop	r0
    1106:	1f 90       	pop	r1
    1108:	18 95       	reti

0000110a <__vector_15>:
    110a:	1f 92       	push	r1
    110c:	0f 92       	push	r0
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	0f 92       	push	r0
    1112:	11 24       	eor	r1, r1
    1114:	2f 93       	push	r18
    1116:	3f 93       	push	r19
    1118:	4f 93       	push	r20
    111a:	5f 93       	push	r21
    111c:	6f 93       	push	r22
    111e:	7f 93       	push	r23
    1120:	8f 93       	push	r24
    1122:	9f 93       	push	r25
    1124:	af 93       	push	r26
    1126:	bf 93       	push	r27
    1128:	ef 93       	push	r30
    112a:	ff 93       	push	r31
    112c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1130:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1134:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1138:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    113c:	c9 01       	movw	r24, r18
    113e:	03 2e       	mov	r0, r19
    1140:	00 0c       	add	r0, r0
    1142:	aa 0b       	sbc	r26, r26
    1144:	bb 0b       	sbc	r27, r27
    1146:	dc 01       	movw	r26, r24
    1148:	99 27       	eor	r25, r25
    114a:	88 27       	eor	r24, r24
    114c:	60 e0       	ldi	r22, 0x00	; 0
    114e:	70 e0       	ldi	r23, 0x00	; 0
    1150:	84 2b       	or	r24, r20
    1152:	95 2b       	or	r25, r21
    1154:	a6 2b       	or	r26, r22
    1156:	b7 2b       	or	r27, r23
    1158:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    115c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1160:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1164:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1168:	b0 9b       	sbis	0x16, 0	; 22
    116a:	1b c0       	rjmp	.+54     	; 0x11a2 <__vector_15+0x98>
    116c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1170:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1174:	c9 01       	movw	r24, r18
    1176:	01 96       	adiw	r24, 0x01	; 1
    1178:	09 2e       	mov	r0, r25
    117a:	00 0c       	add	r0, r0
    117c:	aa 0b       	sbc	r26, r26
    117e:	bb 0b       	sbc	r27, r27
    1180:	dc 01       	movw	r26, r24
    1182:	99 27       	eor	r25, r25
    1184:	88 27       	eor	r24, r24
    1186:	60 e0       	ldi	r22, 0x00	; 0
    1188:	70 e0       	ldi	r23, 0x00	; 0
    118a:	84 2b       	or	r24, r20
    118c:	95 2b       	or	r25, r21
    118e:	a6 2b       	or	r26, r22
    1190:	b7 2b       	or	r27, r23
    1192:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1196:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    119a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    119e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    11a2:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
    11a6:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    11aa:	30 97       	sbiw	r30, 0x00	; 0
    11ac:	39 f0       	breq	.+14     	; 0x11bc <__vector_15+0xb2>
    11ae:	6a e0       	ldi	r22, 0x0A	; 10
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    11b6:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    11ba:	09 95       	icall
    11bc:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    11c0:	ff 91       	pop	r31
    11c2:	ef 91       	pop	r30
    11c4:	bf 91       	pop	r27
    11c6:	af 91       	pop	r26
    11c8:	9f 91       	pop	r25
    11ca:	8f 91       	pop	r24
    11cc:	7f 91       	pop	r23
    11ce:	6f 91       	pop	r22
    11d0:	5f 91       	pop	r21
    11d2:	4f 91       	pop	r20
    11d4:	3f 91       	pop	r19
    11d6:	2f 91       	pop	r18
    11d8:	0f 90       	pop	r0
    11da:	0f be       	out	0x3f, r0	; 63
    11dc:	0f 90       	pop	r0
    11de:	1f 90       	pop	r1
    11e0:	18 95       	reti

000011e2 <__vector_16>:
    11e2:	1f 92       	push	r1
    11e4:	0f 92       	push	r0
    11e6:	0f b6       	in	r0, 0x3f	; 63
    11e8:	0f 92       	push	r0
    11ea:	11 24       	eor	r1, r1
    11ec:	2f 93       	push	r18
    11ee:	3f 93       	push	r19
    11f0:	4f 93       	push	r20
    11f2:	5f 93       	push	r21
    11f4:	6f 93       	push	r22
    11f6:	7f 93       	push	r23
    11f8:	8f 93       	push	r24
    11fa:	9f 93       	push	r25
    11fc:	af 93       	push	r26
    11fe:	bf 93       	push	r27
    1200:	ef 93       	push	r30
    1202:	ff 93       	push	r31
    1204:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1208:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    120c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1210:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1214:	c9 01       	movw	r24, r18
    1216:	03 2e       	mov	r0, r19
    1218:	00 0c       	add	r0, r0
    121a:	aa 0b       	sbc	r26, r26
    121c:	bb 0b       	sbc	r27, r27
    121e:	dc 01       	movw	r26, r24
    1220:	99 27       	eor	r25, r25
    1222:	88 27       	eor	r24, r24
    1224:	60 e0       	ldi	r22, 0x00	; 0
    1226:	70 e0       	ldi	r23, 0x00	; 0
    1228:	84 2b       	or	r24, r20
    122a:	95 2b       	or	r25, r21
    122c:	a6 2b       	or	r26, r22
    122e:	b7 2b       	or	r27, r23
    1230:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1234:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1238:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    123c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1240:	b0 9b       	sbis	0x16, 0	; 22
    1242:	1b c0       	rjmp	.+54     	; 0x127a <__vector_16+0x98>
    1244:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1248:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    124c:	c9 01       	movw	r24, r18
    124e:	01 96       	adiw	r24, 0x01	; 1
    1250:	09 2e       	mov	r0, r25
    1252:	00 0c       	add	r0, r0
    1254:	aa 0b       	sbc	r26, r26
    1256:	bb 0b       	sbc	r27, r27
    1258:	dc 01       	movw	r26, r24
    125a:	99 27       	eor	r25, r25
    125c:	88 27       	eor	r24, r24
    125e:	60 e0       	ldi	r22, 0x00	; 0
    1260:	70 e0       	ldi	r23, 0x00	; 0
    1262:	84 2b       	or	r24, r20
    1264:	95 2b       	or	r25, r21
    1266:	a6 2b       	or	r26, r22
    1268:	b7 2b       	or	r27, r23
    126a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    126e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1272:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1276:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    127a:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    127e:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    1282:	30 97       	sbiw	r30, 0x00	; 0
    1284:	39 f0       	breq	.+14     	; 0x1294 <__vector_16+0xb2>
    1286:	6b e0       	ldi	r22, 0x0B	; 11
    1288:	70 e0       	ldi	r23, 0x00	; 0
    128a:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    128e:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    1292:	09 95       	icall
    1294:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    1298:	ff 91       	pop	r31
    129a:	ef 91       	pop	r30
    129c:	bf 91       	pop	r27
    129e:	af 91       	pop	r26
    12a0:	9f 91       	pop	r25
    12a2:	8f 91       	pop	r24
    12a4:	7f 91       	pop	r23
    12a6:	6f 91       	pop	r22
    12a8:	5f 91       	pop	r21
    12aa:	4f 91       	pop	r20
    12ac:	3f 91       	pop	r19
    12ae:	2f 91       	pop	r18
    12b0:	0f 90       	pop	r0
    12b2:	0f be       	out	0x3f, r0	; 63
    12b4:	0f 90       	pop	r0
    12b6:	1f 90       	pop	r1
    12b8:	18 95       	reti

000012ba <__vector_17>:
    12ba:	1f 92       	push	r1
    12bc:	0f 92       	push	r0
    12be:	0f b6       	in	r0, 0x3f	; 63
    12c0:	0f 92       	push	r0
    12c2:	11 24       	eor	r1, r1
    12c4:	2f 93       	push	r18
    12c6:	3f 93       	push	r19
    12c8:	4f 93       	push	r20
    12ca:	5f 93       	push	r21
    12cc:	6f 93       	push	r22
    12ce:	7f 93       	push	r23
    12d0:	8f 93       	push	r24
    12d2:	9f 93       	push	r25
    12d4:	af 93       	push	r26
    12d6:	bf 93       	push	r27
    12d8:	ef 93       	push	r30
    12da:	ff 93       	push	r31
    12dc:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    12e0:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    12e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12ec:	c9 01       	movw	r24, r18
    12ee:	03 2e       	mov	r0, r19
    12f0:	00 0c       	add	r0, r0
    12f2:	aa 0b       	sbc	r26, r26
    12f4:	bb 0b       	sbc	r27, r27
    12f6:	dc 01       	movw	r26, r24
    12f8:	99 27       	eor	r25, r25
    12fa:	88 27       	eor	r24, r24
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	70 e0       	ldi	r23, 0x00	; 0
    1300:	84 2b       	or	r24, r20
    1302:	95 2b       	or	r25, r21
    1304:	a6 2b       	or	r26, r22
    1306:	b7 2b       	or	r27, r23
    1308:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    130c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1310:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1314:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1318:	b0 9b       	sbis	0x16, 0	; 22
    131a:	1b c0       	rjmp	.+54     	; 0x1352 <__vector_17+0x98>
    131c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1320:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1324:	c9 01       	movw	r24, r18
    1326:	01 96       	adiw	r24, 0x01	; 1
    1328:	09 2e       	mov	r0, r25
    132a:	00 0c       	add	r0, r0
    132c:	aa 0b       	sbc	r26, r26
    132e:	bb 0b       	sbc	r27, r27
    1330:	dc 01       	movw	r26, r24
    1332:	99 27       	eor	r25, r25
    1334:	88 27       	eor	r24, r24
    1336:	60 e0       	ldi	r22, 0x00	; 0
    1338:	70 e0       	ldi	r23, 0x00	; 0
    133a:	84 2b       	or	r24, r20
    133c:	95 2b       	or	r25, r21
    133e:	a6 2b       	or	r26, r22
    1340:	b7 2b       	or	r27, r23
    1342:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1346:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    134a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    134e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1352:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    1356:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    135a:	30 97       	sbiw	r30, 0x00	; 0
    135c:	39 f0       	breq	.+14     	; 0x136c <__vector_17+0xb2>
    135e:	6c e0       	ldi	r22, 0x0C	; 12
    1360:	70 e0       	ldi	r23, 0x00	; 0
    1362:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    1366:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    136a:	09 95       	icall
    136c:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    1370:	ff 91       	pop	r31
    1372:	ef 91       	pop	r30
    1374:	bf 91       	pop	r27
    1376:	af 91       	pop	r26
    1378:	9f 91       	pop	r25
    137a:	8f 91       	pop	r24
    137c:	7f 91       	pop	r23
    137e:	6f 91       	pop	r22
    1380:	5f 91       	pop	r21
    1382:	4f 91       	pop	r20
    1384:	3f 91       	pop	r19
    1386:	2f 91       	pop	r18
    1388:	0f 90       	pop	r0
    138a:	0f be       	out	0x3f, r0	; 63
    138c:	0f 90       	pop	r0
    138e:	1f 90       	pop	r1
    1390:	18 95       	reti

00001392 <__vector_18>:
    1392:	1f 92       	push	r1
    1394:	0f 92       	push	r0
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	0f 92       	push	r0
    139a:	11 24       	eor	r1, r1
    139c:	2f 93       	push	r18
    139e:	3f 93       	push	r19
    13a0:	4f 93       	push	r20
    13a2:	5f 93       	push	r21
    13a4:	6f 93       	push	r22
    13a6:	7f 93       	push	r23
    13a8:	8f 93       	push	r24
    13aa:	9f 93       	push	r25
    13ac:	af 93       	push	r26
    13ae:	bf 93       	push	r27
    13b0:	ef 93       	push	r30
    13b2:	ff 93       	push	r31
    13b4:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    13b8:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    13bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13c4:	c9 01       	movw	r24, r18
    13c6:	03 2e       	mov	r0, r19
    13c8:	00 0c       	add	r0, r0
    13ca:	aa 0b       	sbc	r26, r26
    13cc:	bb 0b       	sbc	r27, r27
    13ce:	dc 01       	movw	r26, r24
    13d0:	99 27       	eor	r25, r25
    13d2:	88 27       	eor	r24, r24
    13d4:	60 e0       	ldi	r22, 0x00	; 0
    13d6:	70 e0       	ldi	r23, 0x00	; 0
    13d8:	84 2b       	or	r24, r20
    13da:	95 2b       	or	r25, r21
    13dc:	a6 2b       	or	r26, r22
    13de:	b7 2b       	or	r27, r23
    13e0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    13e4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    13e8:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    13ec:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    13f0:	b0 9b       	sbis	0x16, 0	; 22
    13f2:	1b c0       	rjmp	.+54     	; 0x142a <__vector_18+0x98>
    13f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13fc:	c9 01       	movw	r24, r18
    13fe:	01 96       	adiw	r24, 0x01	; 1
    1400:	09 2e       	mov	r0, r25
    1402:	00 0c       	add	r0, r0
    1404:	aa 0b       	sbc	r26, r26
    1406:	bb 0b       	sbc	r27, r27
    1408:	dc 01       	movw	r26, r24
    140a:	99 27       	eor	r25, r25
    140c:	88 27       	eor	r24, r24
    140e:	60 e0       	ldi	r22, 0x00	; 0
    1410:	70 e0       	ldi	r23, 0x00	; 0
    1412:	84 2b       	or	r24, r20
    1414:	95 2b       	or	r25, r21
    1416:	a6 2b       	or	r26, r22
    1418:	b7 2b       	or	r27, r23
    141a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    141e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1422:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1426:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    142a:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    142e:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    1432:	30 97       	sbiw	r30, 0x00	; 0
    1434:	39 f0       	breq	.+14     	; 0x1444 <__vector_18+0xb2>
    1436:	6d e0       	ldi	r22, 0x0D	; 13
    1438:	70 e0       	ldi	r23, 0x00	; 0
    143a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    143e:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    1442:	09 95       	icall
    1444:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    1448:	ff 91       	pop	r31
    144a:	ef 91       	pop	r30
    144c:	bf 91       	pop	r27
    144e:	af 91       	pop	r26
    1450:	9f 91       	pop	r25
    1452:	8f 91       	pop	r24
    1454:	7f 91       	pop	r23
    1456:	6f 91       	pop	r22
    1458:	5f 91       	pop	r21
    145a:	4f 91       	pop	r20
    145c:	3f 91       	pop	r19
    145e:	2f 91       	pop	r18
    1460:	0f 90       	pop	r0
    1462:	0f be       	out	0x3f, r0	; 63
    1464:	0f 90       	pop	r0
    1466:	1f 90       	pop	r1
    1468:	18 95       	reti

0000146a <__vector_19>:
    146a:	1f 92       	push	r1
    146c:	0f 92       	push	r0
    146e:	0f b6       	in	r0, 0x3f	; 63
    1470:	0f 92       	push	r0
    1472:	11 24       	eor	r1, r1
    1474:	2f 93       	push	r18
    1476:	3f 93       	push	r19
    1478:	4f 93       	push	r20
    147a:	5f 93       	push	r21
    147c:	6f 93       	push	r22
    147e:	7f 93       	push	r23
    1480:	8f 93       	push	r24
    1482:	9f 93       	push	r25
    1484:	af 93       	push	r26
    1486:	bf 93       	push	r27
    1488:	ef 93       	push	r30
    148a:	ff 93       	push	r31
    148c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1490:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1494:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1498:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    149c:	c9 01       	movw	r24, r18
    149e:	03 2e       	mov	r0, r19
    14a0:	00 0c       	add	r0, r0
    14a2:	aa 0b       	sbc	r26, r26
    14a4:	bb 0b       	sbc	r27, r27
    14a6:	dc 01       	movw	r26, r24
    14a8:	99 27       	eor	r25, r25
    14aa:	88 27       	eor	r24, r24
    14ac:	60 e0       	ldi	r22, 0x00	; 0
    14ae:	70 e0       	ldi	r23, 0x00	; 0
    14b0:	84 2b       	or	r24, r20
    14b2:	95 2b       	or	r25, r21
    14b4:	a6 2b       	or	r26, r22
    14b6:	b7 2b       	or	r27, r23
    14b8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    14bc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    14c0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    14c4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    14c8:	b0 9b       	sbis	0x16, 0	; 22
    14ca:	1b c0       	rjmp	.+54     	; 0x1502 <__vector_19+0x98>
    14cc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14d0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14d4:	c9 01       	movw	r24, r18
    14d6:	01 96       	adiw	r24, 0x01	; 1
    14d8:	09 2e       	mov	r0, r25
    14da:	00 0c       	add	r0, r0
    14dc:	aa 0b       	sbc	r26, r26
    14de:	bb 0b       	sbc	r27, r27
    14e0:	dc 01       	movw	r26, r24
    14e2:	99 27       	eor	r25, r25
    14e4:	88 27       	eor	r24, r24
    14e6:	60 e0       	ldi	r22, 0x00	; 0
    14e8:	70 e0       	ldi	r23, 0x00	; 0
    14ea:	84 2b       	or	r24, r20
    14ec:	95 2b       	or	r25, r21
    14ee:	a6 2b       	or	r26, r22
    14f0:	b7 2b       	or	r27, r23
    14f2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    14f6:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    14fa:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    14fe:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1502:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    1506:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    150a:	30 97       	sbiw	r30, 0x00	; 0
    150c:	39 f0       	breq	.+14     	; 0x151c <__vector_19+0xb2>
    150e:	6e e0       	ldi	r22, 0x0E	; 14
    1510:	70 e0       	ldi	r23, 0x00	; 0
    1512:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    1516:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    151a:	09 95       	icall
    151c:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    1520:	ff 91       	pop	r31
    1522:	ef 91       	pop	r30
    1524:	bf 91       	pop	r27
    1526:	af 91       	pop	r26
    1528:	9f 91       	pop	r25
    152a:	8f 91       	pop	r24
    152c:	7f 91       	pop	r23
    152e:	6f 91       	pop	r22
    1530:	5f 91       	pop	r21
    1532:	4f 91       	pop	r20
    1534:	3f 91       	pop	r19
    1536:	2f 91       	pop	r18
    1538:	0f 90       	pop	r0
    153a:	0f be       	out	0x3f, r0	; 63
    153c:	0f 90       	pop	r0
    153e:	1f 90       	pop	r1
    1540:	18 95       	reti

00001542 <__vector_20>:
    1542:	1f 92       	push	r1
    1544:	0f 92       	push	r0
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	0f 92       	push	r0
    154a:	11 24       	eor	r1, r1
    154c:	2f 93       	push	r18
    154e:	3f 93       	push	r19
    1550:	4f 93       	push	r20
    1552:	5f 93       	push	r21
    1554:	6f 93       	push	r22
    1556:	7f 93       	push	r23
    1558:	8f 93       	push	r24
    155a:	9f 93       	push	r25
    155c:	af 93       	push	r26
    155e:	bf 93       	push	r27
    1560:	ef 93       	push	r30
    1562:	ff 93       	push	r31
    1564:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1568:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    156c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1570:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1574:	c9 01       	movw	r24, r18
    1576:	03 2e       	mov	r0, r19
    1578:	00 0c       	add	r0, r0
    157a:	aa 0b       	sbc	r26, r26
    157c:	bb 0b       	sbc	r27, r27
    157e:	dc 01       	movw	r26, r24
    1580:	99 27       	eor	r25, r25
    1582:	88 27       	eor	r24, r24
    1584:	60 e0       	ldi	r22, 0x00	; 0
    1586:	70 e0       	ldi	r23, 0x00	; 0
    1588:	84 2b       	or	r24, r20
    158a:	95 2b       	or	r25, r21
    158c:	a6 2b       	or	r26, r22
    158e:	b7 2b       	or	r27, r23
    1590:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1594:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1598:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    159c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    15a0:	b0 9b       	sbis	0x16, 0	; 22
    15a2:	1b c0       	rjmp	.+54     	; 0x15da <__vector_20+0x98>
    15a4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15a8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15ac:	c9 01       	movw	r24, r18
    15ae:	01 96       	adiw	r24, 0x01	; 1
    15b0:	09 2e       	mov	r0, r25
    15b2:	00 0c       	add	r0, r0
    15b4:	aa 0b       	sbc	r26, r26
    15b6:	bb 0b       	sbc	r27, r27
    15b8:	dc 01       	movw	r26, r24
    15ba:	99 27       	eor	r25, r25
    15bc:	88 27       	eor	r24, r24
    15be:	60 e0       	ldi	r22, 0x00	; 0
    15c0:	70 e0       	ldi	r23, 0x00	; 0
    15c2:	84 2b       	or	r24, r20
    15c4:	95 2b       	or	r25, r21
    15c6:	a6 2b       	or	r26, r22
    15c8:	b7 2b       	or	r27, r23
    15ca:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    15ce:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    15d2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    15d6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    15da:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    15de:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    15e2:	30 97       	sbiw	r30, 0x00	; 0
    15e4:	39 f0       	breq	.+14     	; 0x15f4 <__vector_20+0xb2>
    15e6:	6f e0       	ldi	r22, 0x0F	; 15
    15e8:	70 e0       	ldi	r23, 0x00	; 0
    15ea:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    15ee:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    15f2:	09 95       	icall
    15f4:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    15f8:	ff 91       	pop	r31
    15fa:	ef 91       	pop	r30
    15fc:	bf 91       	pop	r27
    15fe:	af 91       	pop	r26
    1600:	9f 91       	pop	r25
    1602:	8f 91       	pop	r24
    1604:	7f 91       	pop	r23
    1606:	6f 91       	pop	r22
    1608:	5f 91       	pop	r21
    160a:	4f 91       	pop	r20
    160c:	3f 91       	pop	r19
    160e:	2f 91       	pop	r18
    1610:	0f 90       	pop	r0
    1612:	0f be       	out	0x3f, r0	; 63
    1614:	0f 90       	pop	r0
    1616:	1f 90       	pop	r1
    1618:	18 95       	reti

0000161a <__vector_21>:
    161a:	1f 92       	push	r1
    161c:	0f 92       	push	r0
    161e:	0f b6       	in	r0, 0x3f	; 63
    1620:	0f 92       	push	r0
    1622:	11 24       	eor	r1, r1
    1624:	2f 93       	push	r18
    1626:	3f 93       	push	r19
    1628:	4f 93       	push	r20
    162a:	5f 93       	push	r21
    162c:	6f 93       	push	r22
    162e:	7f 93       	push	r23
    1630:	8f 93       	push	r24
    1632:	9f 93       	push	r25
    1634:	af 93       	push	r26
    1636:	bf 93       	push	r27
    1638:	ef 93       	push	r30
    163a:	ff 93       	push	r31
    163c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1640:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1644:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1648:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    164c:	c9 01       	movw	r24, r18
    164e:	03 2e       	mov	r0, r19
    1650:	00 0c       	add	r0, r0
    1652:	aa 0b       	sbc	r26, r26
    1654:	bb 0b       	sbc	r27, r27
    1656:	dc 01       	movw	r26, r24
    1658:	99 27       	eor	r25, r25
    165a:	88 27       	eor	r24, r24
    165c:	60 e0       	ldi	r22, 0x00	; 0
    165e:	70 e0       	ldi	r23, 0x00	; 0
    1660:	84 2b       	or	r24, r20
    1662:	95 2b       	or	r25, r21
    1664:	a6 2b       	or	r26, r22
    1666:	b7 2b       	or	r27, r23
    1668:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    166c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1670:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1674:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1678:	b0 9b       	sbis	0x16, 0	; 22
    167a:	1b c0       	rjmp	.+54     	; 0x16b2 <__vector_21+0x98>
    167c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1680:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1684:	c9 01       	movw	r24, r18
    1686:	01 96       	adiw	r24, 0x01	; 1
    1688:	09 2e       	mov	r0, r25
    168a:	00 0c       	add	r0, r0
    168c:	aa 0b       	sbc	r26, r26
    168e:	bb 0b       	sbc	r27, r27
    1690:	dc 01       	movw	r26, r24
    1692:	99 27       	eor	r25, r25
    1694:	88 27       	eor	r24, r24
    1696:	60 e0       	ldi	r22, 0x00	; 0
    1698:	70 e0       	ldi	r23, 0x00	; 0
    169a:	84 2b       	or	r24, r20
    169c:	95 2b       	or	r25, r21
    169e:	a6 2b       	or	r26, r22
    16a0:	b7 2b       	or	r27, r23
    16a2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    16a6:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    16aa:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    16ae:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    16b2:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    16b6:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    16ba:	30 97       	sbiw	r30, 0x00	; 0
    16bc:	39 f0       	breq	.+14     	; 0x16cc <__vector_21+0xb2>
    16be:	60 e1       	ldi	r22, 0x10	; 16
    16c0:	70 e0       	ldi	r23, 0x00	; 0
    16c2:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    16c6:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    16ca:	09 95       	icall
    16cc:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    16d0:	ff 91       	pop	r31
    16d2:	ef 91       	pop	r30
    16d4:	bf 91       	pop	r27
    16d6:	af 91       	pop	r26
    16d8:	9f 91       	pop	r25
    16da:	8f 91       	pop	r24
    16dc:	7f 91       	pop	r23
    16de:	6f 91       	pop	r22
    16e0:	5f 91       	pop	r21
    16e2:	4f 91       	pop	r20
    16e4:	3f 91       	pop	r19
    16e6:	2f 91       	pop	r18
    16e8:	0f 90       	pop	r0
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	0f 90       	pop	r0
    16ee:	1f 90       	pop	r1
    16f0:	18 95       	reti

000016f2 <__vector_22>:
    16f2:	1f 92       	push	r1
    16f4:	0f 92       	push	r0
    16f6:	0f b6       	in	r0, 0x3f	; 63
    16f8:	0f 92       	push	r0
    16fa:	11 24       	eor	r1, r1
    16fc:	2f 93       	push	r18
    16fe:	3f 93       	push	r19
    1700:	4f 93       	push	r20
    1702:	5f 93       	push	r21
    1704:	6f 93       	push	r22
    1706:	7f 93       	push	r23
    1708:	8f 93       	push	r24
    170a:	9f 93       	push	r25
    170c:	af 93       	push	r26
    170e:	bf 93       	push	r27
    1710:	ef 93       	push	r30
    1712:	ff 93       	push	r31
    1714:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1718:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    171c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1720:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1724:	c9 01       	movw	r24, r18
    1726:	03 2e       	mov	r0, r19
    1728:	00 0c       	add	r0, r0
    172a:	aa 0b       	sbc	r26, r26
    172c:	bb 0b       	sbc	r27, r27
    172e:	dc 01       	movw	r26, r24
    1730:	99 27       	eor	r25, r25
    1732:	88 27       	eor	r24, r24
    1734:	60 e0       	ldi	r22, 0x00	; 0
    1736:	70 e0       	ldi	r23, 0x00	; 0
    1738:	84 2b       	or	r24, r20
    173a:	95 2b       	or	r25, r21
    173c:	a6 2b       	or	r26, r22
    173e:	b7 2b       	or	r27, r23
    1740:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1744:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1748:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    174c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1750:	b0 9b       	sbis	0x16, 0	; 22
    1752:	1b c0       	rjmp	.+54     	; 0x178a <__vector_22+0x98>
    1754:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1758:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    175c:	c9 01       	movw	r24, r18
    175e:	01 96       	adiw	r24, 0x01	; 1
    1760:	09 2e       	mov	r0, r25
    1762:	00 0c       	add	r0, r0
    1764:	aa 0b       	sbc	r26, r26
    1766:	bb 0b       	sbc	r27, r27
    1768:	dc 01       	movw	r26, r24
    176a:	99 27       	eor	r25, r25
    176c:	88 27       	eor	r24, r24
    176e:	60 e0       	ldi	r22, 0x00	; 0
    1770:	70 e0       	ldi	r23, 0x00	; 0
    1772:	84 2b       	or	r24, r20
    1774:	95 2b       	or	r25, r21
    1776:	a6 2b       	or	r26, r22
    1778:	b7 2b       	or	r27, r23
    177a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    177e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1782:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1786:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    178a:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    178e:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    1792:	30 97       	sbiw	r30, 0x00	; 0
    1794:	39 f0       	breq	.+14     	; 0x17a4 <__vector_22+0xb2>
    1796:	61 e1       	ldi	r22, 0x11	; 17
    1798:	70 e0       	ldi	r23, 0x00	; 0
    179a:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    179e:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    17a2:	09 95       	icall
    17a4:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    17a8:	ff 91       	pop	r31
    17aa:	ef 91       	pop	r30
    17ac:	bf 91       	pop	r27
    17ae:	af 91       	pop	r26
    17b0:	9f 91       	pop	r25
    17b2:	8f 91       	pop	r24
    17b4:	7f 91       	pop	r23
    17b6:	6f 91       	pop	r22
    17b8:	5f 91       	pop	r21
    17ba:	4f 91       	pop	r20
    17bc:	3f 91       	pop	r19
    17be:	2f 91       	pop	r18
    17c0:	0f 90       	pop	r0
    17c2:	0f be       	out	0x3f, r0	; 63
    17c4:	0f 90       	pop	r0
    17c6:	1f 90       	pop	r1
    17c8:	18 95       	reti

000017ca <__vector_9>:
    17ca:	1f 92       	push	r1
    17cc:	0f 92       	push	r0
    17ce:	0f b6       	in	r0, 0x3f	; 63
    17d0:	0f 92       	push	r0
    17d2:	11 24       	eor	r1, r1
    17d4:	2f 93       	push	r18
    17d6:	3f 93       	push	r19
    17d8:	4f 93       	push	r20
    17da:	5f 93       	push	r21
    17dc:	6f 93       	push	r22
    17de:	7f 93       	push	r23
    17e0:	8f 93       	push	r24
    17e2:	9f 93       	push	r25
    17e4:	ef 93       	push	r30
    17e6:	ff 93       	push	r31
    17e8:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    17ec:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    17f0:	01 96       	adiw	r24, 0x01	; 1
    17f2:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
    17f6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
    17fa:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <timerQ>
    17fe:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <timerQ+0x1>
    1802:	30 97       	sbiw	r30, 0x00	; 0
    1804:	39 f0       	breq	.+14     	; 0x1814 <__vector_9+0x4a>
    1806:	42 81       	ldd	r20, Z+2	; 0x02
    1808:	53 81       	ldd	r21, Z+3	; 0x03
    180a:	64 81       	ldd	r22, Z+4	; 0x04
    180c:	75 81       	ldd	r23, Z+5	; 0x05
    180e:	86 17       	cp	r24, r22
    1810:	97 07       	cpc	r25, r23
    1812:	a1 f0       	breq	.+40     	; 0x183c <__vector_9+0x72>
    1814:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1818:	8d 7f       	andi	r24, 0xFD	; 253
    181a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    181e:	ff 91       	pop	r31
    1820:	ef 91       	pop	r30
    1822:	9f 91       	pop	r25
    1824:	8f 91       	pop	r24
    1826:	7f 91       	pop	r23
    1828:	6f 91       	pop	r22
    182a:	5f 91       	pop	r21
    182c:	4f 91       	pop	r20
    182e:	3f 91       	pop	r19
    1830:	2f 91       	pop	r18
    1832:	0f 90       	pop	r0
    1834:	0f be       	out	0x3f, r0	; 63
    1836:	0f 90       	pop	r0
    1838:	1f 90       	pop	r1
    183a:	18 95       	reti
    183c:	ca 01       	movw	r24, r20
    183e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1842:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1846:	42 1b       	sub	r20, r18
    1848:	53 0b       	sbc	r21, r19
    184a:	41 30       	cpi	r20, 0x01	; 1
    184c:	51 05       	cpc	r21, r1
    184e:	51 f0       	breq	.+20     	; 0x1864 <__vector_9+0x9a>
    1850:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1854:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1858:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    185c:	82 60       	ori	r24, 0x02	; 2
    185e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1862:	dd cf       	rjmp	.-70     	; 0x181e <__vector_9+0x54>
    1864:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1868:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    186c:	01 96       	adiw	r24, 0x01	; 1
    186e:	f0 cf       	rjmp	.-32     	; 0x1850 <__vector_9+0x86>

00001870 <__vector_7>:
    1870:	1f 92       	push	r1
    1872:	0f 92       	push	r0
    1874:	0f b6       	in	r0, 0x3f	; 63
    1876:	0f 92       	push	r0
    1878:	11 24       	eor	r1, r1
    187a:	8f 92       	push	r8
    187c:	9f 92       	push	r9
    187e:	af 92       	push	r10
    1880:	bf 92       	push	r11
    1882:	cf 92       	push	r12
    1884:	df 92       	push	r13
    1886:	ef 92       	push	r14
    1888:	ff 92       	push	r15
    188a:	0f 93       	push	r16
    188c:	1f 93       	push	r17
    188e:	2f 93       	push	r18
    1890:	3f 93       	push	r19
    1892:	4f 93       	push	r20
    1894:	5f 93       	push	r21
    1896:	6f 93       	push	r22
    1898:	7f 93       	push	r23
    189a:	8f 93       	push	r24
    189c:	9f 93       	push	r25
    189e:	af 93       	push	r26
    18a0:	bf 93       	push	r27
    18a2:	cf 93       	push	r28
    18a4:	df 93       	push	r29
    18a6:	ef 93       	push	r30
    18a8:	ff 93       	push	r31
    18aa:	e0 90 34 01 	lds	r14, 0x0134	; 0x800134 <__data_end>
    18ae:	f0 90 35 01 	lds	r15, 0x0135	; 0x800135 <__data_end+0x1>
    18b2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18b6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18ba:	b0 99       	sbic	0x16, 0	; 22
    18bc:	98 c0       	rjmp	.+304    	; 0x19ee <__vector_7+0x17e>
    18be:	47 01       	movw	r8, r14
    18c0:	0f 2c       	mov	r0, r15
    18c2:	00 0c       	add	r0, r0
    18c4:	aa 08       	sbc	r10, r10
    18c6:	bb 08       	sbc	r11, r11
    18c8:	54 01       	movw	r10, r8
    18ca:	99 24       	eor	r9, r9
    18cc:	88 24       	eor	r8, r8
    18ce:	a0 e0       	ldi	r26, 0x00	; 0
    18d0:	b0 e0       	ldi	r27, 0x00	; 0
    18d2:	88 2a       	or	r8, r24
    18d4:	99 2a       	or	r9, r25
    18d6:	aa 2a       	or	r10, r26
    18d8:	bb 2a       	or	r11, r27
    18da:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    18de:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    18e2:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <msgQ>
    18e6:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <msgQ+0x1>
    18ea:	20 97       	sbiw	r28, 0x00	; 0
    18ec:	09 f4       	brne	.+2      	; 0x18f0 <__vector_7+0x80>
    18ee:	3f c0       	rjmp	.+126    	; 0x196e <__vector_7+0xfe>
    18f0:	4a 81       	ldd	r20, Y+2	; 0x02
    18f2:	5b 81       	ldd	r21, Y+3	; 0x03
    18f4:	6c 81       	ldd	r22, Y+4	; 0x04
    18f6:	7d 81       	ldd	r23, Y+5	; 0x05
    18f8:	8a 01       	movw	r16, r20
    18fa:	9b 01       	movw	r18, r22
    18fc:	08 19       	sub	r16, r8
    18fe:	19 09       	sbc	r17, r9
    1900:	2a 09       	sbc	r18, r10
    1902:	3b 09       	sbc	r19, r11
    1904:	10 16       	cp	r1, r16
    1906:	11 06       	cpc	r1, r17
    1908:	12 06       	cpc	r1, r18
    190a:	13 06       	cpc	r1, r19
    190c:	0c f4       	brge	.+2      	; 0x1910 <__vector_7+0xa0>
    190e:	40 c0       	rjmp	.+128    	; 0x1990 <__vector_7+0x120>
    1910:	d8 80       	ld	r13, Y
    1912:	c9 80       	ldd	r12, Y+1	; 0x01
    1914:	00 97       	sbiw	r24, 0x00	; 0
    1916:	b9 f1       	breq	.+110    	; 0x1986 <__vector_7+0x116>
    1918:	0e 81       	ldd	r16, Y+6	; 0x06
    191a:	1f 81       	ldd	r17, Y+7	; 0x07
    191c:	28 85       	ldd	r18, Y+8	; 0x08
    191e:	39 85       	ldd	r19, Y+9	; 0x09
    1920:	fc 01       	movw	r30, r24
    1922:	46 81       	ldd	r20, Z+6	; 0x06
    1924:	57 81       	ldd	r21, Z+7	; 0x07
    1926:	60 85       	ldd	r22, Z+8	; 0x08
    1928:	71 85       	ldd	r23, Z+9	; 0x09
    192a:	04 17       	cp	r16, r20
    192c:	15 07       	cpc	r17, r21
    192e:	26 07       	cpc	r18, r22
    1930:	37 07       	cpc	r19, r23
    1932:	4c f1       	brlt	.+82     	; 0x1986 <__vector_7+0x116>
    1934:	dc 01       	movw	r26, r24
    1936:	0a c0       	rjmp	.+20     	; 0x194c <__vector_7+0xdc>
    1938:	46 81       	ldd	r20, Z+6	; 0x06
    193a:	57 81       	ldd	r21, Z+7	; 0x07
    193c:	60 85       	ldd	r22, Z+8	; 0x08
    193e:	71 85       	ldd	r23, Z+9	; 0x09
    1940:	04 17       	cp	r16, r20
    1942:	15 07       	cpc	r17, r21
    1944:	26 07       	cpc	r18, r22
    1946:	37 07       	cpc	r19, r23
    1948:	dc f0       	brlt	.+54     	; 0x1980 <__vector_7+0x110>
    194a:	df 01       	movw	r26, r30
    194c:	ed 91       	ld	r30, X+
    194e:	fc 91       	ld	r31, X
    1950:	11 97       	sbiw	r26, 0x01	; 1
    1952:	30 97       	sbiw	r30, 0x00	; 0
    1954:	89 f7       	brne	.-30     	; 0x1938 <__vector_7+0xc8>
    1956:	19 82       	std	Y+1, r1	; 0x01
    1958:	18 82       	st	Y, r1
    195a:	cd 93       	st	X+, r28
    195c:	dc 93       	st	X, r29
    195e:	38 2f       	mov	r19, r24
    1960:	29 2f       	mov	r18, r25
    1962:	cd 2d       	mov	r28, r13
    1964:	dc 2d       	mov	r29, r12
    1966:	83 2f       	mov	r24, r19
    1968:	92 2f       	mov	r25, r18
    196a:	20 97       	sbiw	r28, 0x00	; 0
    196c:	09 f6       	brne	.-126    	; 0x18f0 <__vector_7+0x80>
    196e:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <timerQ+0x1>
    1972:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <timerQ>
    1976:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    197a:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    197e:	13 c0       	rjmp	.+38     	; 0x19a6 <__vector_7+0x136>
    1980:	f9 83       	std	Y+1, r31	; 0x01
    1982:	e8 83       	st	Y, r30
    1984:	ea cf       	rjmp	.-44     	; 0x195a <__vector_7+0xea>
    1986:	99 83       	std	Y+1, r25	; 0x01
    1988:	88 83       	st	Y, r24
    198a:	3c 2f       	mov	r19, r28
    198c:	2d 2f       	mov	r18, r29
    198e:	e9 cf       	rjmp	.-46     	; 0x1962 <__vector_7+0xf2>
    1990:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    1994:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    1998:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    199c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    19a0:	e6 16       	cp	r14, r22
    19a2:	f7 06       	cpc	r15, r23
    19a4:	d9 f1       	breq	.+118    	; 0x1a1c <__vector_7+0x1ac>
    19a6:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    19aa:	8d 7f       	andi	r24, 0xFD	; 253
    19ac:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    19b0:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    19b4:	ff 91       	pop	r31
    19b6:	ef 91       	pop	r30
    19b8:	df 91       	pop	r29
    19ba:	cf 91       	pop	r28
    19bc:	bf 91       	pop	r27
    19be:	af 91       	pop	r26
    19c0:	9f 91       	pop	r25
    19c2:	8f 91       	pop	r24
    19c4:	7f 91       	pop	r23
    19c6:	6f 91       	pop	r22
    19c8:	5f 91       	pop	r21
    19ca:	4f 91       	pop	r20
    19cc:	3f 91       	pop	r19
    19ce:	2f 91       	pop	r18
    19d0:	1f 91       	pop	r17
    19d2:	0f 91       	pop	r16
    19d4:	ff 90       	pop	r15
    19d6:	ef 90       	pop	r14
    19d8:	df 90       	pop	r13
    19da:	cf 90       	pop	r12
    19dc:	bf 90       	pop	r11
    19de:	af 90       	pop	r10
    19e0:	9f 90       	pop	r9
    19e2:	8f 90       	pop	r8
    19e4:	0f 90       	pop	r0
    19e6:	0f be       	out	0x3f, r0	; 63
    19e8:	0f 90       	pop	r0
    19ea:	1f 90       	pop	r1
    19ec:	18 95       	reti
    19ee:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19f2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19f6:	47 01       	movw	r8, r14
    19f8:	8f ef       	ldi	r24, 0xFF	; 255
    19fa:	88 1a       	sub	r8, r24
    19fc:	98 0a       	sbc	r9, r24
    19fe:	09 2c       	mov	r0, r9
    1a00:	00 0c       	add	r0, r0
    1a02:	aa 08       	sbc	r10, r10
    1a04:	bb 08       	sbc	r11, r11
    1a06:	d4 01       	movw	r26, r8
    1a08:	99 27       	eor	r25, r25
    1a0a:	88 27       	eor	r24, r24
    1a0c:	49 01       	movw	r8, r18
    1a0e:	a1 2c       	mov	r10, r1
    1a10:	b1 2c       	mov	r11, r1
    1a12:	88 2a       	or	r8, r24
    1a14:	99 2a       	or	r9, r25
    1a16:	aa 2a       	or	r10, r26
    1a18:	bb 2a       	or	r11, r27
    1a1a:	5f cf       	rjmp	.-322    	; 0x18da <__vector_7+0x6a>
    1a1c:	ca 01       	movw	r24, r20
    1a1e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a22:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a26:	42 1b       	sub	r20, r18
    1a28:	53 0b       	sbc	r21, r19
    1a2a:	41 30       	cpi	r20, 0x01	; 1
    1a2c:	51 05       	cpc	r21, r1
    1a2e:	51 f0       	breq	.+20     	; 0x1a44 <__vector_7+0x1d4>
    1a30:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a34:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a38:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a3c:	82 60       	ori	r24, 0x02	; 2
    1a3e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a42:	b6 cf       	rjmp	.-148    	; 0x19b0 <__vector_7+0x140>
    1a44:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a48:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a4c:	01 96       	adiw	r24, 0x01	; 1
    1a4e:	f0 cf       	rjmp	.-32     	; 0x1a30 <__vector_7+0x1c0>

00001a50 <async>:
    1a50:	3f 92       	push	r3
    1a52:	4f 92       	push	r4
    1a54:	5f 92       	push	r5
    1a56:	6f 92       	push	r6
    1a58:	7f 92       	push	r7
    1a5a:	8f 92       	push	r8
    1a5c:	9f 92       	push	r9
    1a5e:	af 92       	push	r10
    1a60:	bf 92       	push	r11
    1a62:	cf 92       	push	r12
    1a64:	df 92       	push	r13
    1a66:	ef 92       	push	r14
    1a68:	ff 92       	push	r15
    1a6a:	0f 93       	push	r16
    1a6c:	1f 93       	push	r17
    1a6e:	cf 93       	push	r28
    1a70:	df 93       	push	r29
    1a72:	ef b7       	in	r30, 0x3f	; 63
    1a74:	e0 78       	andi	r30, 0x80	; 128
    1a76:	3e 2e       	mov	r3, r30
    1a78:	f8 94       	cli
    1a7a:	c0 91 06 01 	lds	r28, 0x0106	; 0x800106 <msgPool>
    1a7e:	d0 91 07 01 	lds	r29, 0x0107	; 0x800107 <msgPool+0x1>
    1a82:	20 97       	sbiw	r28, 0x00	; 0
    1a84:	09 f4       	brne	.+2      	; 0x1a88 <async+0x38>
    1a86:	52 c1       	rjmp	.+676    	; 0x1d2c <async+0x2dc>
    1a88:	e8 81       	ld	r30, Y
    1a8a:	f9 81       	ldd	r31, Y+1	; 0x01
    1a8c:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <msgPool+0x1>
    1a90:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <msgPool>
    1a94:	1b 87       	std	Y+11, r17	; 0x0b
    1a96:	0a 87       	std	Y+10, r16	; 0x0a
    1a98:	fd 86       	std	Y+13, r15	; 0x0d
    1a9a:	ec 86       	std	Y+12, r14	; 0x0c
    1a9c:	df 86       	std	Y+15, r13	; 0x0f
    1a9e:	ce 86       	std	Y+14, r12	; 0x0e
    1aa0:	33 20       	and	r3, r3
    1aa2:	09 f4       	brne	.+2      	; 0x1aa6 <async+0x56>
    1aa4:	6f c0       	rjmp	.+222    	; 0x1b84 <async+0x134>
    1aa6:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1aaa:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1aae:	02 80       	ldd	r0, Z+2	; 0x02
    1ab0:	f3 81       	ldd	r31, Z+3	; 0x03
    1ab2:	e0 2d       	mov	r30, r0
    1ab4:	c2 80       	ldd	r12, Z+2	; 0x02
    1ab6:	d3 80       	ldd	r13, Z+3	; 0x03
    1ab8:	e4 80       	ldd	r14, Z+4	; 0x04
    1aba:	f5 80       	ldd	r15, Z+5	; 0x05
    1abc:	c6 0e       	add	r12, r22
    1abe:	d7 1e       	adc	r13, r23
    1ac0:	e8 1e       	adc	r14, r24
    1ac2:	f9 1e       	adc	r15, r25
    1ac4:	ca 82       	std	Y+2, r12	; 0x02
    1ac6:	db 82       	std	Y+3, r13	; 0x03
    1ac8:	ec 82       	std	Y+4, r14	; 0x04
    1aca:	fd 82       	std	Y+5, r15	; 0x05
    1acc:	12 16       	cp	r1, r18
    1ace:	13 06       	cpc	r1, r19
    1ad0:	14 06       	cpc	r1, r20
    1ad2:	15 06       	cpc	r1, r21
    1ad4:	0c f0       	brlt	.+2      	; 0x1ad8 <async+0x88>
    1ad6:	f8 c0       	rjmp	.+496    	; 0x1cc8 <async+0x278>
    1ad8:	da 01       	movw	r26, r20
    1ada:	c9 01       	movw	r24, r18
    1adc:	8c 01       	movw	r16, r24
    1ade:	9d 01       	movw	r18, r26
    1ae0:	0c 0d       	add	r16, r12
    1ae2:	1d 1d       	adc	r17, r13
    1ae4:	2e 1d       	adc	r18, r14
    1ae6:	3f 1d       	adc	r19, r15
    1ae8:	0e 83       	std	Y+6, r16	; 0x06
    1aea:	1f 83       	std	Y+7, r17	; 0x07
    1aec:	28 87       	std	Y+8, r18	; 0x08
    1aee:	39 87       	std	Y+9, r19	; 0x09
    1af0:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1af4:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1af8:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1afc:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b00:	b0 99       	sbic	0x16, 0	; 22
    1b02:	49 c0       	rjmp	.+146    	; 0x1b96 <async+0x146>
    1b04:	2c 01       	movw	r4, r24
    1b06:	09 2e       	mov	r0, r25
    1b08:	00 0c       	add	r0, r0
    1b0a:	66 08       	sbc	r6, r6
    1b0c:	77 08       	sbc	r7, r7
    1b0e:	52 01       	movw	r10, r4
    1b10:	99 24       	eor	r9, r9
    1b12:	88 24       	eor	r8, r8
    1b14:	2b 01       	movw	r4, r22
    1b16:	61 2c       	mov	r6, r1
    1b18:	71 2c       	mov	r7, r1
    1b1a:	48 28       	or	r4, r8
    1b1c:	59 28       	or	r5, r9
    1b1e:	6a 28       	or	r6, r10
    1b20:	7b 28       	or	r7, r11
    1b22:	b7 01       	movw	r22, r14
    1b24:	a6 01       	movw	r20, r12
    1b26:	44 19       	sub	r20, r4
    1b28:	55 09       	sbc	r21, r5
    1b2a:	66 09       	sbc	r22, r6
    1b2c:	77 09       	sbc	r23, r7
    1b2e:	14 16       	cp	r1, r20
    1b30:	15 06       	cpc	r1, r21
    1b32:	16 06       	cpc	r1, r22
    1b34:	17 06       	cpc	r1, r23
    1b36:	0c f0       	brlt	.+2      	; 0x1b3a <async+0xea>
    1b38:	68 c0       	rjmp	.+208    	; 0x1c0a <async+0x1ba>
    1b3a:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <timerQ>
    1b3e:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <timerQ+0x1>
    1b42:	10 97       	sbiw	r26, 0x00	; 0
    1b44:	09 f4       	brne	.+2      	; 0x1b48 <async+0xf8>
    1b46:	dc c0       	rjmp	.+440    	; 0x1d00 <async+0x2b0>
    1b48:	12 96       	adiw	r26, 0x02	; 2
    1b4a:	0d 91       	ld	r16, X+
    1b4c:	1d 91       	ld	r17, X+
    1b4e:	2d 91       	ld	r18, X+
    1b50:	3c 91       	ld	r19, X
    1b52:	15 97       	sbiw	r26, 0x05	; 5
    1b54:	c0 16       	cp	r12, r16
    1b56:	d1 06       	cpc	r13, r17
    1b58:	e2 06       	cpc	r14, r18
    1b5a:	f3 06       	cpc	r15, r19
    1b5c:	5c f4       	brge	.+22     	; 0x1b74 <async+0x124>
    1b5e:	d0 c0       	rjmp	.+416    	; 0x1d00 <async+0x2b0>
    1b60:	42 81       	ldd	r20, Z+2	; 0x02
    1b62:	53 81       	ldd	r21, Z+3	; 0x03
    1b64:	64 81       	ldd	r22, Z+4	; 0x04
    1b66:	75 81       	ldd	r23, Z+5	; 0x05
    1b68:	c4 16       	cp	r12, r20
    1b6a:	d5 06       	cpc	r13, r21
    1b6c:	e6 06       	cpc	r14, r22
    1b6e:	f7 06       	cpc	r15, r23
    1b70:	4c f1       	brlt	.+82     	; 0x1bc4 <async+0x174>
    1b72:	df 01       	movw	r26, r30
    1b74:	ed 91       	ld	r30, X+
    1b76:	fc 91       	ld	r31, X
    1b78:	11 97       	sbiw	r26, 0x01	; 1
    1b7a:	30 97       	sbiw	r30, 0x00	; 0
    1b7c:	89 f7       	brne	.-30     	; 0x1b60 <async+0x110>
    1b7e:	19 82       	std	Y+1, r1	; 0x01
    1b80:	18 82       	st	Y, r1
    1b82:	22 c0       	rjmp	.+68     	; 0x1bc8 <async+0x178>
    1b84:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <timestamp>
    1b88:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <timestamp+0x1>
    1b8c:	e0 90 38 01 	lds	r14, 0x0138	; 0x800138 <timestamp+0x2>
    1b90:	f0 90 39 01 	lds	r15, 0x0139	; 0x800139 <timestamp+0x3>
    1b94:	93 cf       	rjmp	.-218    	; 0x1abc <async+0x6c>
    1b96:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b9a:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b9e:	2c 01       	movw	r4, r24
    1ba0:	4f ef       	ldi	r20, 0xFF	; 255
    1ba2:	44 1a       	sub	r4, r20
    1ba4:	54 0a       	sbc	r5, r20
    1ba6:	05 2c       	mov	r0, r5
    1ba8:	00 0c       	add	r0, r0
    1baa:	66 08       	sbc	r6, r6
    1bac:	77 08       	sbc	r7, r7
    1bae:	b2 01       	movw	r22, r4
    1bb0:	55 27       	eor	r21, r21
    1bb2:	44 27       	eor	r20, r20
    1bb4:	2f 01       	movw	r4, r30
    1bb6:	61 2c       	mov	r6, r1
    1bb8:	71 2c       	mov	r7, r1
    1bba:	44 2a       	or	r4, r20
    1bbc:	55 2a       	or	r5, r21
    1bbe:	66 2a       	or	r6, r22
    1bc0:	77 2a       	or	r7, r23
    1bc2:	af cf       	rjmp	.-162    	; 0x1b22 <async+0xd2>
    1bc4:	f9 83       	std	Y+1, r31	; 0x01
    1bc6:	e8 83       	st	Y, r30
    1bc8:	cd 93       	st	X+, r28
    1bca:	dc 93       	st	X, r29
    1bcc:	82 17       	cp	r24, r18
    1bce:	93 07       	cpc	r25, r19
    1bd0:	09 f4       	brne	.+2      	; 0x1bd4 <async+0x184>
    1bd2:	7f c0       	rjmp	.+254    	; 0x1cd2 <async+0x282>
    1bd4:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1bd8:	8d 7f       	andi	r24, 0xFD	; 253
    1bda:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1bde:	33 20       	and	r3, r3
    1be0:	09 f0       	breq	.+2      	; 0x1be4 <async+0x194>
    1be2:	78 94       	sei
    1be4:	ce 01       	movw	r24, r28
    1be6:	df 91       	pop	r29
    1be8:	cf 91       	pop	r28
    1bea:	1f 91       	pop	r17
    1bec:	0f 91       	pop	r16
    1bee:	ff 90       	pop	r15
    1bf0:	ef 90       	pop	r14
    1bf2:	df 90       	pop	r13
    1bf4:	cf 90       	pop	r12
    1bf6:	bf 90       	pop	r11
    1bf8:	af 90       	pop	r10
    1bfa:	9f 90       	pop	r9
    1bfc:	8f 90       	pop	r8
    1bfe:	7f 90       	pop	r7
    1c00:	6f 90       	pop	r6
    1c02:	5f 90       	pop	r5
    1c04:	4f 90       	pop	r4
    1c06:	3f 90       	pop	r3
    1c08:	08 95       	ret
    1c0a:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <msgQ>
    1c0e:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <msgQ+0x1>
    1c12:	10 97       	sbiw	r26, 0x00	; 0
    1c14:	09 f4       	brne	.+2      	; 0x1c18 <async+0x1c8>
    1c16:	83 c0       	rjmp	.+262    	; 0x1d1e <async+0x2ce>
    1c18:	16 96       	adiw	r26, 0x06	; 6
    1c1a:	cd 90       	ld	r12, X+
    1c1c:	dd 90       	ld	r13, X+
    1c1e:	ed 90       	ld	r14, X+
    1c20:	fc 90       	ld	r15, X
    1c22:	19 97       	sbiw	r26, 0x09	; 9
    1c24:	0c 15       	cp	r16, r12
    1c26:	1d 05       	cpc	r17, r13
    1c28:	2e 05       	cpc	r18, r14
    1c2a:	3f 05       	cpc	r19, r15
    1c2c:	64 f4       	brge	.+24     	; 0x1c46 <async+0x1f6>
    1c2e:	77 c0       	rjmp	.+238    	; 0x1d1e <async+0x2ce>
    1c30:	c6 80       	ldd	r12, Z+6	; 0x06
    1c32:	d7 80       	ldd	r13, Z+7	; 0x07
    1c34:	e0 84       	ldd	r14, Z+8	; 0x08
    1c36:	f1 84       	ldd	r15, Z+9	; 0x09
    1c38:	0c 15       	cp	r16, r12
    1c3a:	1d 05       	cpc	r17, r13
    1c3c:	2e 05       	cpc	r18, r14
    1c3e:	3f 05       	cpc	r19, r15
    1c40:	0c f4       	brge	.+2      	; 0x1c44 <async+0x1f4>
    1c42:	5b c0       	rjmp	.+182    	; 0x1cfa <async+0x2aa>
    1c44:	df 01       	movw	r26, r30
    1c46:	ed 91       	ld	r30, X+
    1c48:	fc 91       	ld	r31, X
    1c4a:	11 97       	sbiw	r26, 0x01	; 1
    1c4c:	30 97       	sbiw	r30, 0x00	; 0
    1c4e:	81 f7       	brne	.-32     	; 0x1c30 <async+0x1e0>
    1c50:	19 82       	std	Y+1, r1	; 0x01
    1c52:	18 82       	st	Y, r1
    1c54:	cd 93       	st	X+, r28
    1c56:	dc 93       	st	X, r29
    1c58:	33 20       	and	r3, r3
    1c5a:	21 f2       	breq	.-120    	; 0x1be4 <async+0x194>
    1c5c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1c60:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1c64:	00 97       	sbiw	r24, 0x00	; 0
    1c66:	09 f4       	brne	.+2      	; 0x1c6a <async+0x21a>
    1c68:	bc cf       	rjmp	.-136    	; 0x1be2 <async+0x192>
    1c6a:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1c6e:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1c72:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <msgQ>
    1c76:	30 91 3d 01 	lds	r19, 0x013D	; 0x80013d <msgQ+0x1>
    1c7a:	02 81       	ldd	r16, Z+2	; 0x02
    1c7c:	13 81       	ldd	r17, Z+3	; 0x03
    1c7e:	d9 01       	movw	r26, r18
    1c80:	16 96       	adiw	r26, 0x06	; 6
    1c82:	4d 91       	ld	r20, X+
    1c84:	5d 91       	ld	r21, X+
    1c86:	6d 91       	ld	r22, X+
    1c88:	7c 91       	ld	r23, X
    1c8a:	19 97       	sbiw	r26, 0x09	; 9
    1c8c:	d8 01       	movw	r26, r16
    1c8e:	16 96       	adiw	r26, 0x06	; 6
    1c90:	0d 91       	ld	r16, X+
    1c92:	1d 91       	ld	r17, X+
    1c94:	2d 91       	ld	r18, X+
    1c96:	3c 91       	ld	r19, X
    1c98:	19 97       	sbiw	r26, 0x09	; 9
    1c9a:	40 1b       	sub	r20, r16
    1c9c:	51 0b       	sbc	r21, r17
    1c9e:	62 0b       	sbc	r22, r18
    1ca0:	73 0b       	sbc	r23, r19
    1ca2:	77 ff       	sbrs	r23, 7
    1ca4:	9e cf       	rjmp	.-196    	; 0x1be2 <async+0x192>
    1ca6:	dc 01       	movw	r26, r24
    1ca8:	2d 91       	ld	r18, X+
    1caa:	3c 91       	ld	r19, X
    1cac:	11 97       	sbiw	r26, 0x01	; 1
    1cae:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1cb2:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1cb6:	ed 93       	st	X+, r30
    1cb8:	fc 93       	st	X, r31
    1cba:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1cbe:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1cc2:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <dispatch>
    1cc6:	8d cf       	rjmp	.-230    	; 0x1be2 <async+0x192>
    1cc8:	8f ef       	ldi	r24, 0xFF	; 255
    1cca:	9f ef       	ldi	r25, 0xFF	; 255
    1ccc:	af ef       	ldi	r26, 0xFF	; 255
    1cce:	bf e7       	ldi	r27, 0x7F	; 127
    1cd0:	05 cf       	rjmp	.-502    	; 0x1adc <async+0x8c>
    1cd2:	c8 01       	movw	r24, r16
    1cd4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cd8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cdc:	04 1b       	sub	r16, r20
    1cde:	15 0b       	sbc	r17, r21
    1ce0:	01 30       	cpi	r16, 0x01	; 1
    1ce2:	11 05       	cpc	r17, r1
    1ce4:	b1 f0       	breq	.+44     	; 0x1d12 <async+0x2c2>
    1ce6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1cea:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1cee:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1cf2:	82 60       	ori	r24, 0x02	; 2
    1cf4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1cf8:	72 cf       	rjmp	.-284    	; 0x1bde <async+0x18e>
    1cfa:	f9 83       	std	Y+1, r31	; 0x01
    1cfc:	e8 83       	st	Y, r30
    1cfe:	aa cf       	rjmp	.-172    	; 0x1c54 <async+0x204>
    1d00:	b9 83       	std	Y+1, r27	; 0x01
    1d02:	a8 83       	st	Y, r26
    1d04:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    1d08:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    1d0c:	97 01       	movw	r18, r14
    1d0e:	86 01       	movw	r16, r12
    1d10:	5d cf       	rjmp	.-326    	; 0x1bcc <async+0x17c>
    1d12:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d16:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d1a:	01 96       	adiw	r24, 0x01	; 1
    1d1c:	e4 cf       	rjmp	.-56     	; 0x1ce6 <async+0x296>
    1d1e:	b9 83       	std	Y+1, r27	; 0x01
    1d20:	a8 83       	st	Y, r26
    1d22:	d0 93 3d 01 	sts	0x013D, r29	; 0x80013d <msgQ+0x1>
    1d26:	c0 93 3c 01 	sts	0x013C, r28	; 0x80013c <msgQ>
    1d2a:	96 cf       	rjmp	.-212    	; 0x1c58 <async+0x208>
    1d2c:	0e 94 42 04 	call	0x884	; 0x884 <dequeue.part.0>

00001d30 <sync>:
    1d30:	cf 92       	push	r12
    1d32:	df 92       	push	r13
    1d34:	ef 92       	push	r14
    1d36:	ff 92       	push	r15
    1d38:	0f 93       	push	r16
    1d3a:	1f 93       	push	r17
    1d3c:	cf 93       	push	r28
    1d3e:	df 93       	push	r29
    1d40:	ec 01       	movw	r28, r24
    1d42:	7b 01       	movw	r14, r22
    1d44:	6a 01       	movw	r12, r20
    1d46:	1f b7       	in	r17, 0x3f	; 63
    1d48:	10 78       	andi	r17, 0x80	; 128
    1d4a:	f8 94       	cli
    1d4c:	a8 81       	ld	r26, Y
    1d4e:	b9 81       	ldd	r27, Y+1	; 0x01
    1d50:	10 97       	sbiw	r26, 0x00	; 0
    1d52:	19 f4       	brne	.+6      	; 0x1d5a <sync+0x2a>
    1d54:	62 c0       	rjmp	.+196    	; 0x1e1a <sync+0xea>
    1d56:	a0 81       	ld	r26, Z
    1d58:	b1 81       	ldd	r27, Z+1	; 0x01
    1d5a:	14 96       	adiw	r26, 0x04	; 4
    1d5c:	ed 91       	ld	r30, X+
    1d5e:	fc 91       	ld	r31, X
    1d60:	15 97       	sbiw	r26, 0x05	; 5
    1d62:	30 97       	sbiw	r30, 0x00	; 0
    1d64:	c1 f7       	brne	.-16     	; 0x1d56 <sync+0x26>
    1d66:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d6a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d6e:	2a 17       	cp	r18, r26
    1d70:	3b 07       	cpc	r19, r27
    1d72:	09 f4       	brne	.+2      	; 0x1d76 <sync+0x46>
    1d74:	4c c0       	rjmp	.+152    	; 0x1e0e <sync+0xde>
    1d76:	11 23       	and	r17, r17
    1d78:	a1 f1       	breq	.+104    	; 0x1de2 <sync+0xb2>
    1d7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d7c:	9b 81       	ldd	r25, Y+3	; 0x03
    1d7e:	00 97       	sbiw	r24, 0x00	; 0
    1d80:	19 f0       	breq	.+6      	; 0x1d88 <sync+0x58>
    1d82:	fc 01       	movw	r30, r24
    1d84:	15 82       	std	Z+5, r1	; 0x05
    1d86:	14 82       	std	Z+4, r1	; 0x04
    1d88:	3b 83       	std	Y+3, r19	; 0x03
    1d8a:	2a 83       	std	Y+2, r18	; 0x02
    1d8c:	f9 01       	movw	r30, r18
    1d8e:	d5 83       	std	Z+5, r29	; 0x05
    1d90:	c4 83       	std	Z+4, r28	; 0x04
    1d92:	cd 01       	movw	r24, r26
    1d94:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <dispatch>
    1d98:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d9c:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1da0:	82 81       	ldd	r24, Z+2	; 0x02
    1da2:	93 81       	ldd	r25, Z+3	; 0x03
    1da4:	89 2b       	or	r24, r25
    1da6:	09 f4       	brne	.+2      	; 0x1daa <sync+0x7a>
    1da8:	41 c0       	rjmp	.+130    	; 0x1e2c <sync+0xfc>
    1daa:	f9 83       	std	Y+1, r31	; 0x01
    1dac:	e8 83       	st	Y, r30
    1dae:	8a 81       	ldd	r24, Y+2	; 0x02
    1db0:	9b 81       	ldd	r25, Y+3	; 0x03
    1db2:	01 97       	sbiw	r24, 0x01	; 1
    1db4:	09 f0       	breq	.+2      	; 0x1db8 <sync+0x88>
    1db6:	78 94       	sei
    1db8:	b6 01       	movw	r22, r12
    1dba:	ce 01       	movw	r24, r28
    1dbc:	f7 01       	movw	r30, r14
    1dbe:	09 95       	icall
    1dc0:	f8 2e       	mov	r15, r24
    1dc2:	09 2f       	mov	r16, r25
    1dc4:	8f b7       	in	r24, 0x3f	; 63
    1dc6:	f8 94       	cli
    1dc8:	19 82       	std	Y+1, r1	; 0x01
    1dca:	18 82       	st	Y, r1
    1dcc:	8a 81       	ldd	r24, Y+2	; 0x02
    1dce:	9b 81       	ldd	r25, Y+3	; 0x03
    1dd0:	82 30       	cpi	r24, 0x02	; 2
    1dd2:	91 05       	cpc	r25, r1
    1dd4:	a0 f4       	brcc	.+40     	; 0x1dfe <sync+0xce>
    1dd6:	11 23       	and	r17, r17
    1dd8:	79 f0       	breq	.+30     	; 0x1df8 <sync+0xc8>
    1dda:	78 94       	sei
    1ddc:	8f 2d       	mov	r24, r15
    1dde:	90 2f       	mov	r25, r16
    1de0:	02 c0       	rjmp	.+4      	; 0x1de6 <sync+0xb6>
    1de2:	8f ef       	ldi	r24, 0xFF	; 255
    1de4:	9f ef       	ldi	r25, 0xFF	; 255
    1de6:	df 91       	pop	r29
    1de8:	cf 91       	pop	r28
    1dea:	1f 91       	pop	r17
    1dec:	0f 91       	pop	r16
    1dee:	ff 90       	pop	r15
    1df0:	ef 90       	pop	r14
    1df2:	df 90       	pop	r13
    1df4:	cf 90       	pop	r12
    1df6:	08 95       	ret
    1df8:	8f 2d       	mov	r24, r15
    1dfa:	90 2f       	mov	r25, r16
    1dfc:	f4 cf       	rjmp	.-24     	; 0x1de6 <sync+0xb6>
    1dfe:	1b 82       	std	Y+3, r1	; 0x03
    1e00:	1a 82       	std	Y+2, r1	; 0x02
    1e02:	fc 01       	movw	r30, r24
    1e04:	15 82       	std	Z+5, r1	; 0x05
    1e06:	14 82       	std	Z+4, r1	; 0x04
    1e08:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <dispatch>
    1e0c:	e4 cf       	rjmp	.-56     	; 0x1dd6 <sync+0xa6>
    1e0e:	11 23       	and	r17, r17
    1e10:	41 f3       	breq	.-48     	; 0x1de2 <sync+0xb2>
    1e12:	78 94       	sei
    1e14:	8f ef       	ldi	r24, 0xFF	; 255
    1e16:	9f ef       	ldi	r25, 0xFF	; 255
    1e18:	e6 cf       	rjmp	.-52     	; 0x1de6 <sync+0xb6>
    1e1a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e1e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e22:	99 83       	std	Y+1, r25	; 0x01
    1e24:	88 83       	st	Y, r24
    1e26:	11 23       	and	r17, r17
    1e28:	39 f2       	breq	.-114    	; 0x1db8 <sync+0x88>
    1e2a:	c1 cf       	rjmp	.-126    	; 0x1dae <sync+0x7e>
    1e2c:	78 94       	sei
    1e2e:	80 e0       	ldi	r24, 0x00	; 0
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	d9 cf       	rjmp	.-78     	; 0x1de6 <sync+0xb6>

00001e34 <run>:
    1e34:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1e38:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1e3c:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e40:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e44:	20 97       	sbiw	r28, 0x00	; 0
    1e46:	09 f4       	brne	.+2      	; 0x1e4a <run+0x16>
    1e48:	6e c0       	rjmp	.+220    	; 0x1f26 <run+0xf2>
    1e4a:	88 81       	ld	r24, Y
    1e4c:	99 81       	ldd	r25, Y+1	; 0x01
    1e4e:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    1e52:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    1e56:	d3 83       	std	Z+3, r29	; 0x03
    1e58:	c2 83       	std	Z+2, r28	; 0x02
    1e5a:	78 94       	sei
    1e5c:	4e 85       	ldd	r20, Y+14	; 0x0e
    1e5e:	5f 85       	ldd	r21, Y+15	; 0x0f
    1e60:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e62:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e64:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e66:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e68:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <sync>
    1e6c:	8f b7       	in	r24, 0x3f	; 63
    1e6e:	f8 94       	cli
    1e70:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1e74:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1e78:	99 83       	std	Y+1, r25	; 0x01
    1e7a:	88 83       	st	Y, r24
    1e7c:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    1e80:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    1e84:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <activeStack>
    1e88:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <activeStack+0x1>
    1e8c:	f7 01       	movw	r30, r14
    1e8e:	a0 81       	ld	r26, Z
    1e90:	b1 81       	ldd	r27, Z+1	; 0x01
    1e92:	12 96       	adiw	r26, 0x02	; 2
    1e94:	8d 91       	ld	r24, X+
    1e96:	9c 91       	ld	r25, X
    1e98:	13 97       	sbiw	r26, 0x03	; 3
    1e9a:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1e9e:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1ea2:	20 97       	sbiw	r28, 0x00	; 0
    1ea4:	a9 f0       	breq	.+42     	; 0x1ed0 <run+0x9c>
    1ea6:	00 97       	sbiw	r24, 0x00	; 0
    1ea8:	49 f2       	breq	.-110    	; 0x1e3c <run+0x8>
    1eaa:	4e 81       	ldd	r20, Y+6	; 0x06
    1eac:	5f 81       	ldd	r21, Y+7	; 0x07
    1eae:	68 85       	ldd	r22, Y+8	; 0x08
    1eb0:	79 85       	ldd	r23, Y+9	; 0x09
    1eb2:	fc 01       	movw	r30, r24
    1eb4:	06 81       	ldd	r16, Z+6	; 0x06
    1eb6:	17 81       	ldd	r17, Z+7	; 0x07
    1eb8:	20 85       	ldd	r18, Z+8	; 0x08
    1eba:	31 85       	ldd	r19, Z+9	; 0x09
    1ebc:	40 1b       	sub	r20, r16
    1ebe:	51 0b       	sbc	r21, r17
    1ec0:	62 0b       	sbc	r22, r18
    1ec2:	73 0b       	sbc	r23, r19
    1ec4:	14 16       	cp	r1, r20
    1ec6:	15 06       	cpc	r1, r21
    1ec8:	16 06       	cpc	r1, r22
    1eca:	17 06       	cpc	r1, r23
    1ecc:	0c f0       	brlt	.+2      	; 0x1ed0 <run+0x9c>
    1ece:	b6 cf       	rjmp	.-148    	; 0x1e3c <run+0x8>
    1ed0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <activeStack+0x1>
    1ed4:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <activeStack>
    1ed8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1edc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1ee0:	f7 01       	movw	r30, r14
    1ee2:	91 83       	std	Z+1, r25	; 0x01
    1ee4:	80 83       	st	Z, r24
    1ee6:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <threadPool+0x1>
    1eea:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <threadPool>
    1eee:	14 96       	adiw	r26, 0x04	; 4
    1ef0:	ed 91       	ld	r30, X+
    1ef2:	fc 91       	ld	r31, X
    1ef4:	15 97       	sbiw	r26, 0x05	; 5
    1ef6:	30 97       	sbiw	r30, 0x00	; 0
    1ef8:	41 f0       	breq	.+16     	; 0x1f0a <run+0xd6>
    1efa:	a0 81       	ld	r26, Z
    1efc:	b1 81       	ldd	r27, Z+1	; 0x01
    1efe:	14 96       	adiw	r26, 0x04	; 4
    1f00:	ed 91       	ld	r30, X+
    1f02:	fc 91       	ld	r31, X
    1f04:	15 97       	sbiw	r26, 0x05	; 5
    1f06:	30 97       	sbiw	r30, 0x00	; 0
    1f08:	c1 f7       	brne	.-16     	; 0x1efa <run+0xc6>
    1f0a:	cd 01       	movw	r24, r26
    1f0c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <dispatch>
    1f10:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1f14:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1f18:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f1c:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f20:	20 97       	sbiw	r28, 0x00	; 0
    1f22:	09 f0       	breq	.+2      	; 0x1f26 <run+0xf2>
    1f24:	92 cf       	rjmp	.-220    	; 0x1e4a <run+0x16>
    1f26:	0e 94 42 04 	call	0x884	; 0x884 <dequeue.part.0>

00001f2a <ABORT>:
    1f2a:	cf 93       	push	r28
    1f2c:	df 93       	push	r29
    1f2e:	dc 01       	movw	r26, r24
    1f30:	4f b7       	in	r20, 0x3f	; 63
    1f32:	40 78       	andi	r20, 0x80	; 128
    1f34:	f8 94       	cli
    1f36:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    1f3a:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    1f3e:	20 97       	sbiw	r28, 0x00	; 0
    1f40:	69 f0       	breq	.+26     	; 0x1f5c <ABORT+0x32>
    1f42:	8c 17       	cp	r24, r28
    1f44:	9d 07       	cpc	r25, r29
    1f46:	31 f4       	brne	.+12     	; 0x1f54 <ABORT+0x2a>
    1f48:	6c c0       	rjmp	.+216    	; 0x2022 <ABORT+0xf8>
    1f4a:	ae 17       	cp	r26, r30
    1f4c:	bf 07       	cpc	r27, r31
    1f4e:	09 f4       	brne	.+2      	; 0x1f52 <ABORT+0x28>
    1f50:	47 c0       	rjmp	.+142    	; 0x1fe0 <ABORT+0xb6>
    1f52:	ef 01       	movw	r28, r30
    1f54:	e8 81       	ld	r30, Y
    1f56:	f9 81       	ldd	r31, Y+1	; 0x01
    1f58:	30 97       	sbiw	r30, 0x00	; 0
    1f5a:	b9 f7       	brne	.-18     	; 0x1f4a <ABORT+0x20>
    1f5c:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1f60:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1f64:	20 97       	sbiw	r28, 0x00	; 0
    1f66:	69 f0       	breq	.+26     	; 0x1f82 <ABORT+0x58>
    1f68:	ac 17       	cp	r26, r28
    1f6a:	bd 07       	cpc	r27, r29
    1f6c:	31 f4       	brne	.+12     	; 0x1f7a <ABORT+0x50>
    1f6e:	61 c0       	rjmp	.+194    	; 0x2032 <ABORT+0x108>
    1f70:	ae 17       	cp	r26, r30
    1f72:	bf 07       	cpc	r27, r31
    1f74:	09 f4       	brne	.+2      	; 0x1f78 <ABORT+0x4e>
    1f76:	4c c0       	rjmp	.+152    	; 0x2010 <ABORT+0xe6>
    1f78:	ef 01       	movw	r28, r30
    1f7a:	e8 81       	ld	r30, Y
    1f7c:	f9 81       	ldd	r31, Y+1	; 0x01
    1f7e:	30 97       	sbiw	r30, 0x00	; 0
    1f80:	b9 f7       	brne	.-18     	; 0x1f70 <ABORT+0x46>
    1f82:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1f86:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1f8a:	30 97       	sbiw	r30, 0x00	; 0
    1f8c:	d9 f1       	breq	.+118    	; 0x2004 <ABORT+0xda>
    1f8e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f92:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f96:	05 c0       	rjmp	.+10     	; 0x1fa2 <ABORT+0x78>
    1f98:	01 90       	ld	r0, Z+
    1f9a:	f0 81       	ld	r31, Z
    1f9c:	e0 2d       	mov	r30, r0
    1f9e:	30 97       	sbiw	r30, 0x00	; 0
    1fa0:	89 f1       	breq	.+98     	; 0x2004 <ABORT+0xda>
    1fa2:	e2 17       	cp	r30, r18
    1fa4:	f3 07       	cpc	r31, r19
    1fa6:	c1 f3       	breq	.-16     	; 0x1f98 <ABORT+0x6e>
    1fa8:	82 81       	ldd	r24, Z+2	; 0x02
    1faa:	93 81       	ldd	r25, Z+3	; 0x03
    1fac:	a8 17       	cp	r26, r24
    1fae:	b9 07       	cpc	r27, r25
    1fb0:	99 f7       	brne	.-26     	; 0x1f98 <ABORT+0x6e>
    1fb2:	64 81       	ldd	r22, Z+4	; 0x04
    1fb4:	75 81       	ldd	r23, Z+5	; 0x05
    1fb6:	1a 96       	adiw	r26, 0x0a	; 10
    1fb8:	8d 91       	ld	r24, X+
    1fba:	9c 91       	ld	r25, X
    1fbc:	1b 97       	sbiw	r26, 0x0b	; 11
    1fbe:	68 17       	cp	r22, r24
    1fc0:	79 07       	cpc	r23, r25
    1fc2:	51 f7       	brne	.-44     	; 0x1f98 <ABORT+0x6e>
    1fc4:	13 82       	std	Z+3, r1	; 0x03
    1fc6:	12 82       	std	Z+2, r1	; 0x02
    1fc8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1fcc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1fd0:	11 96       	adiw	r26, 0x01	; 1
    1fd2:	9c 93       	st	X, r25
    1fd4:	8e 93       	st	-X, r24
    1fd6:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    1fda:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    1fde:	12 c0       	rjmp	.+36     	; 0x2004 <ABORT+0xda>
    1fe0:	20 97       	sbiw	r28, 0x00	; 0
    1fe2:	01 f1       	breq	.+64     	; 0x2024 <ABORT+0xfa>
    1fe4:	8d 91       	ld	r24, X+
    1fe6:	9c 91       	ld	r25, X
    1fe8:	11 97       	sbiw	r26, 0x01	; 1
    1fea:	99 83       	std	Y+1, r25	; 0x01
    1fec:	88 83       	st	Y, r24
    1fee:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1ff2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1ff6:	11 96       	adiw	r26, 0x01	; 1
    1ff8:	9c 93       	st	X, r25
    1ffa:	8e 93       	st	-X, r24
    1ffc:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    2000:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    2004:	44 23       	and	r20, r20
    2006:	09 f0       	breq	.+2      	; 0x200a <ABORT+0xe0>
    2008:	78 94       	sei
    200a:	df 91       	pop	r29
    200c:	cf 91       	pop	r28
    200e:	08 95       	ret
    2010:	20 97       	sbiw	r28, 0x00	; 0
    2012:	41 f7       	brne	.-48     	; 0x1fe4 <ABORT+0xba>
    2014:	80 81       	ld	r24, Z
    2016:	91 81       	ldd	r25, Z+1	; 0x01
    2018:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    201c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    2020:	e6 cf       	rjmp	.-52     	; 0x1fee <ABORT+0xc4>
    2022:	fc 01       	movw	r30, r24
    2024:	80 81       	ld	r24, Z
    2026:	91 81       	ldd	r25, Z+1	; 0x01
    2028:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timerQ+0x1>
    202c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timerQ>
    2030:	de cf       	rjmp	.-68     	; 0x1fee <ABORT+0xc4>
    2032:	fd 01       	movw	r30, r26
    2034:	ef cf       	rjmp	.-34     	; 0x2014 <ABORT+0xea>

00002036 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    2036:	42 31       	cpi	r20, 0x12	; 18
    2038:	b8 f4       	brcc	.+46     	; 0x2068 <install+0x32>
        char status;
        DISABLE(status);
    203a:	2f b7       	in	r18, 0x3f	; 63
    203c:	f8 94       	cli
        otable[i] = obj;
    203e:	50 e0       	ldi	r21, 0x00	; 0
    2040:	44 0f       	add	r20, r20
    2042:	55 1f       	adc	r21, r21
    2044:	fa 01       	movw	r30, r20
    2046:	ee 5b       	subi	r30, 0xBE	; 190
    2048:	fe 4f       	sbci	r31, 0xFE	; 254
    204a:	91 83       	std	Z+1, r25	; 0x01
    204c:	80 83       	st	Z, r24
        mtable[i] = m;
    204e:	fa 01       	movw	r30, r20
    2050:	e6 52       	subi	r30, 0x26	; 38
    2052:	fe 4f       	sbci	r31, 0xFE	; 254
    2054:	71 83       	std	Z+1, r23	; 0x01
    2056:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2058:	41 e0       	ldi	r20, 0x01	; 1
    205a:	50 e0       	ldi	r21, 0x00	; 0
    205c:	fc 01       	movw	r30, r24
    205e:	53 83       	std	Z+3, r21	; 0x03
    2060:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    2062:	27 ff       	sbrs	r18, 7
    2064:	01 c0       	rjmp	.+2      	; 0x2068 <install+0x32>
    2066:	78 94       	sei
    2068:	08 95       	ret

0000206a <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    206a:	8c 01       	movw	r16, r24
    206c:	7b 01       	movw	r14, r22
    206e:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    2070:	8f b7       	in	r24, 0x3f	; 63
    2072:	f8 94       	cli
    initialize();
    2074:	0e 94 77 03 	call	0x6ee	; 0x6ee <initialize>
    ENABLE(1);
    2078:	78 94       	sei
    if (m != NULL)
    207a:	e1 14       	cp	r14, r1
    207c:	f1 04       	cpc	r15, r1
    207e:	41 f0       	breq	.+16     	; 0x2090 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    2080:	20 e0       	ldi	r18, 0x00	; 0
    2082:	30 e0       	ldi	r19, 0x00	; 0
    2084:	a9 01       	movw	r20, r18
    2086:	60 e0       	ldi	r22, 0x00	; 0
    2088:	70 e0       	ldi	r23, 0x00	; 0
    208a:	cb 01       	movw	r24, r22
    208c:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <async>
    DISABLE(status);
    2090:	8f b7       	in	r24, 0x3f	; 63
    2092:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    2094:	0e 94 02 04 	call	0x804	; 0x804 <schedule>
    ENABLE(1);
    2098:	78 94       	sei
    while (1) {
        SLEEP();
    209a:	81 e0       	ldi	r24, 0x01	; 1
    209c:	83 bf       	out	0x33, r24	; 51
    209e:	88 95       	sleep
    20a0:	fd cf       	rjmp	.-6      	; 0x209c <tinytimber+0x32>

000020a2 <__divmodhi4>:
    20a2:	97 fb       	bst	r25, 7
    20a4:	07 2e       	mov	r0, r23
    20a6:	16 f4       	brtc	.+4      	; 0x20ac <__divmodhi4+0xa>
    20a8:	00 94       	com	r0
    20aa:	07 d0       	rcall	.+14     	; 0x20ba <__divmodhi4_neg1>
    20ac:	77 fd       	sbrc	r23, 7
    20ae:	09 d0       	rcall	.+18     	; 0x20c2 <__divmodhi4_neg2>
    20b0:	0e 94 65 10 	call	0x20ca	; 0x20ca <__udivmodhi4>
    20b4:	07 fc       	sbrc	r0, 7
    20b6:	05 d0       	rcall	.+10     	; 0x20c2 <__divmodhi4_neg2>
    20b8:	3e f4       	brtc	.+14     	; 0x20c8 <__divmodhi4_exit>

000020ba <__divmodhi4_neg1>:
    20ba:	90 95       	com	r25
    20bc:	81 95       	neg	r24
    20be:	9f 4f       	sbci	r25, 0xFF	; 255
    20c0:	08 95       	ret

000020c2 <__divmodhi4_neg2>:
    20c2:	70 95       	com	r23
    20c4:	61 95       	neg	r22
    20c6:	7f 4f       	sbci	r23, 0xFF	; 255

000020c8 <__divmodhi4_exit>:
    20c8:	08 95       	ret

000020ca <__udivmodhi4>:
    20ca:	aa 1b       	sub	r26, r26
    20cc:	bb 1b       	sub	r27, r27
    20ce:	51 e1       	ldi	r21, 0x11	; 17
    20d0:	07 c0       	rjmp	.+14     	; 0x20e0 <__udivmodhi4_ep>

000020d2 <__udivmodhi4_loop>:
    20d2:	aa 1f       	adc	r26, r26
    20d4:	bb 1f       	adc	r27, r27
    20d6:	a6 17       	cp	r26, r22
    20d8:	b7 07       	cpc	r27, r23
    20da:	10 f0       	brcs	.+4      	; 0x20e0 <__udivmodhi4_ep>
    20dc:	a6 1b       	sub	r26, r22
    20de:	b7 0b       	sbc	r27, r23

000020e0 <__udivmodhi4_ep>:
    20e0:	88 1f       	adc	r24, r24
    20e2:	99 1f       	adc	r25, r25
    20e4:	5a 95       	dec	r21
    20e6:	a9 f7       	brne	.-22     	; 0x20d2 <__udivmodhi4_loop>
    20e8:	80 95       	com	r24
    20ea:	90 95       	com	r25
    20ec:	bc 01       	movw	r22, r24
    20ee:	cd 01       	movw	r24, r26
    20f0:	08 95       	ret

000020f2 <setjmp>:
    20f2:	dc 01       	movw	r26, r24
    20f4:	2d 92       	st	X+, r2
    20f6:	3d 92       	st	X+, r3
    20f8:	4d 92       	st	X+, r4
    20fa:	5d 92       	st	X+, r5
    20fc:	6d 92       	st	X+, r6
    20fe:	7d 92       	st	X+, r7
    2100:	8d 92       	st	X+, r8
    2102:	9d 92       	st	X+, r9
    2104:	ad 92       	st	X+, r10
    2106:	bd 92       	st	X+, r11
    2108:	cd 92       	st	X+, r12
    210a:	dd 92       	st	X+, r13
    210c:	ed 92       	st	X+, r14
    210e:	fd 92       	st	X+, r15
    2110:	0d 93       	st	X+, r16
    2112:	1d 93       	st	X+, r17
    2114:	cd 93       	st	X+, r28
    2116:	dd 93       	st	X+, r29
    2118:	ff 91       	pop	r31
    211a:	ef 91       	pop	r30
    211c:	8d b7       	in	r24, 0x3d	; 61
    211e:	8d 93       	st	X+, r24
    2120:	8e b7       	in	r24, 0x3e	; 62
    2122:	8d 93       	st	X+, r24
    2124:	8f b7       	in	r24, 0x3f	; 63
    2126:	8d 93       	st	X+, r24
    2128:	ed 93       	st	X+, r30
    212a:	fd 93       	st	X+, r31
    212c:	88 27       	eor	r24, r24
    212e:	99 27       	eor	r25, r25
    2130:	09 94       	ijmp

00002132 <longjmp>:
    2132:	dc 01       	movw	r26, r24
    2134:	cb 01       	movw	r24, r22
    2136:	81 30       	cpi	r24, 0x01	; 1
    2138:	91 05       	cpc	r25, r1
    213a:	81 1d       	adc	r24, r1
    213c:	2d 90       	ld	r2, X+
    213e:	3d 90       	ld	r3, X+
    2140:	4d 90       	ld	r4, X+
    2142:	5d 90       	ld	r5, X+
    2144:	6d 90       	ld	r6, X+
    2146:	7d 90       	ld	r7, X+
    2148:	8d 90       	ld	r8, X+
    214a:	9d 90       	ld	r9, X+
    214c:	ad 90       	ld	r10, X+
    214e:	bd 90       	ld	r11, X+
    2150:	cd 90       	ld	r12, X+
    2152:	dd 90       	ld	r13, X+
    2154:	ed 90       	ld	r14, X+
    2156:	fd 90       	ld	r15, X+
    2158:	0d 91       	ld	r16, X+
    215a:	1d 91       	ld	r17, X+
    215c:	cd 91       	ld	r28, X+
    215e:	dd 91       	ld	r29, X+
    2160:	ed 91       	ld	r30, X+
    2162:	fd 91       	ld	r31, X+
    2164:	0d 90       	ld	r0, X+
    2166:	f8 94       	cli
    2168:	fe bf       	out	0x3e, r31	; 62
    216a:	0f be       	out	0x3f, r0	; 63
    216c:	ed bf       	out	0x3d, r30	; 61
    216e:	ed 91       	ld	r30, X+
    2170:	fd 91       	ld	r31, X+
    2172:	09 94       	ijmp

00002174 <_exit>:
    2174:	f8 94       	cli

00002176 <__stop_program>:
    2176:	ff cf       	rjmp	.-2      	; 0x2176 <__stop_program>
