
D0003E-Lab5-Traffic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00002214  000022a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002214  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800134  00800134  000022dc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000022dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000230c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000250  00000000  00000000  0000234c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b41  00000000  00000000  0000259c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010c1  00000000  00000000  000050dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000166b  00000000  00000000  0000619e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c2c  00000000  00000000  0000780c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000994  00000000  00000000  00008438  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000260a  00000000  00000000  00008dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  0000b3d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 7d 05 	jmp	0xafa	; 0xafa <__vector_1>
       8:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__vector_2>
       c:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__vector_3>
      10:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__vector_4>
      14:	0c 94 39 07 	jmp	0xe72	; 0xe72 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 52 0d 	jmp	0x1aa4	; 0x1aa4 <__vector_9>
      28:	0c 94 a8 07 	jmp	0xf50	; 0xf50 <__vector_10>
      2c:	0c 94 17 08 	jmp	0x102e	; 0x102e <__vector_11>
      30:	0c 94 86 08 	jmp	0x110c	; 0x110c <__vector_12>
      34:	0c 94 f5 08 	jmp	0x11ea	; 0x11ea <__vector_13>
      38:	0c 94 64 09 	jmp	0x12c8	; 0x12c8 <__vector_14>
      3c:	0c 94 d3 09 	jmp	0x13a6	; 0x13a6 <__vector_15>
      40:	0c 94 42 0a 	jmp	0x1484	; 0x1484 <__vector_16>
      44:	0c 94 b1 0a 	jmp	0x1562	; 0x1562 <__vector_17>
      48:	0c 94 20 0b 	jmp	0x1640	; 0x1640 <__vector_18>
      4c:	0c 94 8f 0b 	jmp	0x171e	; 0x171e <__vector_19>
      50:	0c 94 fe 0b 	jmp	0x17fc	; 0x17fc <__vector_20>
      54:	0c 94 6d 0c 	jmp	0x18da	; 0x18da <__vector_21>
      58:	0c 94 dc 0c 	jmp	0x19b8	; 0x19b8 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e4 e1       	ldi	r30, 0x14	; 20
      70:	f2 e2       	ldi	r31, 0x22	; 34
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a4 33       	cpi	r26, 0x34	; 52
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a4 e3       	ldi	r26, 0x34	; 52
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 84 03 	call	0x708	; 0x708 <main>
      92:	0c 94 08 11 	jmp	0x2210	; 0x2210 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <transmit>:

#include <avr/io.h>
#include "Communication.h"

int transmit(Communication *self, int data){
	while ( !(UCSR0A & (1<<UDRE0)) );
      9a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
      9e:	85 ff       	sbrs	r24, 5
      a0:	fc cf       	rjmp	.-8      	; 0x9a <transmit>
	UDR0 = data;
      a2:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
      a6:	08 95       	ret

000000a8 <updateDisplay>:
#include <avr/io.h>

Msg test;
Msg teste;

int updateDisplay(Handler *self) {
      a8:	cf 92       	push	r12
      aa:	df 92       	push	r13
      ac:	ef 92       	push	r14
      ae:	ff 92       	push	r15
      b0:	0f 93       	push	r16
      b2:	1f 93       	push	r17
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
      b8:	ec 01       	movw	r28, r24
	ASYNC(self->lcd, printAt, self->northQueue * 10);
      ba:	8c 85       	ldd	r24, Y+12	; 0x0c
      bc:	9d 85       	ldd	r25, Y+13	; 0x0d
      be:	0e 81       	ldd	r16, Y+6	; 0x06
      c0:	1f 81       	ldd	r17, Y+7	; 0x07
      c2:	6c 01       	movw	r12, r24
      c4:	cc 0c       	add	r12, r12
      c6:	dd 1c       	adc	r13, r13
      c8:	88 0f       	add	r24, r24
      ca:	99 1f       	adc	r25, r25
      cc:	88 0f       	add	r24, r24
      ce:	99 1f       	adc	r25, r25
      d0:	88 0f       	add	r24, r24
      d2:	99 1f       	adc	r25, r25
      d4:	c8 0e       	add	r12, r24
      d6:	d9 1e       	adc	r13, r25
      d8:	0f 2e       	mov	r0, r31
      da:	f7 e5       	ldi	r31, 0x57	; 87
      dc:	ef 2e       	mov	r14, r31
      de:	f3 e0       	ldi	r31, 0x03	; 3
      e0:	ff 2e       	mov	r15, r31
      e2:	f0 2d       	mov	r31, r0
      e4:	20 e0       	ldi	r18, 0x00	; 0
      e6:	30 e0       	ldi	r19, 0x00	; 0
      e8:	a9 01       	movw	r20, r18
      ea:	60 e0       	ldi	r22, 0x00	; 0
      ec:	70 e0       	ldi	r23, 0x00	; 0
      ee:	cb 01       	movw	r24, r22
      f0:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
	ASYNC(self->lcd, printAt, self->onBridge * 10 + 2);
      f4:	8e 85       	ldd	r24, Y+14	; 0x0e
      f6:	9f 85       	ldd	r25, Y+15	; 0x0f
      f8:	6c 01       	movw	r12, r24
      fa:	cc 0c       	add	r12, r12
      fc:	dd 1c       	adc	r13, r13
      fe:	88 0f       	add	r24, r24
     100:	99 1f       	adc	r25, r25
     102:	88 0f       	add	r24, r24
     104:	99 1f       	adc	r25, r25
     106:	88 0f       	add	r24, r24
     108:	99 1f       	adc	r25, r25
     10a:	c8 0e       	add	r12, r24
     10c:	d9 1e       	adc	r13, r25
     10e:	0e 81       	ldd	r16, Y+6	; 0x06
     110:	1f 81       	ldd	r17, Y+7	; 0x07
     112:	82 e0       	ldi	r24, 0x02	; 2
     114:	c8 0e       	add	r12, r24
     116:	d1 1c       	adc	r13, r1
     118:	20 e0       	ldi	r18, 0x00	; 0
     11a:	30 e0       	ldi	r19, 0x00	; 0
     11c:	a9 01       	movw	r20, r18
     11e:	60 e0       	ldi	r22, 0x00	; 0
     120:	70 e0       	ldi	r23, 0x00	; 0
     122:	cb 01       	movw	r24, r22
     124:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
	ASYNC(self->lcd, printAt, self->southQueue * 10 + 4);
     128:	8a 85       	ldd	r24, Y+10	; 0x0a
     12a:	9b 85       	ldd	r25, Y+11	; 0x0b
     12c:	6c 01       	movw	r12, r24
     12e:	cc 0c       	add	r12, r12
     130:	dd 1c       	adc	r13, r13
     132:	88 0f       	add	r24, r24
     134:	99 1f       	adc	r25, r25
     136:	88 0f       	add	r24, r24
     138:	99 1f       	adc	r25, r25
     13a:	88 0f       	add	r24, r24
     13c:	99 1f       	adc	r25, r25
     13e:	c8 0e       	add	r12, r24
     140:	d9 1e       	adc	r13, r25
     142:	0e 81       	ldd	r16, Y+6	; 0x06
     144:	1f 81       	ldd	r17, Y+7	; 0x07
     146:	84 e0       	ldi	r24, 0x04	; 4
     148:	c8 0e       	add	r12, r24
     14a:	d1 1c       	adc	r13, r1
     14c:	20 e0       	ldi	r18, 0x00	; 0
     14e:	30 e0       	ldi	r19, 0x00	; 0
     150:	a9 01       	movw	r20, r18
     152:	60 e0       	ldi	r22, 0x00	; 0
     154:	70 e0       	ldi	r23, 0x00	; 0
     156:	cb 01       	movw	r24, r22
     158:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
}
     15c:	df 91       	pop	r29
     15e:	cf 91       	pop	r28
     160:	1f 91       	pop	r17
     162:	0f 91       	pop	r16
     164:	ff 90       	pop	r15
     166:	ef 90       	pop	r14
     168:	df 90       	pop	r13
     16a:	cf 90       	pop	r12
     16c:	08 95       	ret

0000016e <reduceBridge>:

int reduceBridge(Handler *self) {
     16e:	cf 92       	push	r12
     170:	df 92       	push	r13
     172:	ef 92       	push	r14
     174:	ff 92       	push	r15
     176:	0f 93       	push	r16
     178:	1f 93       	push	r17
	self->onBridge--;
     17a:	fc 01       	movw	r30, r24
     17c:	26 85       	ldd	r18, Z+14	; 0x0e
     17e:	37 85       	ldd	r19, Z+15	; 0x0f
     180:	21 50       	subi	r18, 0x01	; 1
     182:	31 09       	sbc	r19, r1
     184:	37 87       	std	Z+15, r19	; 0x0f
     186:	26 87       	std	Z+14, r18	; 0x0e
	ASYNC(self, updateDisplay, NULL);
     188:	c1 2c       	mov	r12, r1
     18a:	d1 2c       	mov	r13, r1
     18c:	0f 2e       	mov	r0, r31
     18e:	f4 e5       	ldi	r31, 0x54	; 84
     190:	ef 2e       	mov	r14, r31
     192:	f0 e0       	ldi	r31, 0x00	; 0
     194:	ff 2e       	mov	r15, r31
     196:	f0 2d       	mov	r31, r0
     198:	8c 01       	movw	r16, r24
     19a:	20 e0       	ldi	r18, 0x00	; 0
     19c:	30 e0       	ldi	r19, 0x00	; 0
     19e:	a9 01       	movw	r20, r18
     1a0:	60 e0       	ldi	r22, 0x00	; 0
     1a2:	70 e0       	ldi	r23, 0x00	; 0
     1a4:	cb 01       	movw	r24, r22
     1a6:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
}
     1aa:	1f 91       	pop	r17
     1ac:	0f 91       	pop	r16
     1ae:	ff 90       	pop	r15
     1b0:	ef 90       	pop	r14
     1b2:	df 90       	pop	r13
     1b4:	cf 90       	pop	r12
     1b6:	08 95       	ret

000001b8 <switcher>:
	}
	ASYNC(self, updateDisplay, NULL);
	ASYNC(self, switcher, NULL);
}

int switcher (Handler *self) {
     1b8:	cf 92       	push	r12
     1ba:	df 92       	push	r13
     1bc:	ef 92       	push	r14
     1be:	ff 92       	push	r15
     1c0:	0f 93       	push	r16
     1c2:	1f 93       	push	r17
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	ec 01       	movw	r28, r24
	if (self->isNorth) {
     1ca:	88 85       	ldd	r24, Y+8	; 0x08
     1cc:	99 85       	ldd	r25, Y+9	; 0x09
     1ce:	89 2b       	or	r24, r25
     1d0:	09 f4       	brne	.+2      	; 0x1d4 <switcher+0x1c>
     1d2:	6d c0       	rjmp	.+218    	; 0x2ae <__EEPROM_REGION_LENGTH__+0xae>
		if (self->northQueue && self->counter < 5) {			// I added the check with (if other queue > 5 switch queue if bridge is currently empty)
     1d4:	8c 85       	ldd	r24, Y+12	; 0x0c
     1d6:	9d 85       	ldd	r25, Y+13	; 0x0d
     1d8:	89 2b       	or	r24, r25
     1da:	f1 f0       	breq	.+60     	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
     1dc:	88 89       	ldd	r24, Y+16	; 0x10
     1de:	99 89       	ldd	r25, Y+17	; 0x11
     1e0:	85 30       	cpi	r24, 0x05	; 5
     1e2:	91 05       	cpc	r25, r1
     1e4:	cc f4       	brge	.+50     	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
			self->counter++;
     1e6:	01 96       	adiw	r24, 0x01	; 1
     1e8:	99 8b       	std	Y+17, r25	; 0x11
     1ea:	88 8b       	std	Y+16, r24	; 0x10
			ASYNC(self->com, transmit, 0b1001);		// Green north
     1ec:	0c 81       	ldd	r16, Y+4	; 0x04
     1ee:	1d 81       	ldd	r17, Y+5	; 0x05
     1f0:	0f 2e       	mov	r0, r31
     1f2:	f9 e0       	ldi	r31, 0x09	; 9
     1f4:	cf 2e       	mov	r12, r31
     1f6:	d1 2c       	mov	r13, r1
     1f8:	f0 2d       	mov	r31, r0
     1fa:	0f 2e       	mov	r0, r31
     1fc:	fd e4       	ldi	r31, 0x4D	; 77
     1fe:	ef 2e       	mov	r14, r31
     200:	f0 e0       	ldi	r31, 0x00	; 0
     202:	ff 2e       	mov	r15, r31
     204:	f0 2d       	mov	r31, r0
     206:	20 e0       	ldi	r18, 0x00	; 0
     208:	30 e0       	ldi	r19, 0x00	; 0
     20a:	a9 01       	movw	r20, r18
     20c:	60 e0       	ldi	r22, 0x00	; 0
     20e:	70 e0       	ldi	r23, 0x00	; 0
     210:	cb 01       	movw	r24, r22
     212:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
     216:	b7 c0       	rjmp	.+366    	; 0x386 <__EEPROM_REGION_LENGTH__+0x186>
		}
		else {
			if ((self->southQueue && self->onBridge == 0) || (self->onBridge == 0 && self->counter >= 5)) {
     218:	8a 85       	ldd	r24, Y+10	; 0x0a
     21a:	9b 85       	ldd	r25, Y+11	; 0x0b
     21c:	89 2b       	or	r24, r25
     21e:	21 f0       	breq	.+8      	; 0x228 <__EEPROM_REGION_LENGTH__+0x28>
     220:	8e 85       	ldd	r24, Y+14	; 0x0e
     222:	9f 85       	ldd	r25, Y+15	; 0x0f
     224:	89 2b       	or	r24, r25
     226:	41 f0       	breq	.+16     	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
     228:	8e 85       	ldd	r24, Y+14	; 0x0e
     22a:	9f 85       	ldd	r25, Y+15	; 0x0f
     22c:	89 2b       	or	r24, r25
     22e:	01 f5       	brne	.+64     	; 0x270 <__EEPROM_REGION_LENGTH__+0x70>
     230:	88 89       	ldd	r24, Y+16	; 0x10
     232:	99 89       	ldd	r25, Y+17	; 0x11
     234:	05 97       	sbiw	r24, 0x05	; 5
     236:	e4 f0       	brlt	.+56     	; 0x270 <__EEPROM_REGION_LENGTH__+0x70>
				self->counter = 1;
     238:	81 e0       	ldi	r24, 0x01	; 1
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	99 8b       	std	Y+17, r25	; 0x11
     23e:	88 8b       	std	Y+16, r24	; 0x10
				self->isNorth = 0;
     240:	19 86       	std	Y+9, r1	; 0x09
     242:	18 86       	std	Y+8, r1	; 0x08
				ASYNC(self->com, transmit, 0b0110);		// Green south
     244:	0c 81       	ldd	r16, Y+4	; 0x04
     246:	1d 81       	ldd	r17, Y+5	; 0x05
     248:	0f 2e       	mov	r0, r31
     24a:	f6 e0       	ldi	r31, 0x06	; 6
     24c:	cf 2e       	mov	r12, r31
     24e:	d1 2c       	mov	r13, r1
     250:	f0 2d       	mov	r31, r0
     252:	0f 2e       	mov	r0, r31
     254:	fd e4       	ldi	r31, 0x4D	; 77
     256:	ef 2e       	mov	r14, r31
     258:	f0 e0       	ldi	r31, 0x00	; 0
     25a:	ff 2e       	mov	r15, r31
     25c:	f0 2d       	mov	r31, r0
     25e:	20 e0       	ldi	r18, 0x00	; 0
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	a9 01       	movw	r20, r18
     264:	60 e0       	ldi	r22, 0x00	; 0
     266:	70 e0       	ldi	r23, 0x00	; 0
     268:	cb 01       	movw	r24, r22
     26a:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
     26e:	8b c0       	rjmp	.+278    	; 0x386 <__EEPROM_REGION_LENGTH__+0x186>
			}
			else {
				if (test) {
     270:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <test>
     274:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <test+0x1>
     278:	00 97       	sbiw	r24, 0x00	; 0
     27a:	11 f0       	breq	.+4      	; 0x280 <__EEPROM_REGION_LENGTH__+0x80>
					ABORT(test);
     27c:	0e 94 27 10 	call	0x204e	; 0x204e <ABORT>
				}
				test = AFTER(MSEC(200), self, switcher, NULL);	// Confuse 
     280:	c1 2c       	mov	r12, r1
     282:	d1 2c       	mov	r13, r1
     284:	0f 2e       	mov	r0, r31
     286:	fc ed       	ldi	r31, 0xDC	; 220
     288:	ef 2e       	mov	r14, r31
     28a:	f0 e0       	ldi	r31, 0x00	; 0
     28c:	ff 2e       	mov	r15, r31
     28e:	f0 2d       	mov	r31, r0
     290:	8e 01       	movw	r16, r28
     292:	20 e0       	ldi	r18, 0x00	; 0
     294:	30 e0       	ldi	r19, 0x00	; 0
     296:	a9 01       	movw	r20, r18
     298:	6a e6       	ldi	r22, 0x6A	; 106
     29a:	78 e1       	ldi	r23, 0x18	; 24
     29c:	80 e0       	ldi	r24, 0x00	; 0
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
     2a4:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <test+0x1>
     2a8:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <test>
     2ac:	6c c0       	rjmp	.+216    	; 0x386 <__EEPROM_REGION_LENGTH__+0x186>
			}
		}
	}
	else {
		if (self->southQueue && self->counter < 5) {
     2ae:	8a 85       	ldd	r24, Y+10	; 0x0a
     2b0:	9b 85       	ldd	r25, Y+11	; 0x0b
     2b2:	89 2b       	or	r24, r25
     2b4:	f1 f0       	breq	.+60     	; 0x2f2 <__EEPROM_REGION_LENGTH__+0xf2>
     2b6:	88 89       	ldd	r24, Y+16	; 0x10
     2b8:	99 89       	ldd	r25, Y+17	; 0x11
     2ba:	85 30       	cpi	r24, 0x05	; 5
     2bc:	91 05       	cpc	r25, r1
     2be:	cc f4       	brge	.+50     	; 0x2f2 <__EEPROM_REGION_LENGTH__+0xf2>
			self->counter++;
     2c0:	01 96       	adiw	r24, 0x01	; 1
     2c2:	99 8b       	std	Y+17, r25	; 0x11
     2c4:	88 8b       	std	Y+16, r24	; 0x10
			ASYNC(self->com, transmit, 0b0110);		// Green south
     2c6:	0c 81       	ldd	r16, Y+4	; 0x04
     2c8:	1d 81       	ldd	r17, Y+5	; 0x05
     2ca:	0f 2e       	mov	r0, r31
     2cc:	f6 e0       	ldi	r31, 0x06	; 6
     2ce:	cf 2e       	mov	r12, r31
     2d0:	d1 2c       	mov	r13, r1
     2d2:	f0 2d       	mov	r31, r0
     2d4:	0f 2e       	mov	r0, r31
     2d6:	fd e4       	ldi	r31, 0x4D	; 77
     2d8:	ef 2e       	mov	r14, r31
     2da:	f0 e0       	ldi	r31, 0x00	; 0
     2dc:	ff 2e       	mov	r15, r31
     2de:	f0 2d       	mov	r31, r0
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	a9 01       	movw	r20, r18
     2e6:	60 e0       	ldi	r22, 0x00	; 0
     2e8:	70 e0       	ldi	r23, 0x00	; 0
     2ea:	cb 01       	movw	r24, r22
     2ec:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
     2f0:	4a c0       	rjmp	.+148    	; 0x386 <__EEPROM_REGION_LENGTH__+0x186>
		}
		else {
			if ((self->northQueue && self->onBridge == 0) || (self->onBridge == 0 && self->counter >= 5)) {
     2f2:	8c 85       	ldd	r24, Y+12	; 0x0c
     2f4:	9d 85       	ldd	r25, Y+13	; 0x0d
     2f6:	89 2b       	or	r24, r25
     2f8:	21 f0       	breq	.+8      	; 0x302 <__EEPROM_REGION_LENGTH__+0x102>
     2fa:	8e 85       	ldd	r24, Y+14	; 0x0e
     2fc:	9f 85       	ldd	r25, Y+15	; 0x0f
     2fe:	89 2b       	or	r24, r25
     300:	41 f0       	breq	.+16     	; 0x312 <__EEPROM_REGION_LENGTH__+0x112>
     302:	8e 85       	ldd	r24, Y+14	; 0x0e
     304:	9f 85       	ldd	r25, Y+15	; 0x0f
     306:	89 2b       	or	r24, r25
     308:	01 f5       	brne	.+64     	; 0x34a <__EEPROM_REGION_LENGTH__+0x14a>
     30a:	88 89       	ldd	r24, Y+16	; 0x10
     30c:	99 89       	ldd	r25, Y+17	; 0x11
     30e:	05 97       	sbiw	r24, 0x05	; 5
     310:	e4 f0       	brlt	.+56     	; 0x34a <__EEPROM_REGION_LENGTH__+0x14a>
				self->counter = 1;
     312:	81 e0       	ldi	r24, 0x01	; 1
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	99 8b       	std	Y+17, r25	; 0x11
     318:	88 8b       	std	Y+16, r24	; 0x10
				self->isNorth = 1;
     31a:	99 87       	std	Y+9, r25	; 0x09
     31c:	88 87       	std	Y+8, r24	; 0x08
				ASYNC(self->com, transmit, 0b1001);		// Green north
     31e:	0c 81       	ldd	r16, Y+4	; 0x04
     320:	1d 81       	ldd	r17, Y+5	; 0x05
     322:	0f 2e       	mov	r0, r31
     324:	f9 e0       	ldi	r31, 0x09	; 9
     326:	cf 2e       	mov	r12, r31
     328:	d1 2c       	mov	r13, r1
     32a:	f0 2d       	mov	r31, r0
     32c:	0f 2e       	mov	r0, r31
     32e:	fd e4       	ldi	r31, 0x4D	; 77
     330:	ef 2e       	mov	r14, r31
     332:	f0 e0       	ldi	r31, 0x00	; 0
     334:	ff 2e       	mov	r15, r31
     336:	f0 2d       	mov	r31, r0
     338:	20 e0       	ldi	r18, 0x00	; 0
     33a:	30 e0       	ldi	r19, 0x00	; 0
     33c:	a9 01       	movw	r20, r18
     33e:	60 e0       	ldi	r22, 0x00	; 0
     340:	70 e0       	ldi	r23, 0x00	; 0
     342:	cb 01       	movw	r24, r22
     344:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
     348:	1e c0       	rjmp	.+60     	; 0x386 <__EEPROM_REGION_LENGTH__+0x186>
			}
			else {
				if (test) {
     34a:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <test>
     34e:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <test+0x1>
     352:	00 97       	sbiw	r24, 0x00	; 0
     354:	11 f0       	breq	.+4      	; 0x35a <__EEPROM_REGION_LENGTH__+0x15a>
					ABORT(test);
     356:	0e 94 27 10 	call	0x204e	; 0x204e <ABORT>
				}
				test = AFTER(MSEC(200), self, switcher, NULL);
     35a:	c1 2c       	mov	r12, r1
     35c:	d1 2c       	mov	r13, r1
     35e:	0f 2e       	mov	r0, r31
     360:	fc ed       	ldi	r31, 0xDC	; 220
     362:	ef 2e       	mov	r14, r31
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	ff 2e       	mov	r15, r31
     368:	f0 2d       	mov	r31, r0
     36a:	8e 01       	movw	r16, r28
     36c:	20 e0       	ldi	r18, 0x00	; 0
     36e:	30 e0       	ldi	r19, 0x00	; 0
     370:	a9 01       	movw	r20, r18
     372:	6a e6       	ldi	r22, 0x6A	; 106
     374:	78 e1       	ldi	r23, 0x18	; 24
     376:	80 e0       	ldi	r24, 0x00	; 0
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
     37e:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <test+0x1>
     382:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <test>
		}
	}
	/*if (self->onBridge == 1) {
		AFTER(MSEC(5000), self, reduceBridge, NULL);
	}*/
     386:	df 91       	pop	r29
     388:	cf 91       	pop	r28
     38a:	1f 91       	pop	r17
     38c:	0f 91       	pop	r16
     38e:	ff 90       	pop	r15
     390:	ef 90       	pop	r14
     392:	df 90       	pop	r13
     394:	cf 90       	pop	r12
     396:	08 95       	ret

00000398 <readValue>:
int reduceBridge(Handler *self) {
	self->onBridge--;
	ASYNC(self, updateDisplay, NULL);
}

int readValue(Handler *self, int value) {
     398:	af 92       	push	r10
     39a:	bf 92       	push	r11
     39c:	cf 92       	push	r12
     39e:	df 92       	push	r13
     3a0:	ef 92       	push	r14
     3a2:	ff 92       	push	r15
     3a4:	0f 93       	push	r16
     3a6:	1f 93       	push	r17
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	ec 01       	movw	r28, r24
     3ae:	5b 01       	movw	r10, r22
	if (value == 1) {			// If a car enters northQueue
     3b0:	61 30       	cpi	r22, 0x01	; 1
     3b2:	71 05       	cpc	r23, r1
     3b4:	29 f4       	brne	.+10     	; 0x3c0 <readValue+0x28>
		self->northQueue++;
     3b6:	8c 85       	ldd	r24, Y+12	; 0x0c
     3b8:	9d 85       	ldd	r25, Y+13	; 0x0d
     3ba:	01 96       	adiw	r24, 0x01	; 1
     3bc:	9d 87       	std	Y+13, r25	; 0x0d
     3be:	8c 87       	std	Y+12, r24	; 0x0c
	}
	if (value == 2) {			// Car enters north
     3c0:	82 e0       	ldi	r24, 0x02	; 2
     3c2:	a8 16       	cp	r10, r24
     3c4:	b1 04       	cpc	r11, r1
     3c6:	e1 f4       	brne	.+56     	; 0x400 <__DATA_REGION_LENGTH__>
		self->northQueue--;
     3c8:	8c 85       	ldd	r24, Y+12	; 0x0c
     3ca:	9d 85       	ldd	r25, Y+13	; 0x0d
     3cc:	01 97       	sbiw	r24, 0x01	; 1
     3ce:	9d 87       	std	Y+13, r25	; 0x0d
     3d0:	8c 87       	std	Y+12, r24	; 0x0c
		self->onBridge++;
     3d2:	8e 85       	ldd	r24, Y+14	; 0x0e
     3d4:	9f 85       	ldd	r25, Y+15	; 0x0f
     3d6:	01 96       	adiw	r24, 0x01	; 1
     3d8:	9f 87       	std	Y+15, r25	; 0x0f
     3da:	8e 87       	std	Y+14, r24	; 0x0e
		AFTER(MSEC(5000), self, reduceBridge, NULL);
     3dc:	c1 2c       	mov	r12, r1
     3de:	d1 2c       	mov	r13, r1
     3e0:	0f 2e       	mov	r0, r31
     3e2:	f7 eb       	ldi	r31, 0xB7	; 183
     3e4:	ef 2e       	mov	r14, r31
     3e6:	f0 e0       	ldi	r31, 0x00	; 0
     3e8:	ff 2e       	mov	r15, r31
     3ea:	f0 2d       	mov	r31, r0
     3ec:	8e 01       	movw	r16, r28
     3ee:	20 e0       	ldi	r18, 0x00	; 0
     3f0:	30 e0       	ldi	r19, 0x00	; 0
     3f2:	a9 01       	movw	r20, r18
     3f4:	6a e5       	ldi	r22, 0x5A	; 90
     3f6:	72 e6       	ldi	r23, 0x62	; 98
     3f8:	82 e0       	ldi	r24, 0x02	; 2
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
	}
	if (value == 4) {
     400:	84 e0       	ldi	r24, 0x04	; 4
     402:	a8 16       	cp	r10, r24
     404:	b1 04       	cpc	r11, r1
     406:	29 f4       	brne	.+10     	; 0x412 <__DATA_REGION_LENGTH__+0x12>
		self->southQueue++;
     408:	8a 85       	ldd	r24, Y+10	; 0x0a
     40a:	9b 85       	ldd	r25, Y+11	; 0x0b
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	9b 87       	std	Y+11, r25	; 0x0b
     410:	8a 87       	std	Y+10, r24	; 0x0a
	}
	if (value == 8) {
     412:	88 e0       	ldi	r24, 0x08	; 8
     414:	a8 16       	cp	r10, r24
     416:	b1 04       	cpc	r11, r1
     418:	e1 f4       	brne	.+56     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
		self->southQueue--;
     41a:	8a 85       	ldd	r24, Y+10	; 0x0a
     41c:	9b 85       	ldd	r25, Y+11	; 0x0b
     41e:	01 97       	sbiw	r24, 0x01	; 1
     420:	9b 87       	std	Y+11, r25	; 0x0b
     422:	8a 87       	std	Y+10, r24	; 0x0a
		self->onBridge++;
     424:	8e 85       	ldd	r24, Y+14	; 0x0e
     426:	9f 85       	ldd	r25, Y+15	; 0x0f
     428:	01 96       	adiw	r24, 0x01	; 1
     42a:	9f 87       	std	Y+15, r25	; 0x0f
     42c:	8e 87       	std	Y+14, r24	; 0x0e
		AFTER(MSEC(5000), self, reduceBridge, NULL);
     42e:	c1 2c       	mov	r12, r1
     430:	d1 2c       	mov	r13, r1
     432:	0f 2e       	mov	r0, r31
     434:	f7 eb       	ldi	r31, 0xB7	; 183
     436:	ef 2e       	mov	r14, r31
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	ff 2e       	mov	r15, r31
     43c:	f0 2d       	mov	r31, r0
     43e:	8e 01       	movw	r16, r28
     440:	20 e0       	ldi	r18, 0x00	; 0
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	a9 01       	movw	r20, r18
     446:	6a e5       	ldi	r22, 0x5A	; 90
     448:	72 e6       	ldi	r23, 0x62	; 98
     44a:	82 e0       	ldi	r24, 0x02	; 2
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
	}
	ASYNC(self, updateDisplay, NULL);
     452:	c1 2c       	mov	r12, r1
     454:	d1 2c       	mov	r13, r1
     456:	0f 2e       	mov	r0, r31
     458:	f4 e5       	ldi	r31, 0x54	; 84
     45a:	ef 2e       	mov	r14, r31
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	ff 2e       	mov	r15, r31
     460:	f0 2d       	mov	r31, r0
     462:	8e 01       	movw	r16, r28
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	a9 01       	movw	r20, r18
     46a:	60 e0       	ldi	r22, 0x00	; 0
     46c:	70 e0       	ldi	r23, 0x00	; 0
     46e:	cb 01       	movw	r24, r22
     470:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
	ASYNC(self, switcher, NULL);
     474:	0f 2e       	mov	r0, r31
     476:	fc ed       	ldi	r31, 0xDC	; 220
     478:	ef 2e       	mov	r14, r31
     47a:	f0 e0       	ldi	r31, 0x00	; 0
     47c:	ff 2e       	mov	r15, r31
     47e:	f0 2d       	mov	r31, r0
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	a9 01       	movw	r20, r18
     486:	60 e0       	ldi	r22, 0x00	; 0
     488:	70 e0       	ldi	r23, 0x00	; 0
     48a:	cb 01       	movw	r24, r22
     48c:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
}
     490:	df 91       	pop	r29
     492:	cf 91       	pop	r28
     494:	1f 91       	pop	r17
     496:	0f 91       	pop	r16
     498:	ff 90       	pop	r15
     49a:	ef 90       	pop	r14
     49c:	df 90       	pop	r13
     49e:	cf 90       	pop	r12
     4a0:	bf 90       	pop	r11
     4a2:	af 90       	pop	r10
     4a4:	08 95       	ret

000004a6 <Init>:
#define FOSC 8000000
#define BAUD 9600
#define MYUBRR ((FOSC/(16UL*BAUD))-1)

void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
     4a6:	e1 e6       	ldi	r30, 0x61	; 97
     4a8:	f0 e0       	ldi	r31, 0x00	; 0
     4aa:	80 e8       	ldi	r24, 0x80	; 128
     4ac:	80 83       	st	Z, r24
	CLKPR = 0x00;
     4ae:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     4b0:	8f e0       	ldi	r24, 0x0F	; 15
     4b2:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     4b6:	87 eb       	ldi	r24, 0xB7	; 183
     4b8:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     4bc:	87 e0       	ldi	r24, 0x07	; 7
     4be:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     4c2:	80 ec       	ldi	r24, 0xC0	; 192
     4c4:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// ------------------------- Stuffs for communication -------------------------------------------------
	
	/* Set baud rate */
	UBRR0H = (uint8_t)(MYUBRR<<8);
     4c8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (uint8_t)(MYUBRR);
     4cc:	83 e3       	ldi	r24, 0x33	; 51
     4ce:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	/* Enable receiver and transmitter */
	UCSR0B = (1<<TXEN0) | (1<<RXEN0) | (1<<RXCIE0);
     4d2:	88 e9       	ldi	r24, 0x98	; 152
     4d4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
     4d8:	08 95       	ret

000004da <interrupter>:
 */ 

#include<avr/io.h>
#include "InterruptHandler.h"

int interrupter(InterruptHandler *self) {
     4da:	cf 92       	push	r12
     4dc:	df 92       	push	r13
     4de:	ef 92       	push	r14
     4e0:	ff 92       	push	r15
     4e2:	0f 93       	push	r16
     4e4:	1f 93       	push	r17
	/*while ( !(UCSR0A & (1<<UDRE0)) );
	UDR0 = 0b1001;*/
	ASYNC(self->handler, readValue, UDR0);
     4e6:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     4ea:	fc 01       	movw	r30, r24
     4ec:	04 81       	ldd	r16, Z+4	; 0x04
     4ee:	15 81       	ldd	r17, Z+5	; 0x05
     4f0:	d1 2c       	mov	r13, r1
     4f2:	0f 2e       	mov	r0, r31
     4f4:	fc ec       	ldi	r31, 0xCC	; 204
     4f6:	ef 2e       	mov	r14, r31
     4f8:	f1 e0       	ldi	r31, 0x01	; 1
     4fa:	ff 2e       	mov	r15, r31
     4fc:	f0 2d       	mov	r31, r0
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	a9 01       	movw	r20, r18
     504:	60 e0       	ldi	r22, 0x00	; 0
     506:	70 e0       	ldi	r23, 0x00	; 0
     508:	cb 01       	movw	r24, r22
     50a:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
	return 0;
     50e:	80 e0       	ldi	r24, 0x00	; 0
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	1f 91       	pop	r17
     514:	0f 91       	pop	r16
     516:	ff 90       	pop	r15
     518:	ef 90       	pop	r14
     51a:	df 90       	pop	r13
     51c:	cf 90       	pop	r12
     51e:	08 95       	ret

00000520 <displayChar>:
};

// Switches between two segments 
void switchSegment() {
    LCDDR13 = !(LCDDR13 & 1);
    LCDDR18 = !(LCDDR18 & 1);
     520:	cf 93       	push	r28
     522:	df 93       	push	r29
     524:	00 d0       	rcall	.+0      	; 0x526 <displayChar+0x6>
     526:	00 d0       	rcall	.+0      	; 0x528 <displayChar+0x8>
     528:	cd b7       	in	r28, 0x3d	; 61
     52a:	de b7       	in	r29, 0x3e	; 62
     52c:	da 01       	movw	r26, r20
     52e:	90 ed       	ldi	r25, 0xD0	; 208
     530:	98 0f       	add	r25, r24
     532:	9a 30       	cpi	r25, 0x0A	; 10
     534:	80 f4       	brcc	.+32     	; 0x556 <displayChar+0x36>
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	28 c0       	rjmp	.+80     	; 0x58c <displayChar+0x6c>
     53c:	fc 01       	movw	r30, r24
     53e:	e8 5f       	subi	r30, 0xF8	; 248
     540:	fe 4f       	sbci	r31, 0xFE	; 254
     542:	20 a5       	ldd	r18, Z+40	; 0x28
     544:	e1 e0       	ldi	r30, 0x01	; 1
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	ec 0f       	add	r30, r28
     54a:	fd 1f       	adc	r31, r29
     54c:	e8 0f       	add	r30, r24
     54e:	f9 1f       	adc	r31, r25
     550:	20 83       	st	Z, r18
     552:	01 96       	adiw	r24, 0x01	; 1
     554:	02 c0       	rjmp	.+4      	; 0x55a <displayChar+0x3a>
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	84 30       	cpi	r24, 0x04	; 4
     55c:	91 05       	cpc	r25, r1
     55e:	74 f3       	brlt	.-36     	; 0x53c <displayChar+0x1c>
     560:	18 c0       	rjmp	.+48     	; 0x592 <displayChar+0x72>
     562:	e8 2f       	mov	r30, r24
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	f0 97       	sbiw	r30, 0x30	; 48
     568:	ee 0f       	add	r30, r30
     56a:	ff 1f       	adc	r31, r31
     56c:	ee 0f       	add	r30, r30
     56e:	ff 1f       	adc	r31, r31
     570:	e8 5f       	subi	r30, 0xF8	; 248
     572:	fe 4f       	sbci	r31, 0xFE	; 254
     574:	e2 0f       	add	r30, r18
     576:	f3 1f       	adc	r31, r19
     578:	90 81       	ld	r25, Z
     57a:	e1 e0       	ldi	r30, 0x01	; 1
     57c:	f0 e0       	ldi	r31, 0x00	; 0
     57e:	ec 0f       	add	r30, r28
     580:	fd 1f       	adc	r31, r29
     582:	e2 0f       	add	r30, r18
     584:	f3 1f       	adc	r31, r19
     586:	90 83       	st	Z, r25
     588:	2f 5f       	subi	r18, 0xFF	; 255
     58a:	3f 4f       	sbci	r19, 0xFF	; 255
     58c:	24 30       	cpi	r18, 0x04	; 4
     58e:	31 05       	cpc	r19, r1
     590:	44 f3       	brlt	.-48     	; 0x562 <displayChar+0x42>
     592:	61 11       	cpse	r22, r1
     594:	0d c0       	rjmp	.+26     	; 0x5b0 <displayChar+0x90>
     596:	11 c0       	rjmp	.+34     	; 0x5ba <displayChar+0x9a>
     598:	e1 e0       	ldi	r30, 0x01	; 1
     59a:	f0 e0       	ldi	r31, 0x00	; 0
     59c:	ec 0f       	add	r30, r28
     59e:	fd 1f       	adc	r31, r29
     5a0:	e8 0f       	add	r30, r24
     5a2:	f9 1f       	adc	r31, r25
     5a4:	20 81       	ld	r18, Z
     5a6:	22 95       	swap	r18
     5a8:	20 7f       	andi	r18, 0xF0	; 240
     5aa:	20 83       	st	Z, r18
     5ac:	01 96       	adiw	r24, 0x01	; 1
     5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <displayChar+0x94>
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	84 30       	cpi	r24, 0x04	; 4
     5b6:	91 05       	cpc	r25, r1
     5b8:	7c f3       	brlt	.-34     	; 0x598 <displayChar+0x78>
     5ba:	9c 91       	ld	r25, X
     5bc:	89 81       	ldd	r24, Y+1	; 0x01
     5be:	89 2b       	or	r24, r25
     5c0:	8c 93       	st	X, r24
     5c2:	15 96       	adiw	r26, 0x05	; 5
     5c4:	9c 91       	ld	r25, X
     5c6:	15 97       	sbiw	r26, 0x05	; 5
     5c8:	8a 81       	ldd	r24, Y+2	; 0x02
     5ca:	89 2b       	or	r24, r25
     5cc:	15 96       	adiw	r26, 0x05	; 5
     5ce:	8c 93       	st	X, r24
     5d0:	15 97       	sbiw	r26, 0x05	; 5
     5d2:	1a 96       	adiw	r26, 0x0a	; 10
     5d4:	9c 91       	ld	r25, X
     5d6:	1a 97       	sbiw	r26, 0x0a	; 10
     5d8:	8b 81       	ldd	r24, Y+3	; 0x03
     5da:	89 2b       	or	r24, r25
     5dc:	1a 96       	adiw	r26, 0x0a	; 10
     5de:	8c 93       	st	X, r24
     5e0:	1a 97       	sbiw	r26, 0x0a	; 10
     5e2:	1f 96       	adiw	r26, 0x0f	; 15
     5e4:	9c 91       	ld	r25, X
     5e6:	1f 97       	sbiw	r26, 0x0f	; 15
     5e8:	8c 81       	ldd	r24, Y+4	; 0x04
     5ea:	89 2b       	or	r24, r25
     5ec:	1f 96       	adiw	r26, 0x0f	; 15
     5ee:	8c 93       	st	X, r24
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	df 91       	pop	r29
     5fa:	cf 91       	pop	r28
     5fc:	08 95       	ret

000005fe <removeOldChar>:
     5fe:	88 23       	and	r24, r24
     600:	91 f0       	breq	.+36     	; 0x626 <removeOldChar+0x28>
     602:	fb 01       	movw	r30, r22
     604:	80 81       	ld	r24, Z
     606:	89 70       	andi	r24, 0x09	; 9
     608:	80 83       	st	Z, r24
     60a:	85 e0       	ldi	r24, 0x05	; 5
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	07 c0       	rjmp	.+14     	; 0x61e <removeOldChar+0x20>
     610:	fb 01       	movw	r30, r22
     612:	e8 0f       	add	r30, r24
     614:	f9 1f       	adc	r31, r25
     616:	20 81       	ld	r18, Z
     618:	2f 70       	andi	r18, 0x0F	; 15
     61a:	20 83       	st	Z, r18
     61c:	05 96       	adiw	r24, 0x05	; 5
     61e:	84 31       	cpi	r24, 0x14	; 20
     620:	91 05       	cpc	r25, r1
     622:	b4 f3       	brlt	.-20     	; 0x610 <removeOldChar+0x12>
     624:	08 95       	ret
     626:	fb 01       	movw	r30, r22
     628:	80 81       	ld	r24, Z
     62a:	80 79       	andi	r24, 0x90	; 144
     62c:	80 83       	st	Z, r24
     62e:	85 e0       	ldi	r24, 0x05	; 5
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	07 c0       	rjmp	.+14     	; 0x642 <removeOldChar+0x44>
     634:	fb 01       	movw	r30, r22
     636:	e8 0f       	add	r30, r24
     638:	f9 1f       	adc	r31, r25
     63a:	20 81       	ld	r18, Z
     63c:	20 7f       	andi	r18, 0xF0	; 240
     63e:	20 83       	st	Z, r18
     640:	05 96       	adiw	r24, 0x05	; 5
     642:	84 31       	cpi	r24, 0x14	; 20
     644:	91 05       	cpc	r25, r1
     646:	b4 f3       	brlt	.-20     	; 0x634 <removeOldChar+0x36>
     648:	08 95       	ret

0000064a <writeChar>:
     64a:	1f 93       	push	r17
     64c:	cf 93       	push	r28
     64e:	df 93       	push	r29
     650:	18 2f       	mov	r17, r24
     652:	60 fd       	sbrc	r22, 0
     654:	14 c0       	rjmp	.+40     	; 0x67e <writeChar+0x34>
     656:	ab 01       	movw	r20, r22
     658:	77 23       	and	r23, r23
     65a:	14 f4       	brge	.+4      	; 0x660 <writeChar+0x16>
     65c:	4f 5f       	subi	r20, 0xFF	; 255
     65e:	5f 4f       	sbci	r21, 0xFF	; 255
     660:	55 95       	asr	r21
     662:	47 95       	ror	r20
     664:	ea 01       	movw	r28, r20
     666:	c4 51       	subi	r28, 0x14	; 20
     668:	df 4f       	sbci	r29, 0xFF	; 255
     66a:	be 01       	movw	r22, r28
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	0e 94 ff 02 	call	0x5fe	; 0x5fe <removeOldChar>
     672:	ae 01       	movw	r20, r28
     674:	60 e0       	ldi	r22, 0x00	; 0
     676:	81 2f       	mov	r24, r17
     678:	0e 94 90 02 	call	0x520	; 0x520 <displayChar>
     67c:	14 c0       	rjmp	.+40     	; 0x6a6 <writeChar+0x5c>
     67e:	61 50       	subi	r22, 0x01	; 1
     680:	71 09       	sbc	r23, r1
     682:	ab 01       	movw	r20, r22
     684:	12 f4       	brpl	.+4      	; 0x68a <writeChar+0x40>
     686:	4f 5f       	subi	r20, 0xFF	; 255
     688:	5f 4f       	sbci	r21, 0xFF	; 255
     68a:	55 95       	asr	r21
     68c:	47 95       	ror	r20
     68e:	ea 01       	movw	r28, r20
     690:	c4 51       	subi	r28, 0x14	; 20
     692:	df 4f       	sbci	r29, 0xFF	; 255
     694:	be 01       	movw	r22, r28
     696:	81 e0       	ldi	r24, 0x01	; 1
     698:	0e 94 ff 02 	call	0x5fe	; 0x5fe <removeOldChar>
     69c:	ae 01       	movw	r20, r28
     69e:	61 e0       	ldi	r22, 0x01	; 1
     6a0:	81 2f       	mov	r24, r17
     6a2:	0e 94 90 02 	call	0x520	; 0x520 <displayChar>
     6a6:	df 91       	pop	r29
     6a8:	cf 91       	pop	r28
     6aa:	1f 91       	pop	r17
     6ac:	08 95       	ret

000006ae <printAt>:
}
 
// Displays last two digits of num in pos and pos+1
int  printAt(Lcd *self, int input) {  // [pos, num]
     6ae:	ef 92       	push	r14
     6b0:	ff 92       	push	r15
     6b2:	0f 93       	push	r16
     6b4:	1f 93       	push	r17
     6b6:	cf 93       	push	r28
     6b8:	df 93       	push	r29
     6ba:	cb 01       	movw	r24, r22
    int pp = input % 10;
     6bc:	0a e0       	ldi	r16, 0x0A	; 10
     6be:	10 e0       	ldi	r17, 0x00	; 0
     6c0:	b8 01       	movw	r22, r16
     6c2:	0e 94 9f 10 	call	0x213e	; 0x213e <__divmodhi4>
     6c6:	7b 01       	movw	r14, r22
     6c8:	ec 01       	movw	r28, r24
    int num = input / 10;
    writeChar((num % 100) / 10 + '0', pp);
     6ca:	cb 01       	movw	r24, r22
     6cc:	64 e6       	ldi	r22, 0x64	; 100
     6ce:	70 e0       	ldi	r23, 0x00	; 0
     6d0:	0e 94 9f 10 	call	0x213e	; 0x213e <__divmodhi4>
     6d4:	b8 01       	movw	r22, r16
     6d6:	0e 94 9f 10 	call	0x213e	; 0x213e <__divmodhi4>
     6da:	86 2f       	mov	r24, r22
     6dc:	be 01       	movw	r22, r28
     6de:	80 5d       	subi	r24, 0xD0	; 208
     6e0:	0e 94 25 03 	call	0x64a	; 0x64a <writeChar>
    pp++;
     6e4:	21 96       	adiw	r28, 0x01	; 1
    writeChar( num % 10 + '0', pp);
     6e6:	c7 01       	movw	r24, r14
     6e8:	b8 01       	movw	r22, r16
     6ea:	0e 94 9f 10 	call	0x213e	; 0x213e <__divmodhi4>
     6ee:	be 01       	movw	r22, r28
     6f0:	80 5d       	subi	r24, 0xD0	; 208
     6f2:	0e 94 25 03 	call	0x64a	; 0x64a <writeChar>

    return 0;
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	df 91       	pop	r29
     6fc:	cf 91       	pop	r28
     6fe:	1f 91       	pop	r17
     700:	0f 91       	pop	r16
     702:	ff 90       	pop	r15
     704:	ef 90       	pop	r14
     706:	08 95       	ret

00000708 <main>:
#include "Lcd.h"
#include "TinyTimber.h"
#include "InterruptHandler.h"

int main(void)
{
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
     70c:	cd b7       	in	r28, 0x3d	; 61
     70e:	de b7       	in	r29, 0x3e	; 62
     710:	a0 97       	sbiw	r28, 0x20	; 32
     712:	0f b6       	in	r0, 0x3f	; 63
     714:	f8 94       	cli
     716:	de bf       	out	0x3e, r29	; 62
     718:	0f be       	out	0x3f, r0	; 63
     71a:	cd bf       	out	0x3d, r28	; 61
    Init();
     71c:	0e 94 53 02 	call	0x4a6	; 0x4a6 <Init>
	Lcd lcd = initLcd();
     720:	1a 82       	std	Y+2, r1	; 0x02
     722:	19 82       	std	Y+1, r1	; 0x01
     724:	1c 82       	std	Y+4, r1	; 0x04
     726:	1b 82       	std	Y+3, r1	; 0x03
	Communication com = initCommunication();
     728:	1e 82       	std	Y+6, r1	; 0x06
     72a:	1d 82       	std	Y+5, r1	; 0x05
     72c:	18 86       	std	Y+8, r1	; 0x08
     72e:	1f 82       	std	Y+7, r1	; 0x07
	Handler handler = initHandler(&com, &lcd);
     730:	1a 86       	std	Y+10, r1	; 0x0a
     732:	19 86       	std	Y+9, r1	; 0x09
     734:	1c 86       	std	Y+12, r1	; 0x0c
     736:	1b 86       	std	Y+11, r1	; 0x0b
     738:	ce 01       	movw	r24, r28
     73a:	05 96       	adiw	r24, 0x05	; 5
     73c:	9e 87       	std	Y+14, r25	; 0x0e
     73e:	8d 87       	std	Y+13, r24	; 0x0d
     740:	04 97       	sbiw	r24, 0x04	; 4
     742:	98 8b       	std	Y+16, r25	; 0x10
     744:	8f 87       	std	Y+15, r24	; 0x0f
     746:	81 e0       	ldi	r24, 0x01	; 1
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	9a 8b       	std	Y+18, r25	; 0x12
     74c:	89 8b       	std	Y+17, r24	; 0x11
     74e:	1c 8a       	std	Y+20, r1	; 0x14
     750:	1b 8a       	std	Y+19, r1	; 0x13
     752:	1e 8a       	std	Y+22, r1	; 0x16
     754:	1d 8a       	std	Y+21, r1	; 0x15
     756:	18 8e       	std	Y+24, r1	; 0x18
     758:	1f 8a       	std	Y+23, r1	; 0x17
     75a:	1a 8e       	std	Y+26, r1	; 0x1a
     75c:	19 8e       	std	Y+25, r1	; 0x19
	InterruptHandler interruptHandler = initInterruptHandler(&handler);
     75e:	1c 8e       	std	Y+28, r1	; 0x1c
     760:	1b 8e       	std	Y+27, r1	; 0x1b
     762:	1e 8e       	std	Y+30, r1	; 0x1e
     764:	1d 8e       	std	Y+29, r1	; 0x1d
     766:	ce 01       	movw	r24, r28
     768:	09 96       	adiw	r24, 0x09	; 9
     76a:	98 a3       	std	Y+32, r25	; 0x20
     76c:	8f 8f       	std	Y+31, r24	; 0x1f
	INSTALL(&interruptHandler, interrupter, IRQ_USART0_RX);
     76e:	48 e0       	ldi	r20, 0x08	; 8
     770:	6d e6       	ldi	r22, 0x6D	; 109
     772:	72 e0       	ldi	r23, 0x02	; 2
     774:	42 96       	adiw	r24, 0x12	; 18
     776:	0e 94 6d 10 	call	0x20da	; 0x20da <install>
	return tinytimber(NULL, NULL, NULL);
     77a:	40 e0       	ldi	r20, 0x00	; 0
     77c:	50 e0       	ldi	r21, 0x00	; 0
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	0e 94 88 10 	call	0x2110	; 0x2110 <tinytimber>
}
     78a:	a0 96       	adiw	r28, 0x20	; 32
     78c:	0f b6       	in	r0, 0x3f	; 63
     78e:	f8 94       	cli
     790:	de bf       	out	0x3e, r29	; 62
     792:	0f be       	out	0x3f, r0	; 63
     794:	cd bf       	out	0x3d, r28	; 61
     796:	df 91       	pop	r29
     798:	cf 91       	pop	r28
     79a:	08 95       	ret

0000079c <remove>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     79c:	db 01       	movw	r26, r22
     79e:	ed 91       	ld	r30, X+
     7a0:	fc 91       	ld	r31, X
     7a2:	a0 e0       	ldi	r26, 0x00	; 0
     7a4:	b0 e0       	ldi	r27, 0x00	; 0
     7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <remove+0x14>
     7a8:	df 01       	movw	r26, r30
     7aa:	01 90       	ld	r0, Z+
     7ac:	f0 81       	ld	r31, Z
     7ae:	e0 2d       	mov	r30, r0
     7b0:	30 97       	sbiw	r30, 0x00	; 0
     7b2:	19 f0       	breq	.+6      	; 0x7ba <remove+0x1e>
     7b4:	e8 17       	cp	r30, r24
     7b6:	f9 07       	cpc	r31, r25
     7b8:	b9 f7       	brne	.-18     	; 0x7a8 <remove+0xc>
     7ba:	30 97       	sbiw	r30, 0x00	; 0
     7bc:	89 f0       	breq	.+34     	; 0x7e0 <remove+0x44>
     7be:	10 97       	sbiw	r26, 0x00	; 0
     7c0:	39 f0       	breq	.+14     	; 0x7d0 <remove+0x34>
     7c2:	80 81       	ld	r24, Z
     7c4:	91 81       	ldd	r25, Z+1	; 0x01
     7c6:	8d 93       	st	X+, r24
     7c8:	9c 93       	st	X, r25
     7ca:	81 e0       	ldi	r24, 0x01	; 1
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	08 95       	ret
     7d0:	80 81       	ld	r24, Z
     7d2:	91 81       	ldd	r25, Z+1	; 0x01
     7d4:	fb 01       	movw	r30, r22
     7d6:	91 83       	std	Z+1, r25	; 0x01
     7d8:	80 83       	st	Z, r24
     7da:	81 e0       	ldi	r24, 0x01	; 1
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	08 95       	ret
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	08 95       	ret

000007e6 <initialize>:
     7e6:	cf 93       	push	r28
     7e8:	df 93       	push	r29
     7ea:	00 d0       	rcall	.+0      	; 0x7ec <initialize+0x6>
     7ec:	00 d0       	rcall	.+0      	; 0x7ee <initialize+0x8>
     7ee:	cd b7       	in	r28, 0x3d	; 61
     7f0:	de b7       	in	r29, 0x3e	; 62
     7f2:	80 e0       	ldi	r24, 0x00	; 0
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	18 c0       	rjmp	.+48     	; 0x828 <initialize+0x42>
     7f8:	ac 01       	movw	r20, r24
     7fa:	4f 5f       	subi	r20, 0xFF	; 255
     7fc:	5f 4f       	sbci	r21, 0xFF	; 255
     7fe:	9a 01       	movw	r18, r20
     800:	22 95       	swap	r18
     802:	32 95       	swap	r19
     804:	30 7f       	andi	r19, 0xF0	; 240
     806:	32 27       	eor	r19, r18
     808:	20 7f       	andi	r18, 0xF0	; 240
     80a:	32 27       	eor	r19, r18
     80c:	25 5e       	subi	r18, 0xE5	; 229
     80e:	3d 4f       	sbci	r19, 0xFD	; 253
     810:	82 95       	swap	r24
     812:	92 95       	swap	r25
     814:	90 7f       	andi	r25, 0xF0	; 240
     816:	98 27       	eor	r25, r24
     818:	80 7f       	andi	r24, 0xF0	; 240
     81a:	98 27       	eor	r25, r24
     81c:	fc 01       	movw	r30, r24
     81e:	e5 5e       	subi	r30, 0xE5	; 229
     820:	fd 4f       	sbci	r31, 0xFD	; 253
     822:	31 83       	std	Z+1, r19	; 0x01
     824:	20 83       	st	Z, r18
     826:	ca 01       	movw	r24, r20
     828:	8e 30       	cpi	r24, 0x0E	; 14
     82a:	91 05       	cpc	r25, r1
     82c:	2c f3       	brlt	.-54     	; 0x7f8 <initialize+0x12>
     82e:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     832:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	15 c0       	rjmp	.+42     	; 0x866 <initialize+0x80>
     83c:	ac 01       	movw	r20, r24
     83e:	4f 5f       	subi	r20, 0xFF	; 255
     840:	5f 4f       	sbci	r21, 0xFF	; 255
     842:	6d e1       	ldi	r22, 0x1D	; 29
     844:	64 9f       	mul	r22, r20
     846:	90 01       	movw	r18, r0
     848:	65 9f       	mul	r22, r21
     84a:	30 0d       	add	r19, r0
     84c:	11 24       	eor	r1, r1
     84e:	2a 59       	subi	r18, 0x9A	; 154
     850:	3e 4f       	sbci	r19, 0xFE	; 254
     852:	68 9f       	mul	r22, r24
     854:	f0 01       	movw	r30, r0
     856:	69 9f       	mul	r22, r25
     858:	f0 0d       	add	r31, r0
     85a:	11 24       	eor	r1, r1
     85c:	ea 59       	subi	r30, 0x9A	; 154
     85e:	fe 4f       	sbci	r31, 0xFE	; 254
     860:	31 83       	std	Z+1, r19	; 0x01
     862:	20 83       	st	Z, r18
     864:	ca 01       	movw	r24, r20
     866:	83 30       	cpi	r24, 0x03	; 3
     868:	91 05       	cpc	r25, r1
     86a:	44 f3       	brlt	.-48     	; 0x83c <initialize+0x56>
     86c:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <threads+0x58>
     870:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <threads+0x57>
     874:	1a 82       	std	Y+2, r1	; 0x02
     876:	19 82       	std	Y+1, r1	; 0x01
     878:	32 c0       	rjmp	.+100    	; 0x8de <initialize+0xf8>
     87a:	2d e1       	ldi	r18, 0x1D	; 29
     87c:	49 81       	ldd	r20, Y+1	; 0x01
     87e:	5a 81       	ldd	r21, Y+2	; 0x02
     880:	24 9f       	mul	r18, r20
     882:	c0 01       	movw	r24, r0
     884:	25 9f       	mul	r18, r21
     886:	90 0d       	add	r25, r0
     888:	11 24       	eor	r1, r1
     88a:	fc 01       	movw	r30, r24
     88c:	e4 59       	subi	r30, 0x94	; 148
     88e:	fe 4f       	sbci	r31, 0xFE	; 254
     890:	fc 83       	std	Y+4, r31	; 0x04
     892:	eb 83       	std	Y+3, r30	; 0x03
     894:	cf 01       	movw	r24, r30
     896:	0e 94 c7 10 	call	0x218e	; 0x218e <setjmp>
     89a:	20 e6       	ldi	r18, 0x60	; 96
     89c:	49 81       	ldd	r20, Y+1	; 0x01
     89e:	5a 81       	ldd	r21, Y+2	; 0x02
     8a0:	24 9f       	mul	r18, r20
     8a2:	c0 01       	movw	r24, r0
     8a4:	25 9f       	mul	r18, r21
     8a6:	90 0d       	add	r25, r0
     8a8:	11 24       	eor	r1, r1
     8aa:	89 59       	subi	r24, 0x99	; 153
     8ac:	9c 4f       	sbci	r25, 0xFC	; 252
     8ae:	eb 81       	ldd	r30, Y+3	; 0x03
     8b0:	fc 81       	ldd	r31, Y+4	; 0x04
     8b2:	91 8b       	std	Z+17, r25	; 0x11
     8b4:	80 8b       	std	Z+16, r24	; 0x10
     8b6:	93 8b       	std	Z+19, r25	; 0x13
     8b8:	82 8b       	std	Z+18, r24	; 0x12
     8ba:	8f ec       	ldi	r24, 0xCF	; 207
     8bc:	9f e0       	ldi	r25, 0x0F	; 15
     8be:	96 8b       	std	Z+22, r25	; 0x16
     8c0:	85 8b       	std	Z+21, r24	; 0x15
     8c2:	8d e1       	ldi	r24, 0x1D	; 29
     8c4:	84 9f       	mul	r24, r20
     8c6:	f0 01       	movw	r30, r0
     8c8:	85 9f       	mul	r24, r21
     8ca:	f0 0d       	add	r31, r0
     8cc:	11 24       	eor	r1, r1
     8ce:	ea 59       	subi	r30, 0x9A	; 154
     8d0:	fe 4f       	sbci	r31, 0xFE	; 254
     8d2:	15 82       	std	Z+5, r1	; 0x05
     8d4:	14 82       	std	Z+4, r1	; 0x04
     8d6:	4f 5f       	subi	r20, 0xFF	; 255
     8d8:	5f 4f       	sbci	r21, 0xFF	; 255
     8da:	5a 83       	std	Y+2, r21	; 0x02
     8dc:	49 83       	std	Y+1, r20	; 0x01
     8de:	29 81       	ldd	r18, Y+1	; 0x01
     8e0:	3a 81       	ldd	r19, Y+2	; 0x02
     8e2:	24 30       	cpi	r18, 0x04	; 4
     8e4:	31 05       	cpc	r19, r1
     8e6:	4c f2       	brlt	.-110    	; 0x87a <initialize+0x94>
     8e8:	ee ef       	ldi	r30, 0xFE	; 254
     8ea:	f1 e0       	ldi	r31, 0x01	; 1
     8ec:	11 82       	std	Z+1, r1	; 0x01
     8ee:	10 82       	st	Z, r1
     8f0:	15 82       	std	Z+5, r1	; 0x05
     8f2:	14 82       	std	Z+4, r1	; 0x04
     8f4:	13 82       	std	Z+3, r1	; 0x03
     8f6:	12 82       	std	Z+2, r1	; 0x02
     8f8:	e1 e6       	ldi	r30, 0x61	; 97
     8fa:	f0 e0       	ldi	r31, 0x00	; 0
     8fc:	80 e8       	ldi	r24, 0x80	; 128
     8fe:	80 83       	st	Z, r24
     900:	10 82       	st	Z, r1
     902:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     906:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     90a:	84 e0       	ldi	r24, 0x04	; 4
     90c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     910:	81 e0       	ldi	r24, 0x01	; 1
     912:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     916:	0f 90       	pop	r0
     918:	0f 90       	pop	r0
     91a:	0f 90       	pop	r0
     91c:	0f 90       	pop	r0
     91e:	df 91       	pop	r29
     920:	cf 91       	pop	r28
     922:	08 95       	ret

00000924 <dispatch>:
     924:	cf 93       	push	r28
     926:	df 93       	push	r29
     928:	00 d0       	rcall	.+0      	; 0x92a <dispatch+0x6>
     92a:	cd b7       	in	r28, 0x3d	; 61
     92c:	de b7       	in	r29, 0x3e	; 62
     92e:	9a 83       	std	Y+2, r25	; 0x02
     930:	89 83       	std	Y+1, r24	; 0x01
     932:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     936:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     93a:	06 96       	adiw	r24, 0x06	; 6
     93c:	0e 94 c7 10 	call	0x218e	; 0x218e <setjmp>
     940:	89 2b       	or	r24, r25
     942:	59 f4       	brne	.+22     	; 0x95a <dispatch+0x36>
     944:	89 81       	ldd	r24, Y+1	; 0x01
     946:	9a 81       	ldd	r25, Y+2	; 0x02
     948:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     94c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     950:	61 e0       	ldi	r22, 0x01	; 1
     952:	70 e0       	ldi	r23, 0x00	; 0
     954:	06 96       	adiw	r24, 0x06	; 6
     956:	0e 94 e7 10 	call	0x21ce	; 0x21ce <longjmp>
     95a:	0f 90       	pop	r0
     95c:	0f 90       	pop	r0
     95e:	df 91       	pop	r29
     960:	cf 91       	pop	r28
     962:	08 95       	ret

00000964 <enqueueByDeadline>:
     964:	0f 93       	push	r16
     966:	1f 93       	push	r17
     968:	cf 93       	push	r28
     96a:	df 93       	push	r29
     96c:	dc 01       	movw	r26, r24
     96e:	cb 01       	movw	r24, r22
     970:	eb 01       	movw	r28, r22
     972:	e8 81       	ld	r30, Y
     974:	f9 81       	ldd	r31, Y+1	; 0x01
     976:	c0 e0       	ldi	r28, 0x00	; 0
     978:	d0 e0       	ldi	r29, 0x00	; 0
     97a:	04 c0       	rjmp	.+8      	; 0x984 <enqueueByDeadline+0x20>
     97c:	ef 01       	movw	r28, r30
     97e:	01 90       	ld	r0, Z+
     980:	f0 81       	ld	r31, Z
     982:	e0 2d       	mov	r30, r0
     984:	30 97       	sbiw	r30, 0x00	; 0
     986:	79 f0       	breq	.+30     	; 0x9a6 <enqueueByDeadline+0x42>
     988:	06 81       	ldd	r16, Z+6	; 0x06
     98a:	17 81       	ldd	r17, Z+7	; 0x07
     98c:	20 85       	ldd	r18, Z+8	; 0x08
     98e:	31 85       	ldd	r19, Z+9	; 0x09
     990:	16 96       	adiw	r26, 0x06	; 6
     992:	4d 91       	ld	r20, X+
     994:	5d 91       	ld	r21, X+
     996:	6d 91       	ld	r22, X+
     998:	7c 91       	ld	r23, X
     99a:	19 97       	sbiw	r26, 0x09	; 9
     99c:	40 17       	cp	r20, r16
     99e:	51 07       	cpc	r21, r17
     9a0:	62 07       	cpc	r22, r18
     9a2:	73 07       	cpc	r23, r19
     9a4:	5c f7       	brge	.-42     	; 0x97c <enqueueByDeadline+0x18>
     9a6:	11 96       	adiw	r26, 0x01	; 1
     9a8:	fc 93       	st	X, r31
     9aa:	ee 93       	st	-X, r30
     9ac:	20 97       	sbiw	r28, 0x00	; 0
     9ae:	21 f4       	brne	.+8      	; 0x9b8 <enqueueByDeadline+0x54>
     9b0:	fc 01       	movw	r30, r24
     9b2:	b1 83       	std	Z+1, r27	; 0x01
     9b4:	a0 83       	st	Z, r26
     9b6:	02 c0       	rjmp	.+4      	; 0x9bc <enqueueByDeadline+0x58>
     9b8:	b9 83       	std	Y+1, r27	; 0x01
     9ba:	a8 83       	st	Y, r26
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	1f 91       	pop	r17
     9c2:	0f 91       	pop	r16
     9c4:	08 95       	ret

000009c6 <enqueueByBaseline>:
     9c6:	0f 93       	push	r16
     9c8:	1f 93       	push	r17
     9ca:	cf 93       	push	r28
     9cc:	df 93       	push	r29
     9ce:	dc 01       	movw	r26, r24
     9d0:	cb 01       	movw	r24, r22
     9d2:	eb 01       	movw	r28, r22
     9d4:	e8 81       	ld	r30, Y
     9d6:	f9 81       	ldd	r31, Y+1	; 0x01
     9d8:	c0 e0       	ldi	r28, 0x00	; 0
     9da:	d0 e0       	ldi	r29, 0x00	; 0
     9dc:	04 c0       	rjmp	.+8      	; 0x9e6 <enqueueByBaseline+0x20>
     9de:	ef 01       	movw	r28, r30
     9e0:	01 90       	ld	r0, Z+
     9e2:	f0 81       	ld	r31, Z
     9e4:	e0 2d       	mov	r30, r0
     9e6:	30 97       	sbiw	r30, 0x00	; 0
     9e8:	79 f0       	breq	.+30     	; 0xa08 <enqueueByBaseline+0x42>
     9ea:	02 81       	ldd	r16, Z+2	; 0x02
     9ec:	13 81       	ldd	r17, Z+3	; 0x03
     9ee:	24 81       	ldd	r18, Z+4	; 0x04
     9f0:	35 81       	ldd	r19, Z+5	; 0x05
     9f2:	12 96       	adiw	r26, 0x02	; 2
     9f4:	4d 91       	ld	r20, X+
     9f6:	5d 91       	ld	r21, X+
     9f8:	6d 91       	ld	r22, X+
     9fa:	7c 91       	ld	r23, X
     9fc:	15 97       	sbiw	r26, 0x05	; 5
     9fe:	40 17       	cp	r20, r16
     a00:	51 07       	cpc	r21, r17
     a02:	62 07       	cpc	r22, r18
     a04:	73 07       	cpc	r23, r19
     a06:	5c f7       	brge	.-42     	; 0x9de <enqueueByBaseline+0x18>
     a08:	11 96       	adiw	r26, 0x01	; 1
     a0a:	fc 93       	st	X, r31
     a0c:	ee 93       	st	-X, r30
     a0e:	20 97       	sbiw	r28, 0x00	; 0
     a10:	21 f4       	brne	.+8      	; 0xa1a <enqueueByBaseline+0x54>
     a12:	fc 01       	movw	r30, r24
     a14:	b1 83       	std	Z+1, r27	; 0x01
     a16:	a0 83       	st	Z, r26
     a18:	02 c0       	rjmp	.+4      	; 0xa1e <enqueueByBaseline+0x58>
     a1a:	b9 83       	std	Y+1, r27	; 0x01
     a1c:	a8 83       	st	Y, r26
     a1e:	df 91       	pop	r29
     a20:	cf 91       	pop	r28
     a22:	1f 91       	pop	r17
     a24:	0f 91       	pop	r16
     a26:	08 95       	ret

00000a28 <dequeue>:
     a28:	dc 01       	movw	r26, r24
     a2a:	ed 91       	ld	r30, X+
     a2c:	fc 91       	ld	r31, X
     a2e:	11 97       	sbiw	r26, 0x01	; 1
     a30:	30 97       	sbiw	r30, 0x00	; 0
     a32:	59 f4       	brne	.+22     	; 0xa4a <dequeue+0x22>
     a34:	8f ef       	ldi	r24, 0xFF	; 255
     a36:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     a3a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     a3e:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     a42:	81 e0       	ldi	r24, 0x01	; 1
     a44:	83 bf       	out	0x33, r24	; 51
     a46:	88 95       	sleep
     a48:	fc cf       	rjmp	.-8      	; 0xa42 <dequeue+0x1a>
     a4a:	20 81       	ld	r18, Z
     a4c:	31 81       	ldd	r19, Z+1	; 0x01
     a4e:	2d 93       	st	X+, r18
     a50:	3c 93       	st	X, r19
     a52:	cf 01       	movw	r24, r30
     a54:	08 95       	ret

00000a56 <insert>:
     a56:	fb 01       	movw	r30, r22
     a58:	20 81       	ld	r18, Z
     a5a:	31 81       	ldd	r19, Z+1	; 0x01
     a5c:	fc 01       	movw	r30, r24
     a5e:	31 83       	std	Z+1, r19	; 0x01
     a60:	20 83       	st	Z, r18
     a62:	fb 01       	movw	r30, r22
     a64:	91 83       	std	Z+1, r25	; 0x01
     a66:	80 83       	st	Z, r24
     a68:	08 95       	ret

00000a6a <push>:
     a6a:	fb 01       	movw	r30, r22
     a6c:	20 81       	ld	r18, Z
     a6e:	31 81       	ldd	r19, Z+1	; 0x01
     a70:	fc 01       	movw	r30, r24
     a72:	31 83       	std	Z+1, r19	; 0x01
     a74:	20 83       	st	Z, r18
     a76:	fb 01       	movw	r30, r22
     a78:	91 83       	std	Z+1, r25	; 0x01
     a7a:	80 83       	st	Z, r24
     a7c:	08 95       	ret

00000a7e <pop>:
     a7e:	dc 01       	movw	r26, r24
     a80:	ed 91       	ld	r30, X+
     a82:	fc 91       	ld	r31, X
     a84:	11 97       	sbiw	r26, 0x01	; 1
     a86:	20 81       	ld	r18, Z
     a88:	31 81       	ldd	r19, Z+1	; 0x01
     a8a:	2d 93       	st	X+, r18
     a8c:	3c 93       	st	X, r19
     a8e:	cf 01       	movw	r24, r30
     a90:	08 95       	ret

00000a92 <schedule>:
     a92:	cf 93       	push	r28
     a94:	df 93       	push	r29
     a96:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     a9a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     a9e:	c2 81       	ldd	r28, Z+2	; 0x02
     aa0:	d3 81       	ldd	r29, Z+3	; 0x03
     aa2:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <msgQ>
     aa6:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <msgQ+0x1>
     aaa:	30 97       	sbiw	r30, 0x00	; 0
     aac:	19 f1       	breq	.+70     	; 0xaf4 <schedule+0x62>
     aae:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     ab2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     ab6:	89 2b       	or	r24, r25
     ab8:	e9 f0       	breq	.+58     	; 0xaf4 <schedule+0x62>
     aba:	20 97       	sbiw	r28, 0x00	; 0
     abc:	69 f0       	breq	.+26     	; 0xad8 <schedule+0x46>
     abe:	86 81       	ldd	r24, Z+6	; 0x06
     ac0:	97 81       	ldd	r25, Z+7	; 0x07
     ac2:	a0 85       	ldd	r26, Z+8	; 0x08
     ac4:	b1 85       	ldd	r27, Z+9	; 0x09
     ac6:	4e 81       	ldd	r20, Y+6	; 0x06
     ac8:	5f 81       	ldd	r21, Y+7	; 0x07
     aca:	68 85       	ldd	r22, Y+8	; 0x08
     acc:	79 85       	ldd	r23, Y+9	; 0x09
     ace:	84 1b       	sub	r24, r20
     ad0:	95 0b       	sbc	r25, r21
     ad2:	a6 0b       	sbc	r26, r22
     ad4:	b7 0b       	sbc	r27, r23
     ad6:	72 f4       	brpl	.+28     	; 0xaf4 <schedule+0x62>
     ad8:	84 e0       	ldi	r24, 0x04	; 4
     ada:	91 e0       	ldi	r25, 0x01	; 1
     adc:	0e 94 3f 05 	call	0xa7e	; 0xa7e <pop>
     ae0:	62 e0       	ldi	r22, 0x02	; 2
     ae2:	71 e0       	ldi	r23, 0x01	; 1
     ae4:	0e 94 35 05 	call	0xa6a	; 0xa6a <push>
     ae8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     aec:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     af0:	0e 94 92 04 	call	0x924	; 0x924 <dispatch>
     af4:	df 91       	pop	r29
     af6:	cf 91       	pop	r28
     af8:	08 95       	ret

00000afa <__vector_1>:
     afa:	1f 92       	push	r1
     afc:	0f 92       	push	r0
     afe:	0f b6       	in	r0, 0x3f	; 63
     b00:	0f 92       	push	r0
     b02:	11 24       	eor	r1, r1
     b04:	0f 93       	push	r16
     b06:	1f 93       	push	r17
     b08:	2f 93       	push	r18
     b0a:	3f 93       	push	r19
     b0c:	4f 93       	push	r20
     b0e:	5f 93       	push	r21
     b10:	6f 93       	push	r22
     b12:	7f 93       	push	r23
     b14:	8f 93       	push	r24
     b16:	9f 93       	push	r25
     b18:	af 93       	push	r26
     b1a:	bf 93       	push	r27
     b1c:	ef 93       	push	r30
     b1e:	ff 93       	push	r31
     b20:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
     b24:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
     b28:	ac 01       	movw	r20, r24
     b2a:	09 2e       	mov	r0, r25
     b2c:	00 0c       	add	r0, r0
     b2e:	66 0b       	sbc	r22, r22
     b30:	77 0b       	sbc	r23, r23
     b32:	9a 01       	movw	r18, r20
     b34:	11 27       	eor	r17, r17
     b36:	00 27       	eor	r16, r16
     b38:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b3c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b40:	60 e0       	ldi	r22, 0x00	; 0
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	40 2b       	or	r20, r16
     b46:	51 2b       	or	r21, r17
     b48:	62 2b       	or	r22, r18
     b4a:	73 2b       	or	r23, r19
     b4c:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
     b50:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
     b54:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
     b58:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
     b5c:	b0 9b       	sbis	0x16, 0	; 22
     b5e:	1a c0       	rjmp	.+52     	; 0xb94 <__vector_1+0x9a>
     b60:	01 96       	adiw	r24, 0x01	; 1
     b62:	09 2e       	mov	r0, r25
     b64:	00 0c       	add	r0, r0
     b66:	aa 0b       	sbc	r26, r26
     b68:	bb 0b       	sbc	r27, r27
     b6a:	bc 01       	movw	r22, r24
     b6c:	55 27       	eor	r21, r21
     b6e:	44 27       	eor	r20, r20
     b70:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b74:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b78:	a0 e0       	ldi	r26, 0x00	; 0
     b7a:	b0 e0       	ldi	r27, 0x00	; 0
     b7c:	84 2b       	or	r24, r20
     b7e:	95 2b       	or	r25, r21
     b80:	a6 2b       	or	r26, r22
     b82:	b7 2b       	or	r27, r23
     b84:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     b88:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     b8c:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     b90:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     b94:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     b98:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     b9c:	30 97       	sbiw	r30, 0x00	; 0
     b9e:	39 f0       	breq	.+14     	; 0xbae <__vector_1+0xb4>
     ba0:	60 e0       	ldi	r22, 0x00	; 0
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     ba8:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     bac:	09 95       	icall
     bae:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
     bb2:	ff 91       	pop	r31
     bb4:	ef 91       	pop	r30
     bb6:	bf 91       	pop	r27
     bb8:	af 91       	pop	r26
     bba:	9f 91       	pop	r25
     bbc:	8f 91       	pop	r24
     bbe:	7f 91       	pop	r23
     bc0:	6f 91       	pop	r22
     bc2:	5f 91       	pop	r21
     bc4:	4f 91       	pop	r20
     bc6:	3f 91       	pop	r19
     bc8:	2f 91       	pop	r18
     bca:	1f 91       	pop	r17
     bcc:	0f 91       	pop	r16
     bce:	0f 90       	pop	r0
     bd0:	0f be       	out	0x3f, r0	; 63
     bd2:	0f 90       	pop	r0
     bd4:	1f 90       	pop	r1
     bd6:	18 95       	reti

00000bd8 <__vector_2>:
     bd8:	1f 92       	push	r1
     bda:	0f 92       	push	r0
     bdc:	0f b6       	in	r0, 0x3f	; 63
     bde:	0f 92       	push	r0
     be0:	11 24       	eor	r1, r1
     be2:	0f 93       	push	r16
     be4:	1f 93       	push	r17
     be6:	2f 93       	push	r18
     be8:	3f 93       	push	r19
     bea:	4f 93       	push	r20
     bec:	5f 93       	push	r21
     bee:	6f 93       	push	r22
     bf0:	7f 93       	push	r23
     bf2:	8f 93       	push	r24
     bf4:	9f 93       	push	r25
     bf6:	af 93       	push	r26
     bf8:	bf 93       	push	r27
     bfa:	ef 93       	push	r30
     bfc:	ff 93       	push	r31
     bfe:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
     c02:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
     c06:	ac 01       	movw	r20, r24
     c08:	09 2e       	mov	r0, r25
     c0a:	00 0c       	add	r0, r0
     c0c:	66 0b       	sbc	r22, r22
     c0e:	77 0b       	sbc	r23, r23
     c10:	9a 01       	movw	r18, r20
     c12:	11 27       	eor	r17, r17
     c14:	00 27       	eor	r16, r16
     c16:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c1a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c1e:	60 e0       	ldi	r22, 0x00	; 0
     c20:	70 e0       	ldi	r23, 0x00	; 0
     c22:	40 2b       	or	r20, r16
     c24:	51 2b       	or	r21, r17
     c26:	62 2b       	or	r22, r18
     c28:	73 2b       	or	r23, r19
     c2a:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
     c2e:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
     c32:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
     c36:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
     c3a:	b0 9b       	sbis	0x16, 0	; 22
     c3c:	1a c0       	rjmp	.+52     	; 0xc72 <__vector_2+0x9a>
     c3e:	01 96       	adiw	r24, 0x01	; 1
     c40:	09 2e       	mov	r0, r25
     c42:	00 0c       	add	r0, r0
     c44:	aa 0b       	sbc	r26, r26
     c46:	bb 0b       	sbc	r27, r27
     c48:	bc 01       	movw	r22, r24
     c4a:	55 27       	eor	r21, r21
     c4c:	44 27       	eor	r20, r20
     c4e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c52:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c56:	a0 e0       	ldi	r26, 0x00	; 0
     c58:	b0 e0       	ldi	r27, 0x00	; 0
     c5a:	84 2b       	or	r24, r20
     c5c:	95 2b       	or	r25, r21
     c5e:	a6 2b       	or	r26, r22
     c60:	b7 2b       	or	r27, r23
     c62:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     c66:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     c6a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     c6e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     c72:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     c76:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     c7a:	30 97       	sbiw	r30, 0x00	; 0
     c7c:	39 f0       	breq	.+14     	; 0xc8c <__vector_2+0xb4>
     c7e:	61 e0       	ldi	r22, 0x01	; 1
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     c86:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     c8a:	09 95       	icall
     c8c:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
     c90:	ff 91       	pop	r31
     c92:	ef 91       	pop	r30
     c94:	bf 91       	pop	r27
     c96:	af 91       	pop	r26
     c98:	9f 91       	pop	r25
     c9a:	8f 91       	pop	r24
     c9c:	7f 91       	pop	r23
     c9e:	6f 91       	pop	r22
     ca0:	5f 91       	pop	r21
     ca2:	4f 91       	pop	r20
     ca4:	3f 91       	pop	r19
     ca6:	2f 91       	pop	r18
     ca8:	1f 91       	pop	r17
     caa:	0f 91       	pop	r16
     cac:	0f 90       	pop	r0
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	0f 90       	pop	r0
     cb2:	1f 90       	pop	r1
     cb4:	18 95       	reti

00000cb6 <__vector_3>:
     cb6:	1f 92       	push	r1
     cb8:	0f 92       	push	r0
     cba:	0f b6       	in	r0, 0x3f	; 63
     cbc:	0f 92       	push	r0
     cbe:	11 24       	eor	r1, r1
     cc0:	0f 93       	push	r16
     cc2:	1f 93       	push	r17
     cc4:	2f 93       	push	r18
     cc6:	3f 93       	push	r19
     cc8:	4f 93       	push	r20
     cca:	5f 93       	push	r21
     ccc:	6f 93       	push	r22
     cce:	7f 93       	push	r23
     cd0:	8f 93       	push	r24
     cd2:	9f 93       	push	r25
     cd4:	af 93       	push	r26
     cd6:	bf 93       	push	r27
     cd8:	ef 93       	push	r30
     cda:	ff 93       	push	r31
     cdc:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
     ce0:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
     ce4:	ac 01       	movw	r20, r24
     ce6:	09 2e       	mov	r0, r25
     ce8:	00 0c       	add	r0, r0
     cea:	66 0b       	sbc	r22, r22
     cec:	77 0b       	sbc	r23, r23
     cee:	9a 01       	movw	r18, r20
     cf0:	11 27       	eor	r17, r17
     cf2:	00 27       	eor	r16, r16
     cf4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cf8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cfc:	60 e0       	ldi	r22, 0x00	; 0
     cfe:	70 e0       	ldi	r23, 0x00	; 0
     d00:	40 2b       	or	r20, r16
     d02:	51 2b       	or	r21, r17
     d04:	62 2b       	or	r22, r18
     d06:	73 2b       	or	r23, r19
     d08:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
     d0c:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
     d10:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
     d14:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
     d18:	b0 9b       	sbis	0x16, 0	; 22
     d1a:	1a c0       	rjmp	.+52     	; 0xd50 <__vector_3+0x9a>
     d1c:	01 96       	adiw	r24, 0x01	; 1
     d1e:	09 2e       	mov	r0, r25
     d20:	00 0c       	add	r0, r0
     d22:	aa 0b       	sbc	r26, r26
     d24:	bb 0b       	sbc	r27, r27
     d26:	bc 01       	movw	r22, r24
     d28:	55 27       	eor	r21, r21
     d2a:	44 27       	eor	r20, r20
     d2c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d30:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d34:	a0 e0       	ldi	r26, 0x00	; 0
     d36:	b0 e0       	ldi	r27, 0x00	; 0
     d38:	84 2b       	or	r24, r20
     d3a:	95 2b       	or	r25, r21
     d3c:	a6 2b       	or	r26, r22
     d3e:	b7 2b       	or	r27, r23
     d40:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     d44:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     d48:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     d4c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     d50:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     d54:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     d58:	30 97       	sbiw	r30, 0x00	; 0
     d5a:	39 f0       	breq	.+14     	; 0xd6a <__vector_3+0xb4>
     d5c:	62 e0       	ldi	r22, 0x02	; 2
     d5e:	70 e0       	ldi	r23, 0x00	; 0
     d60:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     d64:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     d68:	09 95       	icall
     d6a:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
     d6e:	ff 91       	pop	r31
     d70:	ef 91       	pop	r30
     d72:	bf 91       	pop	r27
     d74:	af 91       	pop	r26
     d76:	9f 91       	pop	r25
     d78:	8f 91       	pop	r24
     d7a:	7f 91       	pop	r23
     d7c:	6f 91       	pop	r22
     d7e:	5f 91       	pop	r21
     d80:	4f 91       	pop	r20
     d82:	3f 91       	pop	r19
     d84:	2f 91       	pop	r18
     d86:	1f 91       	pop	r17
     d88:	0f 91       	pop	r16
     d8a:	0f 90       	pop	r0
     d8c:	0f be       	out	0x3f, r0	; 63
     d8e:	0f 90       	pop	r0
     d90:	1f 90       	pop	r1
     d92:	18 95       	reti

00000d94 <__vector_4>:
     d94:	1f 92       	push	r1
     d96:	0f 92       	push	r0
     d98:	0f b6       	in	r0, 0x3f	; 63
     d9a:	0f 92       	push	r0
     d9c:	11 24       	eor	r1, r1
     d9e:	0f 93       	push	r16
     da0:	1f 93       	push	r17
     da2:	2f 93       	push	r18
     da4:	3f 93       	push	r19
     da6:	4f 93       	push	r20
     da8:	5f 93       	push	r21
     daa:	6f 93       	push	r22
     dac:	7f 93       	push	r23
     dae:	8f 93       	push	r24
     db0:	9f 93       	push	r25
     db2:	af 93       	push	r26
     db4:	bf 93       	push	r27
     db6:	ef 93       	push	r30
     db8:	ff 93       	push	r31
     dba:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
     dbe:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
     dc2:	ac 01       	movw	r20, r24
     dc4:	09 2e       	mov	r0, r25
     dc6:	00 0c       	add	r0, r0
     dc8:	66 0b       	sbc	r22, r22
     dca:	77 0b       	sbc	r23, r23
     dcc:	9a 01       	movw	r18, r20
     dce:	11 27       	eor	r17, r17
     dd0:	00 27       	eor	r16, r16
     dd2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dd6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dda:	60 e0       	ldi	r22, 0x00	; 0
     ddc:	70 e0       	ldi	r23, 0x00	; 0
     dde:	40 2b       	or	r20, r16
     de0:	51 2b       	or	r21, r17
     de2:	62 2b       	or	r22, r18
     de4:	73 2b       	or	r23, r19
     de6:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
     dea:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
     dee:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
     df2:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
     df6:	b0 9b       	sbis	0x16, 0	; 22
     df8:	1a c0       	rjmp	.+52     	; 0xe2e <__vector_4+0x9a>
     dfa:	01 96       	adiw	r24, 0x01	; 1
     dfc:	09 2e       	mov	r0, r25
     dfe:	00 0c       	add	r0, r0
     e00:	aa 0b       	sbc	r26, r26
     e02:	bb 0b       	sbc	r27, r27
     e04:	bc 01       	movw	r22, r24
     e06:	55 27       	eor	r21, r21
     e08:	44 27       	eor	r20, r20
     e0a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e0e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e12:	a0 e0       	ldi	r26, 0x00	; 0
     e14:	b0 e0       	ldi	r27, 0x00	; 0
     e16:	84 2b       	or	r24, r20
     e18:	95 2b       	or	r25, r21
     e1a:	a6 2b       	or	r26, r22
     e1c:	b7 2b       	or	r27, r23
     e1e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e22:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e26:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e2a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e2e:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     e32:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     e36:	30 97       	sbiw	r30, 0x00	; 0
     e38:	39 f0       	breq	.+14     	; 0xe48 <__vector_4+0xb4>
     e3a:	63 e0       	ldi	r22, 0x03	; 3
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     e42:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     e46:	09 95       	icall
     e48:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
     e4c:	ff 91       	pop	r31
     e4e:	ef 91       	pop	r30
     e50:	bf 91       	pop	r27
     e52:	af 91       	pop	r26
     e54:	9f 91       	pop	r25
     e56:	8f 91       	pop	r24
     e58:	7f 91       	pop	r23
     e5a:	6f 91       	pop	r22
     e5c:	5f 91       	pop	r21
     e5e:	4f 91       	pop	r20
     e60:	3f 91       	pop	r19
     e62:	2f 91       	pop	r18
     e64:	1f 91       	pop	r17
     e66:	0f 91       	pop	r16
     e68:	0f 90       	pop	r0
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	0f 90       	pop	r0
     e6e:	1f 90       	pop	r1
     e70:	18 95       	reti

00000e72 <__vector_5>:
     e72:	1f 92       	push	r1
     e74:	0f 92       	push	r0
     e76:	0f b6       	in	r0, 0x3f	; 63
     e78:	0f 92       	push	r0
     e7a:	11 24       	eor	r1, r1
     e7c:	0f 93       	push	r16
     e7e:	1f 93       	push	r17
     e80:	2f 93       	push	r18
     e82:	3f 93       	push	r19
     e84:	4f 93       	push	r20
     e86:	5f 93       	push	r21
     e88:	6f 93       	push	r22
     e8a:	7f 93       	push	r23
     e8c:	8f 93       	push	r24
     e8e:	9f 93       	push	r25
     e90:	af 93       	push	r26
     e92:	bf 93       	push	r27
     e94:	ef 93       	push	r30
     e96:	ff 93       	push	r31
     e98:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
     e9c:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
     ea0:	ac 01       	movw	r20, r24
     ea2:	09 2e       	mov	r0, r25
     ea4:	00 0c       	add	r0, r0
     ea6:	66 0b       	sbc	r22, r22
     ea8:	77 0b       	sbc	r23, r23
     eaa:	9a 01       	movw	r18, r20
     eac:	11 27       	eor	r17, r17
     eae:	00 27       	eor	r16, r16
     eb0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eb4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eb8:	60 e0       	ldi	r22, 0x00	; 0
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	40 2b       	or	r20, r16
     ebe:	51 2b       	or	r21, r17
     ec0:	62 2b       	or	r22, r18
     ec2:	73 2b       	or	r23, r19
     ec4:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
     ec8:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
     ecc:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
     ed0:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
     ed4:	b0 9b       	sbis	0x16, 0	; 22
     ed6:	1a c0       	rjmp	.+52     	; 0xf0c <__vector_5+0x9a>
     ed8:	01 96       	adiw	r24, 0x01	; 1
     eda:	09 2e       	mov	r0, r25
     edc:	00 0c       	add	r0, r0
     ede:	aa 0b       	sbc	r26, r26
     ee0:	bb 0b       	sbc	r27, r27
     ee2:	bc 01       	movw	r22, r24
     ee4:	55 27       	eor	r21, r21
     ee6:	44 27       	eor	r20, r20
     ee8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eec:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ef0:	a0 e0       	ldi	r26, 0x00	; 0
     ef2:	b0 e0       	ldi	r27, 0x00	; 0
     ef4:	84 2b       	or	r24, r20
     ef6:	95 2b       	or	r25, r21
     ef8:	a6 2b       	or	r26, r22
     efa:	b7 2b       	or	r27, r23
     efc:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f00:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f04:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f08:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f0c:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
     f10:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
     f14:	30 97       	sbiw	r30, 0x00	; 0
     f16:	39 f0       	breq	.+14     	; 0xf26 <__vector_5+0xb4>
     f18:	64 e0       	ldi	r22, 0x04	; 4
     f1a:	70 e0       	ldi	r23, 0x00	; 0
     f1c:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
     f20:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
     f24:	09 95       	icall
     f26:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
     f2a:	ff 91       	pop	r31
     f2c:	ef 91       	pop	r30
     f2e:	bf 91       	pop	r27
     f30:	af 91       	pop	r26
     f32:	9f 91       	pop	r25
     f34:	8f 91       	pop	r24
     f36:	7f 91       	pop	r23
     f38:	6f 91       	pop	r22
     f3a:	5f 91       	pop	r21
     f3c:	4f 91       	pop	r20
     f3e:	3f 91       	pop	r19
     f40:	2f 91       	pop	r18
     f42:	1f 91       	pop	r17
     f44:	0f 91       	pop	r16
     f46:	0f 90       	pop	r0
     f48:	0f be       	out	0x3f, r0	; 63
     f4a:	0f 90       	pop	r0
     f4c:	1f 90       	pop	r1
     f4e:	18 95       	reti

00000f50 <__vector_10>:
     f50:	1f 92       	push	r1
     f52:	0f 92       	push	r0
     f54:	0f b6       	in	r0, 0x3f	; 63
     f56:	0f 92       	push	r0
     f58:	11 24       	eor	r1, r1
     f5a:	0f 93       	push	r16
     f5c:	1f 93       	push	r17
     f5e:	2f 93       	push	r18
     f60:	3f 93       	push	r19
     f62:	4f 93       	push	r20
     f64:	5f 93       	push	r21
     f66:	6f 93       	push	r22
     f68:	7f 93       	push	r23
     f6a:	8f 93       	push	r24
     f6c:	9f 93       	push	r25
     f6e:	af 93       	push	r26
     f70:	bf 93       	push	r27
     f72:	ef 93       	push	r30
     f74:	ff 93       	push	r31
     f76:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
     f7a:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
     f7e:	ac 01       	movw	r20, r24
     f80:	09 2e       	mov	r0, r25
     f82:	00 0c       	add	r0, r0
     f84:	66 0b       	sbc	r22, r22
     f86:	77 0b       	sbc	r23, r23
     f88:	9a 01       	movw	r18, r20
     f8a:	11 27       	eor	r17, r17
     f8c:	00 27       	eor	r16, r16
     f8e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f92:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f96:	60 e0       	ldi	r22, 0x00	; 0
     f98:	70 e0       	ldi	r23, 0x00	; 0
     f9a:	40 2b       	or	r20, r16
     f9c:	51 2b       	or	r21, r17
     f9e:	62 2b       	or	r22, r18
     fa0:	73 2b       	or	r23, r19
     fa2:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
     fa6:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
     faa:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
     fae:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
     fb2:	b0 9b       	sbis	0x16, 0	; 22
     fb4:	1a c0       	rjmp	.+52     	; 0xfea <__vector_10+0x9a>
     fb6:	01 96       	adiw	r24, 0x01	; 1
     fb8:	09 2e       	mov	r0, r25
     fba:	00 0c       	add	r0, r0
     fbc:	aa 0b       	sbc	r26, r26
     fbe:	bb 0b       	sbc	r27, r27
     fc0:	bc 01       	movw	r22, r24
     fc2:	55 27       	eor	r21, r21
     fc4:	44 27       	eor	r20, r20
     fc6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fce:	a0 e0       	ldi	r26, 0x00	; 0
     fd0:	b0 e0       	ldi	r27, 0x00	; 0
     fd2:	84 2b       	or	r24, r20
     fd4:	95 2b       	or	r25, r21
     fd6:	a6 2b       	or	r26, r22
     fd8:	b7 2b       	or	r27, r23
     fda:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     fde:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     fe2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     fe6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     fea:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
     fee:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
     ff2:	30 97       	sbiw	r30, 0x00	; 0
     ff4:	39 f0       	breq	.+14     	; 0x1004 <__vector_10+0xb4>
     ff6:	65 e0       	ldi	r22, 0x05	; 5
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
     ffe:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
    1002:	09 95       	icall
    1004:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    1008:	ff 91       	pop	r31
    100a:	ef 91       	pop	r30
    100c:	bf 91       	pop	r27
    100e:	af 91       	pop	r26
    1010:	9f 91       	pop	r25
    1012:	8f 91       	pop	r24
    1014:	7f 91       	pop	r23
    1016:	6f 91       	pop	r22
    1018:	5f 91       	pop	r21
    101a:	4f 91       	pop	r20
    101c:	3f 91       	pop	r19
    101e:	2f 91       	pop	r18
    1020:	1f 91       	pop	r17
    1022:	0f 91       	pop	r16
    1024:	0f 90       	pop	r0
    1026:	0f be       	out	0x3f, r0	; 63
    1028:	0f 90       	pop	r0
    102a:	1f 90       	pop	r1
    102c:	18 95       	reti

0000102e <__vector_11>:
    102e:	1f 92       	push	r1
    1030:	0f 92       	push	r0
    1032:	0f b6       	in	r0, 0x3f	; 63
    1034:	0f 92       	push	r0
    1036:	11 24       	eor	r1, r1
    1038:	0f 93       	push	r16
    103a:	1f 93       	push	r17
    103c:	2f 93       	push	r18
    103e:	3f 93       	push	r19
    1040:	4f 93       	push	r20
    1042:	5f 93       	push	r21
    1044:	6f 93       	push	r22
    1046:	7f 93       	push	r23
    1048:	8f 93       	push	r24
    104a:	9f 93       	push	r25
    104c:	af 93       	push	r26
    104e:	bf 93       	push	r27
    1050:	ef 93       	push	r30
    1052:	ff 93       	push	r31
    1054:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1058:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    105c:	ac 01       	movw	r20, r24
    105e:	09 2e       	mov	r0, r25
    1060:	00 0c       	add	r0, r0
    1062:	66 0b       	sbc	r22, r22
    1064:	77 0b       	sbc	r23, r23
    1066:	9a 01       	movw	r18, r20
    1068:	11 27       	eor	r17, r17
    106a:	00 27       	eor	r16, r16
    106c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1070:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	40 2b       	or	r20, r16
    107a:	51 2b       	or	r21, r17
    107c:	62 2b       	or	r22, r18
    107e:	73 2b       	or	r23, r19
    1080:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    1084:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    1088:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    108c:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    1090:	b0 9b       	sbis	0x16, 0	; 22
    1092:	1a c0       	rjmp	.+52     	; 0x10c8 <__vector_11+0x9a>
    1094:	01 96       	adiw	r24, 0x01	; 1
    1096:	09 2e       	mov	r0, r25
    1098:	00 0c       	add	r0, r0
    109a:	aa 0b       	sbc	r26, r26
    109c:	bb 0b       	sbc	r27, r27
    109e:	bc 01       	movw	r22, r24
    10a0:	55 27       	eor	r21, r21
    10a2:	44 27       	eor	r20, r20
    10a4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10a8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ac:	a0 e0       	ldi	r26, 0x00	; 0
    10ae:	b0 e0       	ldi	r27, 0x00	; 0
    10b0:	84 2b       	or	r24, r20
    10b2:	95 2b       	or	r25, r21
    10b4:	a6 2b       	or	r26, r22
    10b6:	b7 2b       	or	r27, r23
    10b8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    10bc:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    10c0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    10c4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    10c8:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
    10cc:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
    10d0:	30 97       	sbiw	r30, 0x00	; 0
    10d2:	39 f0       	breq	.+14     	; 0x10e2 <__vector_11+0xb4>
    10d4:	66 e0       	ldi	r22, 0x06	; 6
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
    10dc:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
    10e0:	09 95       	icall
    10e2:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    10e6:	ff 91       	pop	r31
    10e8:	ef 91       	pop	r30
    10ea:	bf 91       	pop	r27
    10ec:	af 91       	pop	r26
    10ee:	9f 91       	pop	r25
    10f0:	8f 91       	pop	r24
    10f2:	7f 91       	pop	r23
    10f4:	6f 91       	pop	r22
    10f6:	5f 91       	pop	r21
    10f8:	4f 91       	pop	r20
    10fa:	3f 91       	pop	r19
    10fc:	2f 91       	pop	r18
    10fe:	1f 91       	pop	r17
    1100:	0f 91       	pop	r16
    1102:	0f 90       	pop	r0
    1104:	0f be       	out	0x3f, r0	; 63
    1106:	0f 90       	pop	r0
    1108:	1f 90       	pop	r1
    110a:	18 95       	reti

0000110c <__vector_12>:
    110c:	1f 92       	push	r1
    110e:	0f 92       	push	r0
    1110:	0f b6       	in	r0, 0x3f	; 63
    1112:	0f 92       	push	r0
    1114:	11 24       	eor	r1, r1
    1116:	0f 93       	push	r16
    1118:	1f 93       	push	r17
    111a:	2f 93       	push	r18
    111c:	3f 93       	push	r19
    111e:	4f 93       	push	r20
    1120:	5f 93       	push	r21
    1122:	6f 93       	push	r22
    1124:	7f 93       	push	r23
    1126:	8f 93       	push	r24
    1128:	9f 93       	push	r25
    112a:	af 93       	push	r26
    112c:	bf 93       	push	r27
    112e:	ef 93       	push	r30
    1130:	ff 93       	push	r31
    1132:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1136:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    113a:	ac 01       	movw	r20, r24
    113c:	09 2e       	mov	r0, r25
    113e:	00 0c       	add	r0, r0
    1140:	66 0b       	sbc	r22, r22
    1142:	77 0b       	sbc	r23, r23
    1144:	9a 01       	movw	r18, r20
    1146:	11 27       	eor	r17, r17
    1148:	00 27       	eor	r16, r16
    114a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    114e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1152:	60 e0       	ldi	r22, 0x00	; 0
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	40 2b       	or	r20, r16
    1158:	51 2b       	or	r21, r17
    115a:	62 2b       	or	r22, r18
    115c:	73 2b       	or	r23, r19
    115e:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    1162:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    1166:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    116a:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    116e:	b0 9b       	sbis	0x16, 0	; 22
    1170:	1a c0       	rjmp	.+52     	; 0x11a6 <__vector_12+0x9a>
    1172:	01 96       	adiw	r24, 0x01	; 1
    1174:	09 2e       	mov	r0, r25
    1176:	00 0c       	add	r0, r0
    1178:	aa 0b       	sbc	r26, r26
    117a:	bb 0b       	sbc	r27, r27
    117c:	bc 01       	movw	r22, r24
    117e:	55 27       	eor	r21, r21
    1180:	44 27       	eor	r20, r20
    1182:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1186:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    118a:	a0 e0       	ldi	r26, 0x00	; 0
    118c:	b0 e0       	ldi	r27, 0x00	; 0
    118e:	84 2b       	or	r24, r20
    1190:	95 2b       	or	r25, r21
    1192:	a6 2b       	or	r26, r22
    1194:	b7 2b       	or	r27, r23
    1196:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    119a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    119e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    11a2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    11a6:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
    11aa:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
    11ae:	30 97       	sbiw	r30, 0x00	; 0
    11b0:	39 f0       	breq	.+14     	; 0x11c0 <__vector_12+0xb4>
    11b2:	67 e0       	ldi	r22, 0x07	; 7
    11b4:	70 e0       	ldi	r23, 0x00	; 0
    11b6:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
    11ba:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
    11be:	09 95       	icall
    11c0:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    11c4:	ff 91       	pop	r31
    11c6:	ef 91       	pop	r30
    11c8:	bf 91       	pop	r27
    11ca:	af 91       	pop	r26
    11cc:	9f 91       	pop	r25
    11ce:	8f 91       	pop	r24
    11d0:	7f 91       	pop	r23
    11d2:	6f 91       	pop	r22
    11d4:	5f 91       	pop	r21
    11d6:	4f 91       	pop	r20
    11d8:	3f 91       	pop	r19
    11da:	2f 91       	pop	r18
    11dc:	1f 91       	pop	r17
    11de:	0f 91       	pop	r16
    11e0:	0f 90       	pop	r0
    11e2:	0f be       	out	0x3f, r0	; 63
    11e4:	0f 90       	pop	r0
    11e6:	1f 90       	pop	r1
    11e8:	18 95       	reti

000011ea <__vector_13>:
    11ea:	1f 92       	push	r1
    11ec:	0f 92       	push	r0
    11ee:	0f b6       	in	r0, 0x3f	; 63
    11f0:	0f 92       	push	r0
    11f2:	11 24       	eor	r1, r1
    11f4:	0f 93       	push	r16
    11f6:	1f 93       	push	r17
    11f8:	2f 93       	push	r18
    11fa:	3f 93       	push	r19
    11fc:	4f 93       	push	r20
    11fe:	5f 93       	push	r21
    1200:	6f 93       	push	r22
    1202:	7f 93       	push	r23
    1204:	8f 93       	push	r24
    1206:	9f 93       	push	r25
    1208:	af 93       	push	r26
    120a:	bf 93       	push	r27
    120c:	ef 93       	push	r30
    120e:	ff 93       	push	r31
    1210:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1214:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1218:	ac 01       	movw	r20, r24
    121a:	09 2e       	mov	r0, r25
    121c:	00 0c       	add	r0, r0
    121e:	66 0b       	sbc	r22, r22
    1220:	77 0b       	sbc	r23, r23
    1222:	9a 01       	movw	r18, r20
    1224:	11 27       	eor	r17, r17
    1226:	00 27       	eor	r16, r16
    1228:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    122c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1230:	60 e0       	ldi	r22, 0x00	; 0
    1232:	70 e0       	ldi	r23, 0x00	; 0
    1234:	40 2b       	or	r20, r16
    1236:	51 2b       	or	r21, r17
    1238:	62 2b       	or	r22, r18
    123a:	73 2b       	or	r23, r19
    123c:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    1240:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    1244:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    1248:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    124c:	b0 9b       	sbis	0x16, 0	; 22
    124e:	1a c0       	rjmp	.+52     	; 0x1284 <__vector_13+0x9a>
    1250:	01 96       	adiw	r24, 0x01	; 1
    1252:	09 2e       	mov	r0, r25
    1254:	00 0c       	add	r0, r0
    1256:	aa 0b       	sbc	r26, r26
    1258:	bb 0b       	sbc	r27, r27
    125a:	bc 01       	movw	r22, r24
    125c:	55 27       	eor	r21, r21
    125e:	44 27       	eor	r20, r20
    1260:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1264:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1268:	a0 e0       	ldi	r26, 0x00	; 0
    126a:	b0 e0       	ldi	r27, 0x00	; 0
    126c:	84 2b       	or	r24, r20
    126e:	95 2b       	or	r25, r21
    1270:	a6 2b       	or	r26, r22
    1272:	b7 2b       	or	r27, r23
    1274:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1278:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    127c:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1280:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1284:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
    1288:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
    128c:	30 97       	sbiw	r30, 0x00	; 0
    128e:	39 f0       	breq	.+14     	; 0x129e <__vector_13+0xb4>
    1290:	68 e0       	ldi	r22, 0x08	; 8
    1292:	70 e0       	ldi	r23, 0x00	; 0
    1294:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
    1298:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
    129c:	09 95       	icall
    129e:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    12a2:	ff 91       	pop	r31
    12a4:	ef 91       	pop	r30
    12a6:	bf 91       	pop	r27
    12a8:	af 91       	pop	r26
    12aa:	9f 91       	pop	r25
    12ac:	8f 91       	pop	r24
    12ae:	7f 91       	pop	r23
    12b0:	6f 91       	pop	r22
    12b2:	5f 91       	pop	r21
    12b4:	4f 91       	pop	r20
    12b6:	3f 91       	pop	r19
    12b8:	2f 91       	pop	r18
    12ba:	1f 91       	pop	r17
    12bc:	0f 91       	pop	r16
    12be:	0f 90       	pop	r0
    12c0:	0f be       	out	0x3f, r0	; 63
    12c2:	0f 90       	pop	r0
    12c4:	1f 90       	pop	r1
    12c6:	18 95       	reti

000012c8 <__vector_14>:
    12c8:	1f 92       	push	r1
    12ca:	0f 92       	push	r0
    12cc:	0f b6       	in	r0, 0x3f	; 63
    12ce:	0f 92       	push	r0
    12d0:	11 24       	eor	r1, r1
    12d2:	0f 93       	push	r16
    12d4:	1f 93       	push	r17
    12d6:	2f 93       	push	r18
    12d8:	3f 93       	push	r19
    12da:	4f 93       	push	r20
    12dc:	5f 93       	push	r21
    12de:	6f 93       	push	r22
    12e0:	7f 93       	push	r23
    12e2:	8f 93       	push	r24
    12e4:	9f 93       	push	r25
    12e6:	af 93       	push	r26
    12e8:	bf 93       	push	r27
    12ea:	ef 93       	push	r30
    12ec:	ff 93       	push	r31
    12ee:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    12f2:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    12f6:	ac 01       	movw	r20, r24
    12f8:	09 2e       	mov	r0, r25
    12fa:	00 0c       	add	r0, r0
    12fc:	66 0b       	sbc	r22, r22
    12fe:	77 0b       	sbc	r23, r23
    1300:	9a 01       	movw	r18, r20
    1302:	11 27       	eor	r17, r17
    1304:	00 27       	eor	r16, r16
    1306:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    130a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    130e:	60 e0       	ldi	r22, 0x00	; 0
    1310:	70 e0       	ldi	r23, 0x00	; 0
    1312:	40 2b       	or	r20, r16
    1314:	51 2b       	or	r21, r17
    1316:	62 2b       	or	r22, r18
    1318:	73 2b       	or	r23, r19
    131a:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    131e:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    1322:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    1326:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    132a:	b0 9b       	sbis	0x16, 0	; 22
    132c:	1a c0       	rjmp	.+52     	; 0x1362 <__vector_14+0x9a>
    132e:	01 96       	adiw	r24, 0x01	; 1
    1330:	09 2e       	mov	r0, r25
    1332:	00 0c       	add	r0, r0
    1334:	aa 0b       	sbc	r26, r26
    1336:	bb 0b       	sbc	r27, r27
    1338:	bc 01       	movw	r22, r24
    133a:	55 27       	eor	r21, r21
    133c:	44 27       	eor	r20, r20
    133e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1342:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1346:	a0 e0       	ldi	r26, 0x00	; 0
    1348:	b0 e0       	ldi	r27, 0x00	; 0
    134a:	84 2b       	or	r24, r20
    134c:	95 2b       	or	r25, r21
    134e:	a6 2b       	or	r26, r22
    1350:	b7 2b       	or	r27, r23
    1352:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1356:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    135a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    135e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1362:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
    1366:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
    136a:	30 97       	sbiw	r30, 0x00	; 0
    136c:	39 f0       	breq	.+14     	; 0x137c <__vector_14+0xb4>
    136e:	69 e0       	ldi	r22, 0x09	; 9
    1370:	70 e0       	ldi	r23, 0x00	; 0
    1372:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
    1376:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
    137a:	09 95       	icall
    137c:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    1380:	ff 91       	pop	r31
    1382:	ef 91       	pop	r30
    1384:	bf 91       	pop	r27
    1386:	af 91       	pop	r26
    1388:	9f 91       	pop	r25
    138a:	8f 91       	pop	r24
    138c:	7f 91       	pop	r23
    138e:	6f 91       	pop	r22
    1390:	5f 91       	pop	r21
    1392:	4f 91       	pop	r20
    1394:	3f 91       	pop	r19
    1396:	2f 91       	pop	r18
    1398:	1f 91       	pop	r17
    139a:	0f 91       	pop	r16
    139c:	0f 90       	pop	r0
    139e:	0f be       	out	0x3f, r0	; 63
    13a0:	0f 90       	pop	r0
    13a2:	1f 90       	pop	r1
    13a4:	18 95       	reti

000013a6 <__vector_15>:
    13a6:	1f 92       	push	r1
    13a8:	0f 92       	push	r0
    13aa:	0f b6       	in	r0, 0x3f	; 63
    13ac:	0f 92       	push	r0
    13ae:	11 24       	eor	r1, r1
    13b0:	0f 93       	push	r16
    13b2:	1f 93       	push	r17
    13b4:	2f 93       	push	r18
    13b6:	3f 93       	push	r19
    13b8:	4f 93       	push	r20
    13ba:	5f 93       	push	r21
    13bc:	6f 93       	push	r22
    13be:	7f 93       	push	r23
    13c0:	8f 93       	push	r24
    13c2:	9f 93       	push	r25
    13c4:	af 93       	push	r26
    13c6:	bf 93       	push	r27
    13c8:	ef 93       	push	r30
    13ca:	ff 93       	push	r31
    13cc:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    13d0:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    13d4:	ac 01       	movw	r20, r24
    13d6:	09 2e       	mov	r0, r25
    13d8:	00 0c       	add	r0, r0
    13da:	66 0b       	sbc	r22, r22
    13dc:	77 0b       	sbc	r23, r23
    13de:	9a 01       	movw	r18, r20
    13e0:	11 27       	eor	r17, r17
    13e2:	00 27       	eor	r16, r16
    13e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13ec:	60 e0       	ldi	r22, 0x00	; 0
    13ee:	70 e0       	ldi	r23, 0x00	; 0
    13f0:	40 2b       	or	r20, r16
    13f2:	51 2b       	or	r21, r17
    13f4:	62 2b       	or	r22, r18
    13f6:	73 2b       	or	r23, r19
    13f8:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    13fc:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    1400:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    1404:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    1408:	b0 9b       	sbis	0x16, 0	; 22
    140a:	1a c0       	rjmp	.+52     	; 0x1440 <__vector_15+0x9a>
    140c:	01 96       	adiw	r24, 0x01	; 1
    140e:	09 2e       	mov	r0, r25
    1410:	00 0c       	add	r0, r0
    1412:	aa 0b       	sbc	r26, r26
    1414:	bb 0b       	sbc	r27, r27
    1416:	bc 01       	movw	r22, r24
    1418:	55 27       	eor	r21, r21
    141a:	44 27       	eor	r20, r20
    141c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1420:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1424:	a0 e0       	ldi	r26, 0x00	; 0
    1426:	b0 e0       	ldi	r27, 0x00	; 0
    1428:	84 2b       	or	r24, r20
    142a:	95 2b       	or	r25, r21
    142c:	a6 2b       	or	r26, r22
    142e:	b7 2b       	or	r27, r23
    1430:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1434:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1438:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    143c:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1440:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
    1444:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    1448:	30 97       	sbiw	r30, 0x00	; 0
    144a:	39 f0       	breq	.+14     	; 0x145a <__vector_15+0xb4>
    144c:	6a e0       	ldi	r22, 0x0A	; 10
    144e:	70 e0       	ldi	r23, 0x00	; 0
    1450:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    1454:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    1458:	09 95       	icall
    145a:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    145e:	ff 91       	pop	r31
    1460:	ef 91       	pop	r30
    1462:	bf 91       	pop	r27
    1464:	af 91       	pop	r26
    1466:	9f 91       	pop	r25
    1468:	8f 91       	pop	r24
    146a:	7f 91       	pop	r23
    146c:	6f 91       	pop	r22
    146e:	5f 91       	pop	r21
    1470:	4f 91       	pop	r20
    1472:	3f 91       	pop	r19
    1474:	2f 91       	pop	r18
    1476:	1f 91       	pop	r17
    1478:	0f 91       	pop	r16
    147a:	0f 90       	pop	r0
    147c:	0f be       	out	0x3f, r0	; 63
    147e:	0f 90       	pop	r0
    1480:	1f 90       	pop	r1
    1482:	18 95       	reti

00001484 <__vector_16>:
    1484:	1f 92       	push	r1
    1486:	0f 92       	push	r0
    1488:	0f b6       	in	r0, 0x3f	; 63
    148a:	0f 92       	push	r0
    148c:	11 24       	eor	r1, r1
    148e:	0f 93       	push	r16
    1490:	1f 93       	push	r17
    1492:	2f 93       	push	r18
    1494:	3f 93       	push	r19
    1496:	4f 93       	push	r20
    1498:	5f 93       	push	r21
    149a:	6f 93       	push	r22
    149c:	7f 93       	push	r23
    149e:	8f 93       	push	r24
    14a0:	9f 93       	push	r25
    14a2:	af 93       	push	r26
    14a4:	bf 93       	push	r27
    14a6:	ef 93       	push	r30
    14a8:	ff 93       	push	r31
    14aa:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    14ae:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    14b2:	ac 01       	movw	r20, r24
    14b4:	09 2e       	mov	r0, r25
    14b6:	00 0c       	add	r0, r0
    14b8:	66 0b       	sbc	r22, r22
    14ba:	77 0b       	sbc	r23, r23
    14bc:	9a 01       	movw	r18, r20
    14be:	11 27       	eor	r17, r17
    14c0:	00 27       	eor	r16, r16
    14c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14ca:	60 e0       	ldi	r22, 0x00	; 0
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	40 2b       	or	r20, r16
    14d0:	51 2b       	or	r21, r17
    14d2:	62 2b       	or	r22, r18
    14d4:	73 2b       	or	r23, r19
    14d6:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    14da:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    14de:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    14e2:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    14e6:	b0 9b       	sbis	0x16, 0	; 22
    14e8:	1a c0       	rjmp	.+52     	; 0x151e <__vector_16+0x9a>
    14ea:	01 96       	adiw	r24, 0x01	; 1
    14ec:	09 2e       	mov	r0, r25
    14ee:	00 0c       	add	r0, r0
    14f0:	aa 0b       	sbc	r26, r26
    14f2:	bb 0b       	sbc	r27, r27
    14f4:	bc 01       	movw	r22, r24
    14f6:	55 27       	eor	r21, r21
    14f8:	44 27       	eor	r20, r20
    14fa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14fe:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1502:	a0 e0       	ldi	r26, 0x00	; 0
    1504:	b0 e0       	ldi	r27, 0x00	; 0
    1506:	84 2b       	or	r24, r20
    1508:	95 2b       	or	r25, r21
    150a:	a6 2b       	or	r26, r22
    150c:	b7 2b       	or	r27, r23
    150e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1512:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1516:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    151a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    151e:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    1522:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    1526:	30 97       	sbiw	r30, 0x00	; 0
    1528:	39 f0       	breq	.+14     	; 0x1538 <__vector_16+0xb4>
    152a:	6b e0       	ldi	r22, 0x0B	; 11
    152c:	70 e0       	ldi	r23, 0x00	; 0
    152e:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    1532:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    1536:	09 95       	icall
    1538:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    153c:	ff 91       	pop	r31
    153e:	ef 91       	pop	r30
    1540:	bf 91       	pop	r27
    1542:	af 91       	pop	r26
    1544:	9f 91       	pop	r25
    1546:	8f 91       	pop	r24
    1548:	7f 91       	pop	r23
    154a:	6f 91       	pop	r22
    154c:	5f 91       	pop	r21
    154e:	4f 91       	pop	r20
    1550:	3f 91       	pop	r19
    1552:	2f 91       	pop	r18
    1554:	1f 91       	pop	r17
    1556:	0f 91       	pop	r16
    1558:	0f 90       	pop	r0
    155a:	0f be       	out	0x3f, r0	; 63
    155c:	0f 90       	pop	r0
    155e:	1f 90       	pop	r1
    1560:	18 95       	reti

00001562 <__vector_17>:
    1562:	1f 92       	push	r1
    1564:	0f 92       	push	r0
    1566:	0f b6       	in	r0, 0x3f	; 63
    1568:	0f 92       	push	r0
    156a:	11 24       	eor	r1, r1
    156c:	0f 93       	push	r16
    156e:	1f 93       	push	r17
    1570:	2f 93       	push	r18
    1572:	3f 93       	push	r19
    1574:	4f 93       	push	r20
    1576:	5f 93       	push	r21
    1578:	6f 93       	push	r22
    157a:	7f 93       	push	r23
    157c:	8f 93       	push	r24
    157e:	9f 93       	push	r25
    1580:	af 93       	push	r26
    1582:	bf 93       	push	r27
    1584:	ef 93       	push	r30
    1586:	ff 93       	push	r31
    1588:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    158c:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1590:	ac 01       	movw	r20, r24
    1592:	09 2e       	mov	r0, r25
    1594:	00 0c       	add	r0, r0
    1596:	66 0b       	sbc	r22, r22
    1598:	77 0b       	sbc	r23, r23
    159a:	9a 01       	movw	r18, r20
    159c:	11 27       	eor	r17, r17
    159e:	00 27       	eor	r16, r16
    15a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15a8:	60 e0       	ldi	r22, 0x00	; 0
    15aa:	70 e0       	ldi	r23, 0x00	; 0
    15ac:	40 2b       	or	r20, r16
    15ae:	51 2b       	or	r21, r17
    15b0:	62 2b       	or	r22, r18
    15b2:	73 2b       	or	r23, r19
    15b4:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    15b8:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    15bc:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    15c0:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    15c4:	b0 9b       	sbis	0x16, 0	; 22
    15c6:	1a c0       	rjmp	.+52     	; 0x15fc <__vector_17+0x9a>
    15c8:	01 96       	adiw	r24, 0x01	; 1
    15ca:	09 2e       	mov	r0, r25
    15cc:	00 0c       	add	r0, r0
    15ce:	aa 0b       	sbc	r26, r26
    15d0:	bb 0b       	sbc	r27, r27
    15d2:	bc 01       	movw	r22, r24
    15d4:	55 27       	eor	r21, r21
    15d6:	44 27       	eor	r20, r20
    15d8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15dc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15e0:	a0 e0       	ldi	r26, 0x00	; 0
    15e2:	b0 e0       	ldi	r27, 0x00	; 0
    15e4:	84 2b       	or	r24, r20
    15e6:	95 2b       	or	r25, r21
    15e8:	a6 2b       	or	r26, r22
    15ea:	b7 2b       	or	r27, r23
    15ec:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    15f0:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    15f4:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    15f8:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    15fc:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    1600:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    1604:	30 97       	sbiw	r30, 0x00	; 0
    1606:	39 f0       	breq	.+14     	; 0x1616 <__vector_17+0xb4>
    1608:	6c e0       	ldi	r22, 0x0C	; 12
    160a:	70 e0       	ldi	r23, 0x00	; 0
    160c:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    1610:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    1614:	09 95       	icall
    1616:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    161a:	ff 91       	pop	r31
    161c:	ef 91       	pop	r30
    161e:	bf 91       	pop	r27
    1620:	af 91       	pop	r26
    1622:	9f 91       	pop	r25
    1624:	8f 91       	pop	r24
    1626:	7f 91       	pop	r23
    1628:	6f 91       	pop	r22
    162a:	5f 91       	pop	r21
    162c:	4f 91       	pop	r20
    162e:	3f 91       	pop	r19
    1630:	2f 91       	pop	r18
    1632:	1f 91       	pop	r17
    1634:	0f 91       	pop	r16
    1636:	0f 90       	pop	r0
    1638:	0f be       	out	0x3f, r0	; 63
    163a:	0f 90       	pop	r0
    163c:	1f 90       	pop	r1
    163e:	18 95       	reti

00001640 <__vector_18>:
    1640:	1f 92       	push	r1
    1642:	0f 92       	push	r0
    1644:	0f b6       	in	r0, 0x3f	; 63
    1646:	0f 92       	push	r0
    1648:	11 24       	eor	r1, r1
    164a:	0f 93       	push	r16
    164c:	1f 93       	push	r17
    164e:	2f 93       	push	r18
    1650:	3f 93       	push	r19
    1652:	4f 93       	push	r20
    1654:	5f 93       	push	r21
    1656:	6f 93       	push	r22
    1658:	7f 93       	push	r23
    165a:	8f 93       	push	r24
    165c:	9f 93       	push	r25
    165e:	af 93       	push	r26
    1660:	bf 93       	push	r27
    1662:	ef 93       	push	r30
    1664:	ff 93       	push	r31
    1666:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    166a:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    166e:	ac 01       	movw	r20, r24
    1670:	09 2e       	mov	r0, r25
    1672:	00 0c       	add	r0, r0
    1674:	66 0b       	sbc	r22, r22
    1676:	77 0b       	sbc	r23, r23
    1678:	9a 01       	movw	r18, r20
    167a:	11 27       	eor	r17, r17
    167c:	00 27       	eor	r16, r16
    167e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1682:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1686:	60 e0       	ldi	r22, 0x00	; 0
    1688:	70 e0       	ldi	r23, 0x00	; 0
    168a:	40 2b       	or	r20, r16
    168c:	51 2b       	or	r21, r17
    168e:	62 2b       	or	r22, r18
    1690:	73 2b       	or	r23, r19
    1692:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    1696:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    169a:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    169e:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    16a2:	b0 9b       	sbis	0x16, 0	; 22
    16a4:	1a c0       	rjmp	.+52     	; 0x16da <__vector_18+0x9a>
    16a6:	01 96       	adiw	r24, 0x01	; 1
    16a8:	09 2e       	mov	r0, r25
    16aa:	00 0c       	add	r0, r0
    16ac:	aa 0b       	sbc	r26, r26
    16ae:	bb 0b       	sbc	r27, r27
    16b0:	bc 01       	movw	r22, r24
    16b2:	55 27       	eor	r21, r21
    16b4:	44 27       	eor	r20, r20
    16b6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16ba:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16be:	a0 e0       	ldi	r26, 0x00	; 0
    16c0:	b0 e0       	ldi	r27, 0x00	; 0
    16c2:	84 2b       	or	r24, r20
    16c4:	95 2b       	or	r25, r21
    16c6:	a6 2b       	or	r26, r22
    16c8:	b7 2b       	or	r27, r23
    16ca:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    16ce:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    16d2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    16d6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    16da:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    16de:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    16e2:	30 97       	sbiw	r30, 0x00	; 0
    16e4:	39 f0       	breq	.+14     	; 0x16f4 <__vector_18+0xb4>
    16e6:	6d e0       	ldi	r22, 0x0D	; 13
    16e8:	70 e0       	ldi	r23, 0x00	; 0
    16ea:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    16ee:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    16f2:	09 95       	icall
    16f4:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    16f8:	ff 91       	pop	r31
    16fa:	ef 91       	pop	r30
    16fc:	bf 91       	pop	r27
    16fe:	af 91       	pop	r26
    1700:	9f 91       	pop	r25
    1702:	8f 91       	pop	r24
    1704:	7f 91       	pop	r23
    1706:	6f 91       	pop	r22
    1708:	5f 91       	pop	r21
    170a:	4f 91       	pop	r20
    170c:	3f 91       	pop	r19
    170e:	2f 91       	pop	r18
    1710:	1f 91       	pop	r17
    1712:	0f 91       	pop	r16
    1714:	0f 90       	pop	r0
    1716:	0f be       	out	0x3f, r0	; 63
    1718:	0f 90       	pop	r0
    171a:	1f 90       	pop	r1
    171c:	18 95       	reti

0000171e <__vector_19>:
    171e:	1f 92       	push	r1
    1720:	0f 92       	push	r0
    1722:	0f b6       	in	r0, 0x3f	; 63
    1724:	0f 92       	push	r0
    1726:	11 24       	eor	r1, r1
    1728:	0f 93       	push	r16
    172a:	1f 93       	push	r17
    172c:	2f 93       	push	r18
    172e:	3f 93       	push	r19
    1730:	4f 93       	push	r20
    1732:	5f 93       	push	r21
    1734:	6f 93       	push	r22
    1736:	7f 93       	push	r23
    1738:	8f 93       	push	r24
    173a:	9f 93       	push	r25
    173c:	af 93       	push	r26
    173e:	bf 93       	push	r27
    1740:	ef 93       	push	r30
    1742:	ff 93       	push	r31
    1744:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1748:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    174c:	ac 01       	movw	r20, r24
    174e:	09 2e       	mov	r0, r25
    1750:	00 0c       	add	r0, r0
    1752:	66 0b       	sbc	r22, r22
    1754:	77 0b       	sbc	r23, r23
    1756:	9a 01       	movw	r18, r20
    1758:	11 27       	eor	r17, r17
    175a:	00 27       	eor	r16, r16
    175c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1760:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1764:	60 e0       	ldi	r22, 0x00	; 0
    1766:	70 e0       	ldi	r23, 0x00	; 0
    1768:	40 2b       	or	r20, r16
    176a:	51 2b       	or	r21, r17
    176c:	62 2b       	or	r22, r18
    176e:	73 2b       	or	r23, r19
    1770:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    1774:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    1778:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    177c:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    1780:	b0 9b       	sbis	0x16, 0	; 22
    1782:	1a c0       	rjmp	.+52     	; 0x17b8 <__vector_19+0x9a>
    1784:	01 96       	adiw	r24, 0x01	; 1
    1786:	09 2e       	mov	r0, r25
    1788:	00 0c       	add	r0, r0
    178a:	aa 0b       	sbc	r26, r26
    178c:	bb 0b       	sbc	r27, r27
    178e:	bc 01       	movw	r22, r24
    1790:	55 27       	eor	r21, r21
    1792:	44 27       	eor	r20, r20
    1794:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1798:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    179c:	a0 e0       	ldi	r26, 0x00	; 0
    179e:	b0 e0       	ldi	r27, 0x00	; 0
    17a0:	84 2b       	or	r24, r20
    17a2:	95 2b       	or	r25, r21
    17a4:	a6 2b       	or	r26, r22
    17a6:	b7 2b       	or	r27, r23
    17a8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    17ac:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    17b0:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    17b4:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    17b8:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    17bc:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    17c0:	30 97       	sbiw	r30, 0x00	; 0
    17c2:	39 f0       	breq	.+14     	; 0x17d2 <__vector_19+0xb4>
    17c4:	6e e0       	ldi	r22, 0x0E	; 14
    17c6:	70 e0       	ldi	r23, 0x00	; 0
    17c8:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    17cc:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    17d0:	09 95       	icall
    17d2:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    17d6:	ff 91       	pop	r31
    17d8:	ef 91       	pop	r30
    17da:	bf 91       	pop	r27
    17dc:	af 91       	pop	r26
    17de:	9f 91       	pop	r25
    17e0:	8f 91       	pop	r24
    17e2:	7f 91       	pop	r23
    17e4:	6f 91       	pop	r22
    17e6:	5f 91       	pop	r21
    17e8:	4f 91       	pop	r20
    17ea:	3f 91       	pop	r19
    17ec:	2f 91       	pop	r18
    17ee:	1f 91       	pop	r17
    17f0:	0f 91       	pop	r16
    17f2:	0f 90       	pop	r0
    17f4:	0f be       	out	0x3f, r0	; 63
    17f6:	0f 90       	pop	r0
    17f8:	1f 90       	pop	r1
    17fa:	18 95       	reti

000017fc <__vector_20>:
    17fc:	1f 92       	push	r1
    17fe:	0f 92       	push	r0
    1800:	0f b6       	in	r0, 0x3f	; 63
    1802:	0f 92       	push	r0
    1804:	11 24       	eor	r1, r1
    1806:	0f 93       	push	r16
    1808:	1f 93       	push	r17
    180a:	2f 93       	push	r18
    180c:	3f 93       	push	r19
    180e:	4f 93       	push	r20
    1810:	5f 93       	push	r21
    1812:	6f 93       	push	r22
    1814:	7f 93       	push	r23
    1816:	8f 93       	push	r24
    1818:	9f 93       	push	r25
    181a:	af 93       	push	r26
    181c:	bf 93       	push	r27
    181e:	ef 93       	push	r30
    1820:	ff 93       	push	r31
    1822:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1826:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    182a:	ac 01       	movw	r20, r24
    182c:	09 2e       	mov	r0, r25
    182e:	00 0c       	add	r0, r0
    1830:	66 0b       	sbc	r22, r22
    1832:	77 0b       	sbc	r23, r23
    1834:	9a 01       	movw	r18, r20
    1836:	11 27       	eor	r17, r17
    1838:	00 27       	eor	r16, r16
    183a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    183e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1842:	60 e0       	ldi	r22, 0x00	; 0
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	40 2b       	or	r20, r16
    1848:	51 2b       	or	r21, r17
    184a:	62 2b       	or	r22, r18
    184c:	73 2b       	or	r23, r19
    184e:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    1852:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    1856:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    185a:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    185e:	b0 9b       	sbis	0x16, 0	; 22
    1860:	1a c0       	rjmp	.+52     	; 0x1896 <__vector_20+0x9a>
    1862:	01 96       	adiw	r24, 0x01	; 1
    1864:	09 2e       	mov	r0, r25
    1866:	00 0c       	add	r0, r0
    1868:	aa 0b       	sbc	r26, r26
    186a:	bb 0b       	sbc	r27, r27
    186c:	bc 01       	movw	r22, r24
    186e:	55 27       	eor	r21, r21
    1870:	44 27       	eor	r20, r20
    1872:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1876:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    187a:	a0 e0       	ldi	r26, 0x00	; 0
    187c:	b0 e0       	ldi	r27, 0x00	; 0
    187e:	84 2b       	or	r24, r20
    1880:	95 2b       	or	r25, r21
    1882:	a6 2b       	or	r26, r22
    1884:	b7 2b       	or	r27, r23
    1886:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    188a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    188e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1892:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1896:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    189a:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    189e:	30 97       	sbiw	r30, 0x00	; 0
    18a0:	39 f0       	breq	.+14     	; 0x18b0 <__vector_20+0xb4>
    18a2:	6f e0       	ldi	r22, 0x0F	; 15
    18a4:	70 e0       	ldi	r23, 0x00	; 0
    18a6:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    18aa:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    18ae:	09 95       	icall
    18b0:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    18b4:	ff 91       	pop	r31
    18b6:	ef 91       	pop	r30
    18b8:	bf 91       	pop	r27
    18ba:	af 91       	pop	r26
    18bc:	9f 91       	pop	r25
    18be:	8f 91       	pop	r24
    18c0:	7f 91       	pop	r23
    18c2:	6f 91       	pop	r22
    18c4:	5f 91       	pop	r21
    18c6:	4f 91       	pop	r20
    18c8:	3f 91       	pop	r19
    18ca:	2f 91       	pop	r18
    18cc:	1f 91       	pop	r17
    18ce:	0f 91       	pop	r16
    18d0:	0f 90       	pop	r0
    18d2:	0f be       	out	0x3f, r0	; 63
    18d4:	0f 90       	pop	r0
    18d6:	1f 90       	pop	r1
    18d8:	18 95       	reti

000018da <__vector_21>:
    18da:	1f 92       	push	r1
    18dc:	0f 92       	push	r0
    18de:	0f b6       	in	r0, 0x3f	; 63
    18e0:	0f 92       	push	r0
    18e2:	11 24       	eor	r1, r1
    18e4:	0f 93       	push	r16
    18e6:	1f 93       	push	r17
    18e8:	2f 93       	push	r18
    18ea:	3f 93       	push	r19
    18ec:	4f 93       	push	r20
    18ee:	5f 93       	push	r21
    18f0:	6f 93       	push	r22
    18f2:	7f 93       	push	r23
    18f4:	8f 93       	push	r24
    18f6:	9f 93       	push	r25
    18f8:	af 93       	push	r26
    18fa:	bf 93       	push	r27
    18fc:	ef 93       	push	r30
    18fe:	ff 93       	push	r31
    1900:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1904:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1908:	ac 01       	movw	r20, r24
    190a:	09 2e       	mov	r0, r25
    190c:	00 0c       	add	r0, r0
    190e:	66 0b       	sbc	r22, r22
    1910:	77 0b       	sbc	r23, r23
    1912:	9a 01       	movw	r18, r20
    1914:	11 27       	eor	r17, r17
    1916:	00 27       	eor	r16, r16
    1918:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    191c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1920:	60 e0       	ldi	r22, 0x00	; 0
    1922:	70 e0       	ldi	r23, 0x00	; 0
    1924:	40 2b       	or	r20, r16
    1926:	51 2b       	or	r21, r17
    1928:	62 2b       	or	r22, r18
    192a:	73 2b       	or	r23, r19
    192c:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    1930:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    1934:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    1938:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    193c:	b0 9b       	sbis	0x16, 0	; 22
    193e:	1a c0       	rjmp	.+52     	; 0x1974 <__vector_21+0x9a>
    1940:	01 96       	adiw	r24, 0x01	; 1
    1942:	09 2e       	mov	r0, r25
    1944:	00 0c       	add	r0, r0
    1946:	aa 0b       	sbc	r26, r26
    1948:	bb 0b       	sbc	r27, r27
    194a:	bc 01       	movw	r22, r24
    194c:	55 27       	eor	r21, r21
    194e:	44 27       	eor	r20, r20
    1950:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1954:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1958:	a0 e0       	ldi	r26, 0x00	; 0
    195a:	b0 e0       	ldi	r27, 0x00	; 0
    195c:	84 2b       	or	r24, r20
    195e:	95 2b       	or	r25, r21
    1960:	a6 2b       	or	r26, r22
    1962:	b7 2b       	or	r27, r23
    1964:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1968:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    196c:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1970:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1974:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    1978:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    197c:	30 97       	sbiw	r30, 0x00	; 0
    197e:	39 f0       	breq	.+14     	; 0x198e <__vector_21+0xb4>
    1980:	60 e1       	ldi	r22, 0x10	; 16
    1982:	70 e0       	ldi	r23, 0x00	; 0
    1984:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    1988:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    198c:	09 95       	icall
    198e:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    1992:	ff 91       	pop	r31
    1994:	ef 91       	pop	r30
    1996:	bf 91       	pop	r27
    1998:	af 91       	pop	r26
    199a:	9f 91       	pop	r25
    199c:	8f 91       	pop	r24
    199e:	7f 91       	pop	r23
    19a0:	6f 91       	pop	r22
    19a2:	5f 91       	pop	r21
    19a4:	4f 91       	pop	r20
    19a6:	3f 91       	pop	r19
    19a8:	2f 91       	pop	r18
    19aa:	1f 91       	pop	r17
    19ac:	0f 91       	pop	r16
    19ae:	0f 90       	pop	r0
    19b0:	0f be       	out	0x3f, r0	; 63
    19b2:	0f 90       	pop	r0
    19b4:	1f 90       	pop	r1
    19b6:	18 95       	reti

000019b8 <__vector_22>:
    19b8:	1f 92       	push	r1
    19ba:	0f 92       	push	r0
    19bc:	0f b6       	in	r0, 0x3f	; 63
    19be:	0f 92       	push	r0
    19c0:	11 24       	eor	r1, r1
    19c2:	0f 93       	push	r16
    19c4:	1f 93       	push	r17
    19c6:	2f 93       	push	r18
    19c8:	3f 93       	push	r19
    19ca:	4f 93       	push	r20
    19cc:	5f 93       	push	r21
    19ce:	6f 93       	push	r22
    19d0:	7f 93       	push	r23
    19d2:	8f 93       	push	r24
    19d4:	9f 93       	push	r25
    19d6:	af 93       	push	r26
    19d8:	bf 93       	push	r27
    19da:	ef 93       	push	r30
    19dc:	ff 93       	push	r31
    19de:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    19e2:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    19e6:	ac 01       	movw	r20, r24
    19e8:	09 2e       	mov	r0, r25
    19ea:	00 0c       	add	r0, r0
    19ec:	66 0b       	sbc	r22, r22
    19ee:	77 0b       	sbc	r23, r23
    19f0:	9a 01       	movw	r18, r20
    19f2:	11 27       	eor	r17, r17
    19f4:	00 27       	eor	r16, r16
    19f6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19fa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19fe:	60 e0       	ldi	r22, 0x00	; 0
    1a00:	70 e0       	ldi	r23, 0x00	; 0
    1a02:	40 2b       	or	r20, r16
    1a04:	51 2b       	or	r21, r17
    1a06:	62 2b       	or	r22, r18
    1a08:	73 2b       	or	r23, r19
    1a0a:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <timestamp>
    1a0e:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <timestamp+0x1>
    1a12:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <timestamp+0x2>
    1a16:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <timestamp+0x3>
    1a1a:	b0 9b       	sbis	0x16, 0	; 22
    1a1c:	1a c0       	rjmp	.+52     	; 0x1a52 <__vector_22+0x9a>
    1a1e:	01 96       	adiw	r24, 0x01	; 1
    1a20:	09 2e       	mov	r0, r25
    1a22:	00 0c       	add	r0, r0
    1a24:	aa 0b       	sbc	r26, r26
    1a26:	bb 0b       	sbc	r27, r27
    1a28:	bc 01       	movw	r22, r24
    1a2a:	55 27       	eor	r21, r21
    1a2c:	44 27       	eor	r20, r20
    1a2e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a32:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a36:	a0 e0       	ldi	r26, 0x00	; 0
    1a38:	b0 e0       	ldi	r27, 0x00	; 0
    1a3a:	84 2b       	or	r24, r20
    1a3c:	95 2b       	or	r25, r21
    1a3e:	a6 2b       	or	r26, r22
    1a40:	b7 2b       	or	r27, r23
    1a42:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1a46:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1a4a:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1a4e:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1a52:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    1a56:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    1a5a:	30 97       	sbiw	r30, 0x00	; 0
    1a5c:	39 f0       	breq	.+14     	; 0x1a6c <__vector_22+0xb4>
    1a5e:	61 e1       	ldi	r22, 0x11	; 17
    1a60:	70 e0       	ldi	r23, 0x00	; 0
    1a62:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    1a66:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    1a6a:	09 95       	icall
    1a6c:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    1a70:	ff 91       	pop	r31
    1a72:	ef 91       	pop	r30
    1a74:	bf 91       	pop	r27
    1a76:	af 91       	pop	r26
    1a78:	9f 91       	pop	r25
    1a7a:	8f 91       	pop	r24
    1a7c:	7f 91       	pop	r23
    1a7e:	6f 91       	pop	r22
    1a80:	5f 91       	pop	r21
    1a82:	4f 91       	pop	r20
    1a84:	3f 91       	pop	r19
    1a86:	2f 91       	pop	r18
    1a88:	1f 91       	pop	r17
    1a8a:	0f 91       	pop	r16
    1a8c:	0f 90       	pop	r0
    1a8e:	0f be       	out	0x3f, r0	; 63
    1a90:	0f 90       	pop	r0
    1a92:	1f 90       	pop	r1
    1a94:	18 95       	reti

00001a96 <idle>:
    1a96:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    1a9a:	78 94       	sei
    1a9c:	81 e0       	ldi	r24, 0x01	; 1
    1a9e:	83 bf       	out	0x33, r24	; 51
    1aa0:	88 95       	sleep
    1aa2:	fc cf       	rjmp	.-8      	; 0x1a9c <idle+0x6>

00001aa4 <__vector_9>:
    1aa4:	1f 92       	push	r1
    1aa6:	0f 92       	push	r0
    1aa8:	0f b6       	in	r0, 0x3f	; 63
    1aaa:	0f 92       	push	r0
    1aac:	11 24       	eor	r1, r1
    1aae:	2f 93       	push	r18
    1ab0:	3f 93       	push	r19
    1ab2:	4f 93       	push	r20
    1ab4:	5f 93       	push	r21
    1ab6:	6f 93       	push	r22
    1ab8:	7f 93       	push	r23
    1aba:	8f 93       	push	r24
    1abc:	9f 93       	push	r25
    1abe:	ef 93       	push	r30
    1ac0:	ff 93       	push	r31
    1ac2:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1ac6:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1aca:	01 96       	adiw	r24, 0x01	; 1
    1acc:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
    1ad0:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
    1ad4:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <timerQ>
    1ad8:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <timerQ+0x1>
    1adc:	30 97       	sbiw	r30, 0x00	; 0
    1ade:	01 f1       	breq	.+64     	; 0x1b20 <__vector_9+0x7c>
    1ae0:	42 81       	ldd	r20, Z+2	; 0x02
    1ae2:	53 81       	ldd	r21, Z+3	; 0x03
    1ae4:	64 81       	ldd	r22, Z+4	; 0x04
    1ae6:	75 81       	ldd	r23, Z+5	; 0x05
    1ae8:	86 17       	cp	r24, r22
    1aea:	97 07       	cpc	r25, r23
    1aec:	c9 f4       	brne	.+50     	; 0x1b20 <__vector_9+0x7c>
    1aee:	ca 01       	movw	r24, r20
    1af0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1af4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1af8:	42 1b       	sub	r20, r18
    1afa:	53 0b       	sbc	r21, r19
    1afc:	41 30       	cpi	r20, 0x01	; 1
    1afe:	51 05       	cpc	r21, r1
    1b00:	29 f4       	brne	.+10     	; 0x1b0c <__vector_9+0x68>
    1b02:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b06:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b0a:	01 96       	adiw	r24, 0x01	; 1
    1b0c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b10:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b14:	ef e6       	ldi	r30, 0x6F	; 111
    1b16:	f0 e0       	ldi	r31, 0x00	; 0
    1b18:	80 81       	ld	r24, Z
    1b1a:	82 60       	ori	r24, 0x02	; 2
    1b1c:	80 83       	st	Z, r24
    1b1e:	05 c0       	rjmp	.+10     	; 0x1b2a <__vector_9+0x86>
    1b20:	ef e6       	ldi	r30, 0x6F	; 111
    1b22:	f0 e0       	ldi	r31, 0x00	; 0
    1b24:	80 81       	ld	r24, Z
    1b26:	8d 7f       	andi	r24, 0xFD	; 253
    1b28:	80 83       	st	Z, r24
    1b2a:	ff 91       	pop	r31
    1b2c:	ef 91       	pop	r30
    1b2e:	9f 91       	pop	r25
    1b30:	8f 91       	pop	r24
    1b32:	7f 91       	pop	r23
    1b34:	6f 91       	pop	r22
    1b36:	5f 91       	pop	r21
    1b38:	4f 91       	pop	r20
    1b3a:	3f 91       	pop	r19
    1b3c:	2f 91       	pop	r18
    1b3e:	0f 90       	pop	r0
    1b40:	0f be       	out	0x3f, r0	; 63
    1b42:	0f 90       	pop	r0
    1b44:	1f 90       	pop	r1
    1b46:	18 95       	reti

00001b48 <__vector_7>:
    1b48:	1f 92       	push	r1
    1b4a:	0f 92       	push	r0
    1b4c:	0f b6       	in	r0, 0x3f	; 63
    1b4e:	0f 92       	push	r0
    1b50:	11 24       	eor	r1, r1
    1b52:	cf 92       	push	r12
    1b54:	df 92       	push	r13
    1b56:	ef 92       	push	r14
    1b58:	ff 92       	push	r15
    1b5a:	2f 93       	push	r18
    1b5c:	3f 93       	push	r19
    1b5e:	4f 93       	push	r20
    1b60:	5f 93       	push	r21
    1b62:	6f 93       	push	r22
    1b64:	7f 93       	push	r23
    1b66:	8f 93       	push	r24
    1b68:	9f 93       	push	r25
    1b6a:	af 93       	push	r26
    1b6c:	bf 93       	push	r27
    1b6e:	ef 93       	push	r30
    1b70:	ff 93       	push	r31
    1b72:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1b76:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1b7a:	6c 01       	movw	r12, r24
    1b7c:	09 2e       	mov	r0, r25
    1b7e:	00 0c       	add	r0, r0
    1b80:	ee 08       	sbc	r14, r14
    1b82:	ff 08       	sbc	r15, r15
    1b84:	76 01       	movw	r14, r12
    1b86:	dd 24       	eor	r13, r13
    1b88:	cc 24       	eor	r12, r12
    1b8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b92:	60 e0       	ldi	r22, 0x00	; 0
    1b94:	70 e0       	ldi	r23, 0x00	; 0
    1b96:	c4 2a       	or	r12, r20
    1b98:	d5 2a       	or	r13, r21
    1b9a:	e6 2a       	or	r14, r22
    1b9c:	f7 2a       	or	r15, r23
    1b9e:	b0 9b       	sbis	0x16, 0	; 22
    1ba0:	1e c0       	rjmp	.+60     	; 0x1bde <__vector_7+0x96>
    1ba2:	6c 01       	movw	r12, r24
    1ba4:	2f ef       	ldi	r18, 0xFF	; 255
    1ba6:	c2 1a       	sub	r12, r18
    1ba8:	d2 0a       	sbc	r13, r18
    1baa:	0d 2c       	mov	r0, r13
    1bac:	00 0c       	add	r0, r0
    1bae:	ee 08       	sbc	r14, r14
    1bb0:	ff 08       	sbc	r15, r15
    1bb2:	d6 01       	movw	r26, r12
    1bb4:	99 27       	eor	r25, r25
    1bb6:	88 27       	eor	r24, r24
    1bb8:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bbc:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bc0:	e1 2c       	mov	r14, r1
    1bc2:	f1 2c       	mov	r15, r1
    1bc4:	c8 2a       	or	r12, r24
    1bc6:	d9 2a       	or	r13, r25
    1bc8:	ea 2a       	or	r14, r26
    1bca:	fb 2a       	or	r15, r27
    1bcc:	08 c0       	rjmp	.+16     	; 0x1bde <__vector_7+0x96>
    1bce:	8a e3       	ldi	r24, 0x3A	; 58
    1bd0:	91 e0       	ldi	r25, 0x01	; 1
    1bd2:	0e 94 14 05 	call	0xa28	; 0xa28 <dequeue>
    1bd6:	6c e3       	ldi	r22, 0x3C	; 60
    1bd8:	71 e0       	ldi	r23, 0x01	; 1
    1bda:	0e 94 b2 04 	call	0x964	; 0x964 <enqueueByDeadline>
    1bde:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <timerQ>
    1be2:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <timerQ+0x1>
    1be6:	30 97       	sbiw	r30, 0x00	; 0
    1be8:	69 f0       	breq	.+26     	; 0x1c04 <__vector_7+0xbc>
    1bea:	82 81       	ldd	r24, Z+2	; 0x02
    1bec:	93 81       	ldd	r25, Z+3	; 0x03
    1bee:	a4 81       	ldd	r26, Z+4	; 0x04
    1bf0:	b5 81       	ldd	r27, Z+5	; 0x05
    1bf2:	8c 19       	sub	r24, r12
    1bf4:	9d 09       	sbc	r25, r13
    1bf6:	ae 09       	sbc	r26, r14
    1bf8:	bf 09       	sbc	r27, r15
    1bfa:	18 16       	cp	r1, r24
    1bfc:	19 06       	cpc	r1, r25
    1bfe:	1a 06       	cpc	r1, r26
    1c00:	1b 06       	cpc	r1, r27
    1c02:	2c f7       	brge	.-54     	; 0x1bce <__vector_7+0x86>
    1c04:	30 97       	sbiw	r30, 0x00	; 0
    1c06:	21 f1       	breq	.+72     	; 0x1c50 <__vector_7+0x108>
    1c08:	82 81       	ldd	r24, Z+2	; 0x02
    1c0a:	93 81       	ldd	r25, Z+3	; 0x03
    1c0c:	a4 81       	ldd	r26, Z+4	; 0x04
    1c0e:	b5 81       	ldd	r27, Z+5	; 0x05
    1c10:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1c14:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1c18:	2a 17       	cp	r18, r26
    1c1a:	3b 07       	cpc	r19, r27
    1c1c:	c9 f4       	brne	.+50     	; 0x1c50 <__vector_7+0x108>
    1c1e:	9c 01       	movw	r18, r24
    1c20:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c24:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c28:	84 1b       	sub	r24, r20
    1c2a:	95 0b       	sbc	r25, r21
    1c2c:	01 97       	sbiw	r24, 0x01	; 1
    1c2e:	31 f4       	brne	.+12     	; 0x1c3c <__vector_7+0xf4>
    1c30:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c34:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c38:	2f 5f       	subi	r18, 0xFF	; 255
    1c3a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c3c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c40:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1c44:	ef e6       	ldi	r30, 0x6F	; 111
    1c46:	f0 e0       	ldi	r31, 0x00	; 0
    1c48:	80 81       	ld	r24, Z
    1c4a:	82 60       	ori	r24, 0x02	; 2
    1c4c:	80 83       	st	Z, r24
    1c4e:	05 c0       	rjmp	.+10     	; 0x1c5a <__vector_7+0x112>
    1c50:	ef e6       	ldi	r30, 0x6F	; 111
    1c52:	f0 e0       	ldi	r31, 0x00	; 0
    1c54:	80 81       	ld	r24, Z
    1c56:	8d 7f       	andi	r24, 0xFD	; 253
    1c58:	80 83       	st	Z, r24
    1c5a:	0e 94 49 05 	call	0xa92	; 0xa92 <schedule>
    1c5e:	ff 91       	pop	r31
    1c60:	ef 91       	pop	r30
    1c62:	bf 91       	pop	r27
    1c64:	af 91       	pop	r26
    1c66:	9f 91       	pop	r25
    1c68:	8f 91       	pop	r24
    1c6a:	7f 91       	pop	r23
    1c6c:	6f 91       	pop	r22
    1c6e:	5f 91       	pop	r21
    1c70:	4f 91       	pop	r20
    1c72:	3f 91       	pop	r19
    1c74:	2f 91       	pop	r18
    1c76:	ff 90       	pop	r15
    1c78:	ef 90       	pop	r14
    1c7a:	df 90       	pop	r13
    1c7c:	cf 90       	pop	r12
    1c7e:	0f 90       	pop	r0
    1c80:	0f be       	out	0x3f, r0	; 63
    1c82:	0f 90       	pop	r0
    1c84:	1f 90       	pop	r1
    1c86:	18 95       	reti

00001c88 <async>:
    1c88:	3f 92       	push	r3
    1c8a:	4f 92       	push	r4
    1c8c:	5f 92       	push	r5
    1c8e:	6f 92       	push	r6
    1c90:	7f 92       	push	r7
    1c92:	8f 92       	push	r8
    1c94:	9f 92       	push	r9
    1c96:	af 92       	push	r10
    1c98:	bf 92       	push	r11
    1c9a:	cf 92       	push	r12
    1c9c:	df 92       	push	r13
    1c9e:	ef 92       	push	r14
    1ca0:	ff 92       	push	r15
    1ca2:	0f 93       	push	r16
    1ca4:	1f 93       	push	r17
    1ca6:	cf 93       	push	r28
    1ca8:	df 93       	push	r29
    1caa:	2b 01       	movw	r4, r22
    1cac:	3c 01       	movw	r6, r24
    1cae:	49 01       	movw	r8, r18
    1cb0:	5a 01       	movw	r10, r20
    1cb2:	8f b7       	in	r24, 0x3f	; 63
    1cb4:	80 78       	andi	r24, 0x80	; 128
    1cb6:	38 2e       	mov	r3, r24
    1cb8:	f8 94       	cli
    1cba:	86 e0       	ldi	r24, 0x06	; 6
    1cbc:	91 e0       	ldi	r25, 0x01	; 1
    1cbe:	0e 94 14 05 	call	0xa28	; 0xa28 <dequeue>
    1cc2:	ec 01       	movw	r28, r24
    1cc4:	1b 87       	std	Y+11, r17	; 0x0b
    1cc6:	0a 87       	std	Y+10, r16	; 0x0a
    1cc8:	fd 86       	std	Y+13, r15	; 0x0d
    1cca:	ec 86       	std	Y+12, r14	; 0x0c
    1ccc:	df 86       	std	Y+15, r13	; 0x0f
    1cce:	ce 86       	std	Y+14, r12	; 0x0e
    1cd0:	33 20       	and	r3, r3
    1cd2:	61 f0       	breq	.+24     	; 0x1cec <async+0x64>
    1cd4:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1cd8:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1cdc:	02 80       	ldd	r0, Z+2	; 0x02
    1cde:	f3 81       	ldd	r31, Z+3	; 0x03
    1ce0:	e0 2d       	mov	r30, r0
    1ce2:	82 81       	ldd	r24, Z+2	; 0x02
    1ce4:	93 81       	ldd	r25, Z+3	; 0x03
    1ce6:	a4 81       	ldd	r26, Z+4	; 0x04
    1ce8:	b5 81       	ldd	r27, Z+5	; 0x05
    1cea:	08 c0       	rjmp	.+16     	; 0x1cfc <async+0x74>
    1cec:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <timestamp>
    1cf0:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <timestamp+0x1>
    1cf4:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <timestamp+0x2>
    1cf8:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <timestamp+0x3>
    1cfc:	48 0e       	add	r4, r24
    1cfe:	59 1e       	adc	r5, r25
    1d00:	6a 1e       	adc	r6, r26
    1d02:	7b 1e       	adc	r7, r27
    1d04:	4a 82       	std	Y+2, r4	; 0x02
    1d06:	5b 82       	std	Y+3, r5	; 0x03
    1d08:	6c 82       	std	Y+4, r6	; 0x04
    1d0a:	7d 82       	std	Y+5, r7	; 0x05
    1d0c:	18 14       	cp	r1, r8
    1d0e:	19 04       	cpc	r1, r9
    1d10:	1a 04       	cpc	r1, r10
    1d12:	1b 04       	cpc	r1, r11
    1d14:	44 f0       	brlt	.+16     	; 0x1d26 <async+0x9e>
    1d16:	0f 2e       	mov	r0, r31
    1d18:	88 24       	eor	r8, r8
    1d1a:	8a 94       	dec	r8
    1d1c:	98 2c       	mov	r9, r8
    1d1e:	a8 2c       	mov	r10, r8
    1d20:	ff e7       	ldi	r31, 0x7F	; 127
    1d22:	bf 2e       	mov	r11, r31
    1d24:	f0 2d       	mov	r31, r0
    1d26:	84 0c       	add	r8, r4
    1d28:	95 1c       	adc	r9, r5
    1d2a:	a6 1c       	adc	r10, r6
    1d2c:	b7 1c       	adc	r11, r7
    1d2e:	8e 82       	std	Y+6, r8	; 0x06
    1d30:	9f 82       	std	Y+7, r9	; 0x07
    1d32:	a8 86       	std	Y+8, r10	; 0x08
    1d34:	b9 86       	std	Y+9, r11	; 0x09
    1d36:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1d3a:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1d3e:	c9 01       	movw	r24, r18
    1d40:	03 2e       	mov	r0, r19
    1d42:	00 0c       	add	r0, r0
    1d44:	aa 0b       	sbc	r26, r26
    1d46:	bb 0b       	sbc	r27, r27
    1d48:	dc 01       	movw	r26, r24
    1d4a:	99 27       	eor	r25, r25
    1d4c:	88 27       	eor	r24, r24
    1d4e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d52:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d56:	60 e0       	ldi	r22, 0x00	; 0
    1d58:	70 e0       	ldi	r23, 0x00	; 0
    1d5a:	84 2b       	or	r24, r20
    1d5c:	95 2b       	or	r25, r21
    1d5e:	a6 2b       	or	r26, r22
    1d60:	b7 2b       	or	r27, r23
    1d62:	b0 9b       	sbis	0x16, 0	; 22
    1d64:	13 c0       	rjmp	.+38     	; 0x1d8c <async+0x104>
    1d66:	c9 01       	movw	r24, r18
    1d68:	01 96       	adiw	r24, 0x01	; 1
    1d6a:	09 2e       	mov	r0, r25
    1d6c:	00 0c       	add	r0, r0
    1d6e:	aa 0b       	sbc	r26, r26
    1d70:	bb 0b       	sbc	r27, r27
    1d72:	dc 01       	movw	r26, r24
    1d74:	99 27       	eor	r25, r25
    1d76:	88 27       	eor	r24, r24
    1d78:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d7c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d80:	60 e0       	ldi	r22, 0x00	; 0
    1d82:	70 e0       	ldi	r23, 0x00	; 0
    1d84:	84 2b       	or	r24, r20
    1d86:	95 2b       	or	r25, r21
    1d88:	a6 2b       	or	r26, r22
    1d8a:	b7 2b       	or	r27, r23
    1d8c:	48 1a       	sub	r4, r24
    1d8e:	59 0a       	sbc	r5, r25
    1d90:	6a 0a       	sbc	r6, r26
    1d92:	7b 0a       	sbc	r7, r27
    1d94:	14 14       	cp	r1, r4
    1d96:	15 04       	cpc	r1, r5
    1d98:	16 04       	cpc	r1, r6
    1d9a:	17 04       	cpc	r1, r7
    1d9c:	ac f5       	brge	.+106    	; 0x1e08 <async+0x180>
    1d9e:	6a e3       	ldi	r22, 0x3A	; 58
    1da0:	71 e0       	ldi	r23, 0x01	; 1
    1da2:	ce 01       	movw	r24, r28
    1da4:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <enqueueByBaseline>
    1da8:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <timerQ>
    1dac:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <timerQ+0x1>
    1db0:	30 97       	sbiw	r30, 0x00	; 0
    1db2:	21 f1       	breq	.+72     	; 0x1dfc <async+0x174>
    1db4:	82 81       	ldd	r24, Z+2	; 0x02
    1db6:	93 81       	ldd	r25, Z+3	; 0x03
    1db8:	a4 81       	ldd	r26, Z+4	; 0x04
    1dba:	b5 81       	ldd	r27, Z+5	; 0x05
    1dbc:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1dc0:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1dc4:	2a 17       	cp	r18, r26
    1dc6:	3b 07       	cpc	r19, r27
    1dc8:	c9 f4       	brne	.+50     	; 0x1dfc <async+0x174>
    1dca:	9c 01       	movw	r18, r24
    1dcc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1dd0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1dd4:	84 1b       	sub	r24, r20
    1dd6:	95 0b       	sbc	r25, r21
    1dd8:	01 97       	sbiw	r24, 0x01	; 1
    1dda:	31 f4       	brne	.+12     	; 0x1de8 <async+0x160>
    1ddc:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1de0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1de4:	2f 5f       	subi	r18, 0xFF	; 255
    1de6:	3f 4f       	sbci	r19, 0xFF	; 255
    1de8:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1dec:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1df0:	ef e6       	ldi	r30, 0x6F	; 111
    1df2:	f0 e0       	ldi	r31, 0x00	; 0
    1df4:	80 81       	ld	r24, Z
    1df6:	82 60       	ori	r24, 0x02	; 2
    1df8:	80 83       	st	Z, r24
    1dfa:	39 c0       	rjmp	.+114    	; 0x1e6e <async+0x1e6>
    1dfc:	ef e6       	ldi	r30, 0x6F	; 111
    1dfe:	f0 e0       	ldi	r31, 0x00	; 0
    1e00:	80 81       	ld	r24, Z
    1e02:	8d 7f       	andi	r24, 0xFD	; 253
    1e04:	80 83       	st	Z, r24
    1e06:	33 c0       	rjmp	.+102    	; 0x1e6e <async+0x1e6>
    1e08:	6c e3       	ldi	r22, 0x3C	; 60
    1e0a:	71 e0       	ldi	r23, 0x01	; 1
    1e0c:	ce 01       	movw	r24, r28
    1e0e:	0e 94 b2 04 	call	0x964	; 0x964 <enqueueByDeadline>
    1e12:	33 20       	and	r3, r3
    1e14:	61 f1       	breq	.+88     	; 0x1e6e <async+0x1e6>
    1e16:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1e1a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1e1e:	89 2b       	or	r24, r25
    1e20:	31 f1       	breq	.+76     	; 0x1e6e <async+0x1e6>
    1e22:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <msgQ>
    1e26:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <msgQ+0x1>
    1e2a:	86 81       	ldd	r24, Z+6	; 0x06
    1e2c:	97 81       	ldd	r25, Z+7	; 0x07
    1e2e:	a0 85       	ldd	r26, Z+8	; 0x08
    1e30:	b1 85       	ldd	r27, Z+9	; 0x09
    1e32:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1e36:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1e3a:	02 80       	ldd	r0, Z+2	; 0x02
    1e3c:	f3 81       	ldd	r31, Z+3	; 0x03
    1e3e:	e0 2d       	mov	r30, r0
    1e40:	46 81       	ldd	r20, Z+6	; 0x06
    1e42:	57 81       	ldd	r21, Z+7	; 0x07
    1e44:	60 85       	ldd	r22, Z+8	; 0x08
    1e46:	71 85       	ldd	r23, Z+9	; 0x09
    1e48:	84 1b       	sub	r24, r20
    1e4a:	95 0b       	sbc	r25, r21
    1e4c:	a6 0b       	sbc	r26, r22
    1e4e:	b7 0b       	sbc	r27, r23
    1e50:	72 f4       	brpl	.+28     	; 0x1e6e <async+0x1e6>
    1e52:	84 e0       	ldi	r24, 0x04	; 4
    1e54:	91 e0       	ldi	r25, 0x01	; 1
    1e56:	0e 94 3f 05 	call	0xa7e	; 0xa7e <pop>
    1e5a:	62 e0       	ldi	r22, 0x02	; 2
    1e5c:	71 e0       	ldi	r23, 0x01	; 1
    1e5e:	0e 94 35 05 	call	0xa6a	; 0xa6a <push>
    1e62:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1e66:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1e6a:	0e 94 92 04 	call	0x924	; 0x924 <dispatch>
    1e6e:	33 20       	and	r3, r3
    1e70:	09 f0       	breq	.+2      	; 0x1e74 <async+0x1ec>
    1e72:	78 94       	sei
    1e74:	ce 01       	movw	r24, r28
    1e76:	df 91       	pop	r29
    1e78:	cf 91       	pop	r28
    1e7a:	1f 91       	pop	r17
    1e7c:	0f 91       	pop	r16
    1e7e:	ff 90       	pop	r15
    1e80:	ef 90       	pop	r14
    1e82:	df 90       	pop	r13
    1e84:	cf 90       	pop	r12
    1e86:	bf 90       	pop	r11
    1e88:	af 90       	pop	r10
    1e8a:	9f 90       	pop	r9
    1e8c:	8f 90       	pop	r8
    1e8e:	7f 90       	pop	r7
    1e90:	6f 90       	pop	r6
    1e92:	5f 90       	pop	r5
    1e94:	4f 90       	pop	r4
    1e96:	3f 90       	pop	r3
    1e98:	08 95       	ret

00001e9a <sync>:
    1e9a:	cf 92       	push	r12
    1e9c:	df 92       	push	r13
    1e9e:	ef 92       	push	r14
    1ea0:	ff 92       	push	r15
    1ea2:	0f 93       	push	r16
    1ea4:	1f 93       	push	r17
    1ea6:	cf 93       	push	r28
    1ea8:	df 93       	push	r29
    1eaa:	ec 01       	movw	r28, r24
    1eac:	7b 01       	movw	r14, r22
    1eae:	6a 01       	movw	r12, r20
    1eb0:	1f b7       	in	r17, 0x3f	; 63
    1eb2:	10 78       	andi	r17, 0x80	; 128
    1eb4:	f8 94       	cli
    1eb6:	a8 81       	ld	r26, Y
    1eb8:	b9 81       	ldd	r27, Y+1	; 0x01
    1eba:	10 97       	sbiw	r26, 0x00	; 0
    1ebc:	19 f4       	brne	.+6      	; 0x1ec4 <sync+0x2a>
    1ebe:	35 c0       	rjmp	.+106    	; 0x1f2a <sync+0x90>
    1ec0:	a0 81       	ld	r26, Z
    1ec2:	b1 81       	ldd	r27, Z+1	; 0x01
    1ec4:	14 96       	adiw	r26, 0x04	; 4
    1ec6:	ed 91       	ld	r30, X+
    1ec8:	fc 91       	ld	r31, X
    1eca:	15 97       	sbiw	r26, 0x05	; 5
    1ecc:	30 97       	sbiw	r30, 0x00	; 0
    1ece:	c1 f7       	brne	.-16     	; 0x1ec0 <sync+0x26>
    1ed0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ed4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ed8:	a2 17       	cp	r26, r18
    1eda:	b3 07       	cpc	r27, r19
    1edc:	11 f0       	breq	.+4      	; 0x1ee2 <sync+0x48>
    1ede:	11 11       	cpse	r17, r1
    1ee0:	07 c0       	rjmp	.+14     	; 0x1ef0 <sync+0x56>
    1ee2:	11 23       	and	r17, r17
    1ee4:	09 f4       	brne	.+2      	; 0x1ee8 <sync+0x4e>
    1ee6:	4a c0       	rjmp	.+148    	; 0x1f7c <sync+0xe2>
    1ee8:	78 94       	sei
    1eea:	8f ef       	ldi	r24, 0xFF	; 255
    1eec:	9f ef       	ldi	r25, 0xFF	; 255
    1eee:	4e c0       	rjmp	.+156    	; 0x1f8c <sync+0xf2>
    1ef0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ef2:	9b 81       	ldd	r25, Y+3	; 0x03
    1ef4:	00 97       	sbiw	r24, 0x00	; 0
    1ef6:	19 f0       	breq	.+6      	; 0x1efe <sync+0x64>
    1ef8:	fc 01       	movw	r30, r24
    1efa:	15 82       	std	Z+5, r1	; 0x05
    1efc:	14 82       	std	Z+4, r1	; 0x04
    1efe:	3b 83       	std	Y+3, r19	; 0x03
    1f00:	2a 83       	std	Y+2, r18	; 0x02
    1f02:	f9 01       	movw	r30, r18
    1f04:	d5 83       	std	Z+5, r29	; 0x05
    1f06:	c4 83       	std	Z+4, r28	; 0x04
    1f08:	cd 01       	movw	r24, r26
    1f0a:	0e 94 92 04 	call	0x924	; 0x924 <dispatch>
    1f0e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f12:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f16:	82 81       	ldd	r24, Z+2	; 0x02
    1f18:	93 81       	ldd	r25, Z+3	; 0x03
    1f1a:	89 2b       	or	r24, r25
    1f1c:	31 f4       	brne	.+12     	; 0x1f2a <sync+0x90>
    1f1e:	11 23       	and	r17, r17
    1f20:	81 f1       	breq	.+96     	; 0x1f82 <sync+0xe8>
    1f22:	78 94       	sei
    1f24:	80 e0       	ldi	r24, 0x00	; 0
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	31 c0       	rjmp	.+98     	; 0x1f8c <sync+0xf2>
    1f2a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f2e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f32:	99 83       	std	Y+1, r25	; 0x01
    1f34:	88 83       	st	Y, r24
    1f36:	11 23       	and	r17, r17
    1f38:	29 f0       	breq	.+10     	; 0x1f44 <sync+0xaa>
    1f3a:	8a 81       	ldd	r24, Y+2	; 0x02
    1f3c:	9b 81       	ldd	r25, Y+3	; 0x03
    1f3e:	01 97       	sbiw	r24, 0x01	; 1
    1f40:	09 f0       	breq	.+2      	; 0x1f44 <sync+0xaa>
    1f42:	78 94       	sei
    1f44:	b6 01       	movw	r22, r12
    1f46:	ce 01       	movw	r24, r28
    1f48:	f7 01       	movw	r30, r14
    1f4a:	09 95       	icall
    1f4c:	f8 2e       	mov	r15, r24
    1f4e:	09 2f       	mov	r16, r25
    1f50:	8f b7       	in	r24, 0x3f	; 63
    1f52:	f8 94       	cli
    1f54:	19 82       	std	Y+1, r1	; 0x01
    1f56:	18 82       	st	Y, r1
    1f58:	8a 81       	ldd	r24, Y+2	; 0x02
    1f5a:	9b 81       	ldd	r25, Y+3	; 0x03
    1f5c:	82 30       	cpi	r24, 0x02	; 2
    1f5e:	91 05       	cpc	r25, r1
    1f60:	38 f0       	brcs	.+14     	; 0x1f70 <sync+0xd6>
    1f62:	1b 82       	std	Y+3, r1	; 0x03
    1f64:	1a 82       	std	Y+2, r1	; 0x02
    1f66:	fc 01       	movw	r30, r24
    1f68:	15 82       	std	Z+5, r1	; 0x05
    1f6a:	14 82       	std	Z+4, r1	; 0x04
    1f6c:	0e 94 92 04 	call	0x924	; 0x924 <dispatch>
    1f70:	11 23       	and	r17, r17
    1f72:	51 f0       	breq	.+20     	; 0x1f88 <sync+0xee>
    1f74:	78 94       	sei
    1f76:	8f 2d       	mov	r24, r15
    1f78:	90 2f       	mov	r25, r16
    1f7a:	08 c0       	rjmp	.+16     	; 0x1f8c <sync+0xf2>
    1f7c:	8f ef       	ldi	r24, 0xFF	; 255
    1f7e:	9f ef       	ldi	r25, 0xFF	; 255
    1f80:	05 c0       	rjmp	.+10     	; 0x1f8c <sync+0xf2>
    1f82:	80 e0       	ldi	r24, 0x00	; 0
    1f84:	90 e0       	ldi	r25, 0x00	; 0
    1f86:	02 c0       	rjmp	.+4      	; 0x1f8c <sync+0xf2>
    1f88:	8f 2d       	mov	r24, r15
    1f8a:	90 2f       	mov	r25, r16
    1f8c:	df 91       	pop	r29
    1f8e:	cf 91       	pop	r28
    1f90:	1f 91       	pop	r17
    1f92:	0f 91       	pop	r16
    1f94:	ff 90       	pop	r15
    1f96:	ef 90       	pop	r14
    1f98:	df 90       	pop	r13
    1f9a:	cf 90       	pop	r12
    1f9c:	08 95       	ret

00001f9e <run>:
    1f9e:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fa2:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fa6:	8c e3       	ldi	r24, 0x3C	; 60
    1fa8:	91 e0       	ldi	r25, 0x01	; 1
    1faa:	0e 94 14 05 	call	0xa28	; 0xa28 <dequeue>
    1fae:	ec 01       	movw	r28, r24
    1fb0:	f8 01       	movw	r30, r16
    1fb2:	93 83       	std	Z+3, r25	; 0x03
    1fb4:	82 83       	std	Z+2, r24	; 0x02
    1fb6:	78 94       	sei
    1fb8:	6c 85       	ldd	r22, Y+12	; 0x0c
    1fba:	7d 85       	ldd	r23, Y+13	; 0x0d
    1fbc:	4e 85       	ldd	r20, Y+14	; 0x0e
    1fbe:	5f 85       	ldd	r21, Y+15	; 0x0f
    1fc0:	8a 85       	ldd	r24, Y+10	; 0x0a
    1fc2:	9b 85       	ldd	r25, Y+11	; 0x0b
    1fc4:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <sync>
    1fc8:	8f b7       	in	r24, 0x3f	; 63
    1fca:	f8 94       	cli
    1fcc:	66 e0       	ldi	r22, 0x06	; 6
    1fce:	71 e0       	ldi	r23, 0x01	; 1
    1fd0:	ce 01       	movw	r24, r28
    1fd2:	0e 94 2b 05 	call	0xa56	; 0xa56 <insert>
    1fd6:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1fda:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1fde:	01 90       	ld	r0, Z+
    1fe0:	f0 81       	ld	r31, Z
    1fe2:	e0 2d       	mov	r30, r0
    1fe4:	c2 81       	ldd	r28, Z+2	; 0x02
    1fe6:	d3 81       	ldd	r29, Z+3	; 0x03
    1fe8:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <msgQ>
    1fec:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <msgQ+0x1>
    1ff0:	30 97       	sbiw	r30, 0x00	; 0
    1ff2:	a1 f0       	breq	.+40     	; 0x201c <run+0x7e>
    1ff4:	20 97       	sbiw	r28, 0x00	; 0
    1ff6:	99 f2       	breq	.-90     	; 0x1f9e <run>
    1ff8:	86 81       	ldd	r24, Z+6	; 0x06
    1ffa:	97 81       	ldd	r25, Z+7	; 0x07
    1ffc:	a0 85       	ldd	r26, Z+8	; 0x08
    1ffe:	b1 85       	ldd	r27, Z+9	; 0x09
    2000:	4e 81       	ldd	r20, Y+6	; 0x06
    2002:	5f 81       	ldd	r21, Y+7	; 0x07
    2004:	68 85       	ldd	r22, Y+8	; 0x08
    2006:	79 85       	ldd	r23, Y+9	; 0x09
    2008:	84 1b       	sub	r24, r20
    200a:	95 0b       	sbc	r25, r21
    200c:	a6 0b       	sbc	r26, r22
    200e:	b7 0b       	sbc	r27, r23
    2010:	18 16       	cp	r1, r24
    2012:	19 06       	cpc	r1, r25
    2014:	1a 06       	cpc	r1, r26
    2016:	1b 06       	cpc	r1, r27
    2018:	0c f0       	brlt	.+2      	; 0x201c <run+0x7e>
    201a:	c1 cf       	rjmp	.-126    	; 0x1f9e <run>
    201c:	82 e0       	ldi	r24, 0x02	; 2
    201e:	91 e0       	ldi	r25, 0x01	; 1
    2020:	0e 94 3f 05 	call	0xa7e	; 0xa7e <pop>
    2024:	64 e0       	ldi	r22, 0x04	; 4
    2026:	71 e0       	ldi	r23, 0x01	; 1
    2028:	0e 94 35 05 	call	0xa6a	; 0xa6a <push>
    202c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    2030:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    2034:	02 c0       	rjmp	.+4      	; 0x203a <run+0x9c>
    2036:	a0 81       	ld	r26, Z
    2038:	b1 81       	ldd	r27, Z+1	; 0x01
    203a:	14 96       	adiw	r26, 0x04	; 4
    203c:	ed 91       	ld	r30, X+
    203e:	fc 91       	ld	r31, X
    2040:	15 97       	sbiw	r26, 0x05	; 5
    2042:	30 97       	sbiw	r30, 0x00	; 0
    2044:	c1 f7       	brne	.-16     	; 0x2036 <run+0x98>
    2046:	cd 01       	movw	r24, r26
    2048:	0e 94 92 04 	call	0x924	; 0x924 <dispatch>
    204c:	a8 cf       	rjmp	.-176    	; 0x1f9e <run>

0000204e <ABORT>:
    204e:	1f 93       	push	r17
    2050:	cf 93       	push	r28
    2052:	df 93       	push	r29
    2054:	ec 01       	movw	r28, r24
    2056:	1f b7       	in	r17, 0x3f	; 63
    2058:	10 78       	andi	r17, 0x80	; 128
    205a:	f8 94       	cli
    205c:	6a e3       	ldi	r22, 0x3A	; 58
    205e:	71 e0       	ldi	r23, 0x01	; 1
    2060:	0e 94 ce 03 	call	0x79c	; 0x79c <remove>
    2064:	89 2b       	or	r24, r25
    2066:	39 f4       	brne	.+14     	; 0x2076 <ABORT+0x28>
    2068:	6c e3       	ldi	r22, 0x3C	; 60
    206a:	71 e0       	ldi	r23, 0x01	; 1
    206c:	ce 01       	movw	r24, r28
    206e:	0e 94 ce 03 	call	0x79c	; 0x79c <remove>
    2072:	89 2b       	or	r24, r25
    2074:	31 f0       	breq	.+12     	; 0x2082 <ABORT+0x34>
    2076:	66 e0       	ldi	r22, 0x06	; 6
    2078:	71 e0       	ldi	r23, 0x01	; 1
    207a:	ce 01       	movw	r24, r28
    207c:	0e 94 2b 05 	call	0xa56	; 0xa56 <insert>
    2080:	25 c0       	rjmp	.+74     	; 0x20cc <ABORT+0x7e>
    2082:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    2086:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    208a:	1e c0       	rjmp	.+60     	; 0x20c8 <ABORT+0x7a>
    208c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2090:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2094:	e8 17       	cp	r30, r24
    2096:	f9 07       	cpc	r31, r25
    2098:	a1 f0       	breq	.+40     	; 0x20c2 <ABORT+0x74>
    209a:	82 81       	ldd	r24, Z+2	; 0x02
    209c:	93 81       	ldd	r25, Z+3	; 0x03
    209e:	c8 17       	cp	r28, r24
    20a0:	d9 07       	cpc	r29, r25
    20a2:	79 f4       	brne	.+30     	; 0x20c2 <ABORT+0x74>
    20a4:	24 81       	ldd	r18, Z+4	; 0x04
    20a6:	35 81       	ldd	r19, Z+5	; 0x05
    20a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    20aa:	9b 85       	ldd	r25, Y+11	; 0x0b
    20ac:	28 17       	cp	r18, r24
    20ae:	39 07       	cpc	r19, r25
    20b0:	41 f4       	brne	.+16     	; 0x20c2 <ABORT+0x74>
    20b2:	13 82       	std	Z+3, r1	; 0x03
    20b4:	12 82       	std	Z+2, r1	; 0x02
    20b6:	66 e0       	ldi	r22, 0x06	; 6
    20b8:	71 e0       	ldi	r23, 0x01	; 1
    20ba:	ce 01       	movw	r24, r28
    20bc:	0e 94 2b 05 	call	0xa56	; 0xa56 <insert>
    20c0:	05 c0       	rjmp	.+10     	; 0x20cc <ABORT+0x7e>
    20c2:	01 90       	ld	r0, Z+
    20c4:	f0 81       	ld	r31, Z
    20c6:	e0 2d       	mov	r30, r0
    20c8:	30 97       	sbiw	r30, 0x00	; 0
    20ca:	01 f7       	brne	.-64     	; 0x208c <ABORT+0x3e>
    20cc:	11 23       	and	r17, r17
    20ce:	09 f0       	breq	.+2      	; 0x20d2 <ABORT+0x84>
    20d0:	78 94       	sei
    20d2:	df 91       	pop	r29
    20d4:	cf 91       	pop	r28
    20d6:	1f 91       	pop	r17
    20d8:	08 95       	ret

000020da <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    20da:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    20dc:	42 31       	cpi	r20, 0x12	; 18
    20de:	b8 f4       	brcc	.+46     	; 0x210e <install+0x34>
        char status;
        DISABLE(status);
    20e0:	9f b7       	in	r25, 0x3f	; 63
    20e2:	90 78       	andi	r25, 0x80	; 128
    20e4:	f8 94       	cli
        otable[i] = obj;
    20e6:	50 e0       	ldi	r21, 0x00	; 0
    20e8:	44 0f       	add	r20, r20
    20ea:	55 1f       	adc	r21, r21
    20ec:	da 01       	movw	r26, r20
    20ee:	ae 5b       	subi	r26, 0xBE	; 190
    20f0:	be 4f       	sbci	r27, 0xFE	; 254
    20f2:	ed 93       	st	X+, r30
    20f4:	fc 93       	st	X, r31
        mtable[i] = m;
    20f6:	da 01       	movw	r26, r20
    20f8:	a6 52       	subi	r26, 0x26	; 38
    20fa:	be 4f       	sbci	r27, 0xFE	; 254
    20fc:	6d 93       	st	X+, r22
    20fe:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2100:	21 e0       	ldi	r18, 0x01	; 1
    2102:	30 e0       	ldi	r19, 0x00	; 0
    2104:	33 83       	std	Z+3, r19	; 0x03
    2106:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    2108:	99 23       	and	r25, r25
    210a:	09 f0       	breq	.+2      	; 0x210e <install+0x34>
    210c:	78 94       	sei
    210e:	08 95       	ret

00002110 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2110:	8c 01       	movw	r16, r24
    2112:	7b 01       	movw	r14, r22
    2114:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    2116:	8f b7       	in	r24, 0x3f	; 63
    2118:	f8 94       	cli
    initialize();
    211a:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <initialize>
    ENABLE(1);
    211e:	78 94       	sei
    if (m != NULL)
    2120:	e1 14       	cp	r14, r1
    2122:	f1 04       	cpc	r15, r1
    2124:	41 f0       	breq	.+16     	; 0x2136 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    2126:	20 e0       	ldi	r18, 0x00	; 0
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	a9 01       	movw	r20, r18
    212c:	60 e0       	ldi	r22, 0x00	; 0
    212e:	70 e0       	ldi	r23, 0x00	; 0
    2130:	cb 01       	movw	r24, r22
    2132:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <async>
    DISABLE(status);
    2136:	8f b7       	in	r24, 0x3f	; 63
    2138:	f8 94       	cli
    idle();
    213a:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <idle>

0000213e <__divmodhi4>:
    213e:	97 fb       	bst	r25, 7
    2140:	07 2e       	mov	r0, r23
    2142:	16 f4       	brtc	.+4      	; 0x2148 <__divmodhi4+0xa>
    2144:	00 94       	com	r0
    2146:	07 d0       	rcall	.+14     	; 0x2156 <__divmodhi4_neg1>
    2148:	77 fd       	sbrc	r23, 7
    214a:	09 d0       	rcall	.+18     	; 0x215e <__divmodhi4_neg2>
    214c:	0e 94 b3 10 	call	0x2166	; 0x2166 <__udivmodhi4>
    2150:	07 fc       	sbrc	r0, 7
    2152:	05 d0       	rcall	.+10     	; 0x215e <__divmodhi4_neg2>
    2154:	3e f4       	brtc	.+14     	; 0x2164 <__divmodhi4_exit>

00002156 <__divmodhi4_neg1>:
    2156:	90 95       	com	r25
    2158:	81 95       	neg	r24
    215a:	9f 4f       	sbci	r25, 0xFF	; 255
    215c:	08 95       	ret

0000215e <__divmodhi4_neg2>:
    215e:	70 95       	com	r23
    2160:	61 95       	neg	r22
    2162:	7f 4f       	sbci	r23, 0xFF	; 255

00002164 <__divmodhi4_exit>:
    2164:	08 95       	ret

00002166 <__udivmodhi4>:
    2166:	aa 1b       	sub	r26, r26
    2168:	bb 1b       	sub	r27, r27
    216a:	51 e1       	ldi	r21, 0x11	; 17
    216c:	07 c0       	rjmp	.+14     	; 0x217c <__udivmodhi4_ep>

0000216e <__udivmodhi4_loop>:
    216e:	aa 1f       	adc	r26, r26
    2170:	bb 1f       	adc	r27, r27
    2172:	a6 17       	cp	r26, r22
    2174:	b7 07       	cpc	r27, r23
    2176:	10 f0       	brcs	.+4      	; 0x217c <__udivmodhi4_ep>
    2178:	a6 1b       	sub	r26, r22
    217a:	b7 0b       	sbc	r27, r23

0000217c <__udivmodhi4_ep>:
    217c:	88 1f       	adc	r24, r24
    217e:	99 1f       	adc	r25, r25
    2180:	5a 95       	dec	r21
    2182:	a9 f7       	brne	.-22     	; 0x216e <__udivmodhi4_loop>
    2184:	80 95       	com	r24
    2186:	90 95       	com	r25
    2188:	bc 01       	movw	r22, r24
    218a:	cd 01       	movw	r24, r26
    218c:	08 95       	ret

0000218e <setjmp>:
    218e:	dc 01       	movw	r26, r24
    2190:	2d 92       	st	X+, r2
    2192:	3d 92       	st	X+, r3
    2194:	4d 92       	st	X+, r4
    2196:	5d 92       	st	X+, r5
    2198:	6d 92       	st	X+, r6
    219a:	7d 92       	st	X+, r7
    219c:	8d 92       	st	X+, r8
    219e:	9d 92       	st	X+, r9
    21a0:	ad 92       	st	X+, r10
    21a2:	bd 92       	st	X+, r11
    21a4:	cd 92       	st	X+, r12
    21a6:	dd 92       	st	X+, r13
    21a8:	ed 92       	st	X+, r14
    21aa:	fd 92       	st	X+, r15
    21ac:	0d 93       	st	X+, r16
    21ae:	1d 93       	st	X+, r17
    21b0:	cd 93       	st	X+, r28
    21b2:	dd 93       	st	X+, r29
    21b4:	ff 91       	pop	r31
    21b6:	ef 91       	pop	r30
    21b8:	8d b7       	in	r24, 0x3d	; 61
    21ba:	8d 93       	st	X+, r24
    21bc:	8e b7       	in	r24, 0x3e	; 62
    21be:	8d 93       	st	X+, r24
    21c0:	8f b7       	in	r24, 0x3f	; 63
    21c2:	8d 93       	st	X+, r24
    21c4:	ed 93       	st	X+, r30
    21c6:	fd 93       	st	X+, r31
    21c8:	88 27       	eor	r24, r24
    21ca:	99 27       	eor	r25, r25
    21cc:	09 94       	ijmp

000021ce <longjmp>:
    21ce:	dc 01       	movw	r26, r24
    21d0:	cb 01       	movw	r24, r22
    21d2:	81 30       	cpi	r24, 0x01	; 1
    21d4:	91 05       	cpc	r25, r1
    21d6:	81 1d       	adc	r24, r1
    21d8:	2d 90       	ld	r2, X+
    21da:	3d 90       	ld	r3, X+
    21dc:	4d 90       	ld	r4, X+
    21de:	5d 90       	ld	r5, X+
    21e0:	6d 90       	ld	r6, X+
    21e2:	7d 90       	ld	r7, X+
    21e4:	8d 90       	ld	r8, X+
    21e6:	9d 90       	ld	r9, X+
    21e8:	ad 90       	ld	r10, X+
    21ea:	bd 90       	ld	r11, X+
    21ec:	cd 90       	ld	r12, X+
    21ee:	dd 90       	ld	r13, X+
    21f0:	ed 90       	ld	r14, X+
    21f2:	fd 90       	ld	r15, X+
    21f4:	0d 91       	ld	r16, X+
    21f6:	1d 91       	ld	r17, X+
    21f8:	cd 91       	ld	r28, X+
    21fa:	dd 91       	ld	r29, X+
    21fc:	ed 91       	ld	r30, X+
    21fe:	fd 91       	ld	r31, X+
    2200:	0d 90       	ld	r0, X+
    2202:	f8 94       	cli
    2204:	fe bf       	out	0x3e, r31	; 62
    2206:	0f be       	out	0x3f, r0	; 63
    2208:	ed bf       	out	0x3d, r30	; 61
    220a:	ed 91       	ld	r30, X+
    220c:	fd 91       	ld	r31, X+
    220e:	09 94       	ijmp

00002210 <_exit>:
    2210:	f8 94       	cli

00002212 <__stop_program>:
    2212:	ff cf       	rjmp	.-2      	; 0x2212 <__stop_program>
