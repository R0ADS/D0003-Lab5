
D0003E-Lab5-Traffic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  000021d4  00002268  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800134  00800134  0000229c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000229c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  0000230c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002dcf  00000000  00000000  00002564  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011f4  00000000  00000000  00005333  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016a3  00000000  00000000  00006527  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c0c  00000000  00000000  00007bcc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000998  00000000  00000000  000087d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002fcc  00000000  00000000  00009170  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f0  00000000  00000000  0000c13c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__vector_1>
       8:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__vector_2>
       c:	0c 94 53 05 	jmp	0xaa6	; 0xaa6 <__vector_3>
      10:	0c 94 bf 05 	jmp	0xb7e	; 0xb7e <__vector_4>
      14:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 66 0c 	jmp	0x18cc	; 0x18cc <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 13 0c 	jmp	0x1826	; 0x1826 <__vector_9>
      28:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__vector_10>
      2c:	0c 94 03 07 	jmp	0xe06	; 0xe06 <__vector_11>
      30:	0c 94 6f 07 	jmp	0xede	; 0xede <__vector_12>
      34:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__vector_13>
      38:	0c 94 47 08 	jmp	0x108e	; 0x108e <__vector_14>
      3c:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__vector_15>
      40:	0c 94 1f 09 	jmp	0x123e	; 0x123e <__vector_16>
      44:	0c 94 8b 09 	jmp	0x1316	; 0x1316 <__vector_17>
      48:	0c 94 f7 09 	jmp	0x13ee	; 0x13ee <__vector_18>
      4c:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <__vector_19>
      50:	0c 94 cf 0a 	jmp	0x159e	; 0x159e <__vector_20>
      54:	0c 94 3b 0b 	jmp	0x1676	; 0x1676 <__vector_21>
      58:	0c 94 a7 0b 	jmp	0x174e	; 0x174e <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e4 ed       	ldi	r30, 0xD4	; 212
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a4 33       	cpi	r26, 0x34	; 52
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a4 e3       	ldi	r26, 0x34	; 52
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <main>
      92:	0c 94 e8 10 	jmp	0x21d0	; 0x21d0 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <transmit>:
#include <avr/io.h>
#include "Communication.h"

// Sends data to simulator
int transmit(Communication *self, int data) {
	while ( !(UCSR0A & (1<<UDRE0)) );
      9a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
      9e:	85 ff       	sbrs	r24, 5
      a0:	fc cf       	rjmp	.-8      	; 0x9a <transmit>
	UDR0 = data;
      a2:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
      a6:	08 95       	ret

000000a8 <updateDisplay>:

Msg test;
Msg teste;

// Displays our three variables on corresponding segments
int updateDisplay(Handler *self) {
      a8:	cf 92       	push	r12
      aa:	df 92       	push	r13
      ac:	ef 92       	push	r14
      ae:	ff 92       	push	r15
      b0:	0f 93       	push	r16
      b2:	1f 93       	push	r17
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
      b8:	ec 01       	movw	r28, r24
	ASYNC(self->lcd, printAt, self->northQueue * 10);
      ba:	8c 85       	ldd	r24, Y+12	; 0x0c
      bc:	9d 85       	ldd	r25, Y+13	; 0x0d
      be:	6c 01       	movw	r12, r24
      c0:	cc 0c       	add	r12, r12
      c2:	dd 1c       	adc	r13, r13
      c4:	88 0f       	add	r24, r24
      c6:	99 1f       	adc	r25, r25
      c8:	88 0f       	add	r24, r24
      ca:	99 1f       	adc	r25, r25
      cc:	88 0f       	add	r24, r24
      ce:	99 1f       	adc	r25, r25
      d0:	c8 0e       	add	r12, r24
      d2:	d9 1e       	adc	r13, r25
      d4:	0e 81       	ldd	r16, Y+6	; 0x06
      d6:	1f 81       	ldd	r17, Y+7	; 0x07
      d8:	4e e2       	ldi	r20, 0x2E	; 46
      da:	e4 2e       	mov	r14, r20
      dc:	43 e0       	ldi	r20, 0x03	; 3
      de:	f4 2e       	mov	r15, r20
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	a9 01       	movw	r20, r18
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	cb 01       	movw	r24, r22
      ec:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
	ASYNC(self->lcd, printAt, self->onBridge * 10 + 2);
      f0:	8e 85       	ldd	r24, Y+14	; 0x0e
      f2:	9f 85       	ldd	r25, Y+15	; 0x0f
      f4:	6c 01       	movw	r12, r24
      f6:	cc 0c       	add	r12, r12
      f8:	dd 1c       	adc	r13, r13
      fa:	88 0f       	add	r24, r24
      fc:	99 1f       	adc	r25, r25
      fe:	88 0f       	add	r24, r24
     100:	99 1f       	adc	r25, r25
     102:	88 0f       	add	r24, r24
     104:	99 1f       	adc	r25, r25
     106:	c8 0e       	add	r12, r24
     108:	d9 1e       	adc	r13, r25
     10a:	82 e0       	ldi	r24, 0x02	; 2
     10c:	c8 0e       	add	r12, r24
     10e:	d1 1c       	adc	r13, r1
     110:	0e 81       	ldd	r16, Y+6	; 0x06
     112:	1f 81       	ldd	r17, Y+7	; 0x07
     114:	20 e0       	ldi	r18, 0x00	; 0
     116:	30 e0       	ldi	r19, 0x00	; 0
     118:	a9 01       	movw	r20, r18
     11a:	60 e0       	ldi	r22, 0x00	; 0
     11c:	70 e0       	ldi	r23, 0x00	; 0
     11e:	cb 01       	movw	r24, r22
     120:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
	ASYNC(self->lcd, printAt, self->southQueue * 10 + 4);
     124:	8a 85       	ldd	r24, Y+10	; 0x0a
     126:	9b 85       	ldd	r25, Y+11	; 0x0b
     128:	6c 01       	movw	r12, r24
     12a:	cc 0c       	add	r12, r12
     12c:	dd 1c       	adc	r13, r13
     12e:	88 0f       	add	r24, r24
     130:	99 1f       	adc	r25, r25
     132:	88 0f       	add	r24, r24
     134:	99 1f       	adc	r25, r25
     136:	88 0f       	add	r24, r24
     138:	99 1f       	adc	r25, r25
     13a:	c8 0e       	add	r12, r24
     13c:	d9 1e       	adc	r13, r25
     13e:	84 e0       	ldi	r24, 0x04	; 4
     140:	c8 0e       	add	r12, r24
     142:	d1 1c       	adc	r13, r1
     144:	0e 81       	ldd	r16, Y+6	; 0x06
     146:	1f 81       	ldd	r17, Y+7	; 0x07
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	a9 01       	movw	r20, r18
     14e:	60 e0       	ldi	r22, 0x00	; 0
     150:	70 e0       	ldi	r23, 0x00	; 0
     152:	cb 01       	movw	r24, r22
     154:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
}
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	1f 91       	pop	r17
     15e:	0f 91       	pop	r16
     160:	ff 90       	pop	r15
     162:	ef 90       	pop	r14
     164:	df 90       	pop	r13
     166:	cf 90       	pop	r12
     168:	08 95       	ret

0000016a <reduceBridge>:

// Seperate function that reduces onbridge (needed for AFTER)
int reduceBridge(Handler *self) {
     16a:	cf 92       	push	r12
     16c:	df 92       	push	r13
     16e:	ef 92       	push	r14
     170:	ff 92       	push	r15
     172:	0f 93       	push	r16
     174:	1f 93       	push	r17
	self->onBridge--;
     176:	fc 01       	movw	r30, r24
     178:	26 85       	ldd	r18, Z+14	; 0x0e
     17a:	37 85       	ldd	r19, Z+15	; 0x0f
     17c:	21 50       	subi	r18, 0x01	; 1
     17e:	31 09       	sbc	r19, r1
     180:	37 87       	std	Z+15, r19	; 0x0f
     182:	26 87       	std	Z+14, r18	; 0x0e
	ASYNC(self, updateDisplay, NULL);
     184:	c1 2c       	mov	r12, r1
     186:	d1 2c       	mov	r13, r1
     188:	24 e5       	ldi	r18, 0x54	; 84
     18a:	e2 2e       	mov	r14, r18
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	f2 2e       	mov	r15, r18
     190:	8c 01       	movw	r16, r24
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	a9 01       	movw	r20, r18
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	70 e0       	ldi	r23, 0x00	; 0
     19c:	cb 01       	movw	r24, r22
     19e:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
}
     1a2:	1f 91       	pop	r17
     1a4:	0f 91       	pop	r16
     1a6:	ff 90       	pop	r15
     1a8:	ef 90       	pop	r14
     1aa:	df 90       	pop	r13
     1ac:	cf 90       	pop	r12
     1ae:	08 95       	ret

000001b0 <deQueuer>:

// Moves car from queue (dependent on dir) to bridge
int deQueuer(Handler *self, int dir){
     1b0:	cf 92       	push	r12
     1b2:	df 92       	push	r13
     1b4:	ef 92       	push	r14
     1b6:	ff 92       	push	r15
     1b8:	0f 93       	push	r16
     1ba:	1f 93       	push	r17
     1bc:	fc 01       	movw	r30, r24
	if (dir){
     1be:	67 2b       	or	r22, r23
     1c0:	09 f5       	brne	.+66     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
		self->northQueue--;
	}
	else{
		self->southQueue--;
     1c2:	82 85       	ldd	r24, Z+10	; 0x0a
     1c4:	93 85       	ldd	r25, Z+11	; 0x0b
     1c6:	01 97       	sbiw	r24, 0x01	; 1
     1c8:	93 87       	std	Z+11, r25	; 0x0b
     1ca:	82 87       	std	Z+10, r24	; 0x0a
	}
	self->onBridge++;
     1cc:	86 85       	ldd	r24, Z+14	; 0x0e
     1ce:	97 85       	ldd	r25, Z+15	; 0x0f
     1d0:	01 96       	adiw	r24, 0x01	; 1
     1d2:	97 87       	std	Z+15, r25	; 0x0f
     1d4:	86 87       	std	Z+14, r24	; 0x0e
	//ASYNC(self, updateDisplay, NULL);	// <-- Unnecessary line? Should remove and test
	AFTER(MSEC(5000), self, reduceBridge, NULL);
     1d6:	c1 2c       	mov	r12, r1
     1d8:	d1 2c       	mov	r13, r1
     1da:	85 eb       	ldi	r24, 0xB5	; 181
     1dc:	e8 2e       	mov	r14, r24
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	f8 2e       	mov	r15, r24
     1e2:	8f 01       	movw	r16, r30
     1e4:	20 e0       	ldi	r18, 0x00	; 0
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	a9 01       	movw	r20, r18
     1ea:	6a e5       	ldi	r22, 0x5A	; 90
     1ec:	72 e6       	ldi	r23, 0x62	; 98
     1ee:	82 e0       	ldi	r24, 0x02	; 2
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
}
     1f6:	1f 91       	pop	r17
     1f8:	0f 91       	pop	r16
     1fa:	ff 90       	pop	r15
     1fc:	ef 90       	pop	r14
     1fe:	df 90       	pop	r13
     200:	cf 90       	pop	r12
     202:	08 95       	ret
}

// Moves car from queue (dependent on dir) to bridge
int deQueuer(Handler *self, int dir){
	if (dir){
		self->northQueue--;
     204:	84 85       	ldd	r24, Z+12	; 0x0c
     206:	95 85       	ldd	r25, Z+13	; 0x0d
     208:	01 97       	sbiw	r24, 0x01	; 1
     20a:	95 87       	std	Z+13, r25	; 0x0d
     20c:	84 87       	std	Z+12, r24	; 0x0c
     20e:	de cf       	rjmp	.-68     	; 0x1cc <deQueuer+0x1c>

00000210 <switcher>:
	ASYNC(self, updateDisplay, NULL);
	ASYNC(self, switcher, NULL);
}

// Determines how and when to signal green on either side
int switcher (Handler *self) {
     210:	cf 92       	push	r12
     212:	df 92       	push	r13
     214:	ef 92       	push	r14
     216:	ff 92       	push	r15
     218:	0f 93       	push	r16
     21a:	1f 93       	push	r17
     21c:	cf 93       	push	r28
     21e:	df 93       	push	r29
     220:	ec 01       	movw	r28, r24
	if (self->isNorth) {
     222:	88 85       	ldd	r24, Y+8	; 0x08
     224:	99 85       	ldd	r25, Y+9	; 0x09
     226:	89 2b       	or	r24, r25
     228:	09 f4       	brne	.+2      	; 0x22c <switcher+0x1c>
     22a:	42 c0       	rjmp	.+132    	; 0x2b0 <switcher+0xa0>
		if (self->northQueue && self->counter < 5) {
     22c:	8c 85       	ldd	r24, Y+12	; 0x0c
     22e:	9d 85       	ldd	r25, Y+13	; 0x0d
     230:	89 2b       	or	r24, r25
     232:	09 f0       	breq	.+2      	; 0x236 <switcher+0x26>
     234:	8e c0       	rjmp	.+284    	; 0x352 <switcher+0x142>
			ASYNC(self->com, transmit, 0b1001);				// Green north
		}
		else {
			if (self->southQueue && self->onBridge == 0) {
     236:	8a 85       	ldd	r24, Y+10	; 0x0a
     238:	9b 85       	ldd	r25, Y+11	; 0x0b
     23a:	89 2b       	or	r24, r25
     23c:	09 f0       	breq	.+2      	; 0x240 <switcher+0x30>
     23e:	a0 c0       	rjmp	.+320    	; 0x380 <switcher+0x170>
				self->counter = 0;
				self->isNorth = 0;
				ASYNC(self->com, transmit, 0b0110);			// Green south
			}
			if (!(self->southQueue) && self->counter == 5 && self->onBridge < 5) {
     240:	88 89       	ldd	r24, Y+16	; 0x10
     242:	99 89       	ldd	r25, Y+17	; 0x11
     244:	05 97       	sbiw	r24, 0x05	; 5
     246:	09 f4       	brne	.+2      	; 0x24a <switcher+0x3a>
     248:	bb c0       	rjmp	.+374    	; 0x3c0 <switcher+0x1b0>
			if (!(self->northQueue) && self->counter == 5 && self->onBridge < 5) {
				self->counter--;
				ASYNC(self->com, transmit, 0b0110);			// Green south
			}
			else {
				if (test) {
     24a:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <test>
     24e:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <test+0x1>
     252:	00 97       	sbiw	r24, 0x00	; 0
     254:	11 f0       	breq	.+4      	; 0x25a <switcher+0x4a>
					ABORT(test);
     256:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <ABORT>
				}
				ASYNC(self->com, transmit, 0b0000);
     25a:	0c 81       	ldd	r16, Y+4	; 0x04
     25c:	1d 81       	ldd	r17, Y+5	; 0x05
     25e:	c1 2c       	mov	r12, r1
     260:	d1 2c       	mov	r13, r1
     262:	8d e4       	ldi	r24, 0x4D	; 77
     264:	e8 2e       	mov	r14, r24
     266:	80 e0       	ldi	r24, 0x00	; 0
     268:	f8 2e       	mov	r15, r24
     26a:	20 e0       	ldi	r18, 0x00	; 0
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	a9 01       	movw	r20, r18
     270:	60 e0       	ldi	r22, 0x00	; 0
     272:	70 e0       	ldi	r23, 0x00	; 0
     274:	cb 01       	movw	r24, r22
     276:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
				test = AFTER(MSEC(1250), self, switcher, NULL);	// NOTE: time needs to be above 1 second to be sure that the update has happend
     27a:	98 e0       	ldi	r25, 0x08	; 8
     27c:	e9 2e       	mov	r14, r25
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	f9 2e       	mov	r15, r25
     282:	8e 01       	movw	r16, r28
     284:	20 e0       	ldi	r18, 0x00	; 0
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	a9 01       	movw	r20, r18
     28a:	66 e9       	ldi	r22, 0x96	; 150
     28c:	78 e9       	ldi	r23, 0x98	; 152
     28e:	80 e0       	ldi	r24, 0x00	; 0
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
     296:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <test+0x1>
     29a:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <test>
			}
		}
	}
}
     29e:	df 91       	pop	r29
     2a0:	cf 91       	pop	r28
     2a2:	1f 91       	pop	r17
     2a4:	0f 91       	pop	r16
     2a6:	ff 90       	pop	r15
     2a8:	ef 90       	pop	r14
     2aa:	df 90       	pop	r13
     2ac:	cf 90       	pop	r12
     2ae:	08 95       	ret
				test = AFTER(MSEC(1250), self, switcher, NULL);	// NOTE: time needs to be above 1 second to be sure that the update has happend
			}
		}
	}
	else {
		if (self->southQueue && self->counter < 5) {
     2b0:	8a 85       	ldd	r24, Y+10	; 0x0a
     2b2:	9b 85       	ldd	r25, Y+11	; 0x0b
     2b4:	89 2b       	or	r24, r25
     2b6:	19 f5       	brne	.+70     	; 0x2fe <switcher+0xee>
			ASYNC(self->com, transmit, 0b0110);				// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
     2b8:	8c 85       	ldd	r24, Y+12	; 0x0c
     2ba:	9d 85       	ldd	r25, Y+13	; 0x0d
     2bc:	89 2b       	or	r24, r25
     2be:	39 f5       	brne	.+78     	; 0x30e <switcher+0xfe>
				self->counter = 0;
				self->isNorth = 1;
				ASYNC(self->com, transmit, 0b1001);			// Green north 
			}
			if (!(self->northQueue) && self->counter == 5 && self->onBridge < 5) {
     2c0:	88 89       	ldd	r24, Y+16	; 0x10
     2c2:	99 89       	ldd	r25, Y+17	; 0x11
     2c4:	05 97       	sbiw	r24, 0x05	; 5
     2c6:	09 f6       	brne	.-126    	; 0x24a <switcher+0x3a>
     2c8:	8e 85       	ldd	r24, Y+14	; 0x0e
     2ca:	9f 85       	ldd	r25, Y+15	; 0x0f
     2cc:	05 97       	sbiw	r24, 0x05	; 5
     2ce:	0c f0       	brlt	.+2      	; 0x2d2 <switcher+0xc2>
     2d0:	bc cf       	rjmp	.-136    	; 0x24a <switcher+0x3a>
				self->counter--;
     2d2:	84 e0       	ldi	r24, 0x04	; 4
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	99 8b       	std	Y+17, r25	; 0x11
     2d8:	88 8b       	std	Y+16, r24	; 0x10
				ASYNC(self->com, transmit, 0b0110);			// Green south
     2da:	0c 81       	ldd	r16, Y+4	; 0x04
     2dc:	1d 81       	ldd	r17, Y+5	; 0x05
     2de:	26 e0       	ldi	r18, 0x06	; 6
     2e0:	c2 2e       	mov	r12, r18
     2e2:	d1 2c       	mov	r13, r1
     2e4:	3d e4       	ldi	r19, 0x4D	; 77
     2e6:	e3 2e       	mov	r14, r19
     2e8:	30 e0       	ldi	r19, 0x00	; 0
     2ea:	f3 2e       	mov	r15, r19
     2ec:	20 e0       	ldi	r18, 0x00	; 0
     2ee:	30 e0       	ldi	r19, 0x00	; 0
     2f0:	a9 01       	movw	r20, r18
     2f2:	60 e0       	ldi	r22, 0x00	; 0
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	cb 01       	movw	r24, r22
     2f8:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
     2fc:	d0 cf       	rjmp	.-96     	; 0x29e <switcher+0x8e>
				test = AFTER(MSEC(1250), self, switcher, NULL);	// NOTE: time needs to be above 1 second to be sure that the update has happend
			}
		}
	}
	else {
		if (self->southQueue && self->counter < 5) {
     2fe:	88 89       	ldd	r24, Y+16	; 0x10
     300:	99 89       	ldd	r25, Y+17	; 0x11
     302:	05 97       	sbiw	r24, 0x05	; 5
     304:	54 f3       	brlt	.-44     	; 0x2da <switcher+0xca>
			ASYNC(self->com, transmit, 0b0110);				// Green south
		}
		else {
			if (self->northQueue && self->onBridge == 0) {
     306:	8c 85       	ldd	r24, Y+12	; 0x0c
     308:	9d 85       	ldd	r25, Y+13	; 0x0d
     30a:	89 2b       	or	r24, r25
     30c:	c9 f2       	breq	.-78     	; 0x2c0 <switcher+0xb0>
     30e:	8e 85       	ldd	r24, Y+14	; 0x0e
     310:	9f 85       	ldd	r25, Y+15	; 0x0f
     312:	89 2b       	or	r24, r25
     314:	09 f0       	breq	.+2      	; 0x318 <switcher+0x108>
     316:	99 cf       	rjmp	.-206    	; 0x24a <switcher+0x3a>
				self->counter = 0;
     318:	19 8a       	std	Y+17, r1	; 0x11
     31a:	18 8a       	std	Y+16, r1	; 0x10
				self->isNorth = 1;
     31c:	81 e0       	ldi	r24, 0x01	; 1
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	99 87       	std	Y+9, r25	; 0x09
     322:	88 87       	std	Y+8, r24	; 0x08
				ASYNC(self->com, transmit, 0b1001);			// Green north 
     324:	0c 81       	ldd	r16, Y+4	; 0x04
     326:	1d 81       	ldd	r17, Y+5	; 0x05
     328:	49 e0       	ldi	r20, 0x09	; 9
     32a:	c4 2e       	mov	r12, r20
     32c:	d1 2c       	mov	r13, r1
     32e:	5d e4       	ldi	r21, 0x4D	; 77
     330:	e5 2e       	mov	r14, r21
     332:	50 e0       	ldi	r21, 0x00	; 0
     334:	f5 2e       	mov	r15, r21
     336:	20 e0       	ldi	r18, 0x00	; 0
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	a9 01       	movw	r20, r18
     33c:	60 e0       	ldi	r22, 0x00	; 0
     33e:	70 e0       	ldi	r23, 0x00	; 0
     340:	cb 01       	movw	r24, r22
     342:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
			}
			if (!(self->northQueue) && self->counter == 5 && self->onBridge < 5) {
     346:	8c 85       	ldd	r24, Y+12	; 0x0c
     348:	9d 85       	ldd	r25, Y+13	; 0x0d
     34a:	89 2b       	or	r24, r25
     34c:	09 f0       	breq	.+2      	; 0x350 <switcher+0x140>
     34e:	7d cf       	rjmp	.-262    	; 0x24a <switcher+0x3a>
     350:	b7 cf       	rjmp	.-146    	; 0x2c0 <switcher+0xb0>
}

// Determines how and when to signal green on either side
int switcher (Handler *self) {
	if (self->isNorth) {
		if (self->northQueue && self->counter < 5) {
     352:	88 89       	ldd	r24, Y+16	; 0x10
     354:	99 89       	ldd	r25, Y+17	; 0x11
     356:	05 97       	sbiw	r24, 0x05	; 5
     358:	0c f0       	brlt	.+2      	; 0x35c <switcher+0x14c>
     35a:	6d cf       	rjmp	.-294    	; 0x236 <switcher+0x26>
				self->isNorth = 0;
				ASYNC(self->com, transmit, 0b0110);			// Green south
			}
			if (!(self->southQueue) && self->counter == 5 && self->onBridge < 5) {
				self->counter--;
				ASYNC(self->com, transmit, 0b1001);			// Green north
     35c:	0c 81       	ldd	r16, Y+4	; 0x04
     35e:	1d 81       	ldd	r17, Y+5	; 0x05
     360:	69 e0       	ldi	r22, 0x09	; 9
     362:	c6 2e       	mov	r12, r22
     364:	d1 2c       	mov	r13, r1
     366:	7d e4       	ldi	r23, 0x4D	; 77
     368:	e7 2e       	mov	r14, r23
     36a:	70 e0       	ldi	r23, 0x00	; 0
     36c:	f7 2e       	mov	r15, r23
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	a9 01       	movw	r20, r18
     374:	60 e0       	ldi	r22, 0x00	; 0
     376:	70 e0       	ldi	r23, 0x00	; 0
     378:	cb 01       	movw	r24, r22
     37a:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
     37e:	8f cf       	rjmp	.-226    	; 0x29e <switcher+0x8e>
	if (self->isNorth) {
		if (self->northQueue && self->counter < 5) {
			ASYNC(self->com, transmit, 0b1001);				// Green north
		}
		else {
			if (self->southQueue && self->onBridge == 0) {
     380:	8e 85       	ldd	r24, Y+14	; 0x0e
     382:	9f 85       	ldd	r25, Y+15	; 0x0f
     384:	89 2b       	or	r24, r25
     386:	09 f0       	breq	.+2      	; 0x38a <switcher+0x17a>
     388:	60 cf       	rjmp	.-320    	; 0x24a <switcher+0x3a>
				self->counter = 0;
     38a:	19 8a       	std	Y+17, r1	; 0x11
     38c:	18 8a       	std	Y+16, r1	; 0x10
				self->isNorth = 0;
     38e:	19 86       	std	Y+9, r1	; 0x09
     390:	18 86       	std	Y+8, r1	; 0x08
				ASYNC(self->com, transmit, 0b0110);			// Green south
     392:	0c 81       	ldd	r16, Y+4	; 0x04
     394:	1d 81       	ldd	r17, Y+5	; 0x05
     396:	e6 e0       	ldi	r30, 0x06	; 6
     398:	ce 2e       	mov	r12, r30
     39a:	d1 2c       	mov	r13, r1
     39c:	fd e4       	ldi	r31, 0x4D	; 77
     39e:	ef 2e       	mov	r14, r31
     3a0:	f0 e0       	ldi	r31, 0x00	; 0
     3a2:	ff 2e       	mov	r15, r31
     3a4:	20 e0       	ldi	r18, 0x00	; 0
     3a6:	30 e0       	ldi	r19, 0x00	; 0
     3a8:	a9 01       	movw	r20, r18
     3aa:	60 e0       	ldi	r22, 0x00	; 0
     3ac:	70 e0       	ldi	r23, 0x00	; 0
     3ae:	cb 01       	movw	r24, r22
     3b0:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
			}
			if (!(self->southQueue) && self->counter == 5 && self->onBridge < 5) {
     3b4:	8a 85       	ldd	r24, Y+10	; 0x0a
     3b6:	9b 85       	ldd	r25, Y+11	; 0x0b
     3b8:	89 2b       	or	r24, r25
     3ba:	09 f0       	breq	.+2      	; 0x3be <switcher+0x1ae>
     3bc:	46 cf       	rjmp	.-372    	; 0x24a <switcher+0x3a>
     3be:	40 cf       	rjmp	.-384    	; 0x240 <switcher+0x30>
     3c0:	8e 85       	ldd	r24, Y+14	; 0x0e
     3c2:	9f 85       	ldd	r25, Y+15	; 0x0f
     3c4:	05 97       	sbiw	r24, 0x05	; 5
     3c6:	0c f0       	brlt	.+2      	; 0x3ca <switcher+0x1ba>
     3c8:	40 cf       	rjmp	.-384    	; 0x24a <switcher+0x3a>
				self->counter--;
     3ca:	84 e0       	ldi	r24, 0x04	; 4
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	99 8b       	std	Y+17, r25	; 0x11
     3d0:	88 8b       	std	Y+16, r24	; 0x10
     3d2:	c4 cf       	rjmp	.-120    	; 0x35c <switcher+0x14c>

000003d4 <readValue>:
	//ASYNC(self, updateDisplay, NULL);	// <-- Unnecessary line? Should remove and test
	AFTER(MSEC(5000), self, reduceBridge, NULL);
}

// Reads incoming data and changes variables accordingly
int readValue(Handler *self, int value) {
     3d4:	cf 92       	push	r12
     3d6:	df 92       	push	r13
     3d8:	ef 92       	push	r14
     3da:	ff 92       	push	r15
     3dc:	0f 93       	push	r16
     3de:	1f 93       	push	r17
     3e0:	cf 93       	push	r28
     3e2:	df 93       	push	r29
     3e4:	ec 01       	movw	r28, r24
	if (value == 1) {			// Car enters northQueue
     3e6:	61 30       	cpi	r22, 0x01	; 1
     3e8:	71 05       	cpc	r23, r1
     3ea:	09 f4       	brne	.+2      	; 0x3ee <readValue+0x1a>
     3ec:	48 c0       	rjmp	.+144    	; 0x47e <__DATA_REGION_LENGTH__+0x7e>
		self->northQueue++;
	}
	if (value == 2) {			// Car enters bridge from north
     3ee:	62 30       	cpi	r22, 0x02	; 2
     3f0:	71 05       	cpc	r23, r1
     3f2:	09 f4       	brne	.+2      	; 0x3f6 <readValue+0x22>
     3f4:	4a c0       	rjmp	.+148    	; 0x48a <__DATA_REGION_LENGTH__+0x8a>
		self->counter++;
		ASYNC(self, deQueuer, 1);
	}
	if (value == 4) {			// Car enters southQueue
     3f6:	64 30       	cpi	r22, 0x04	; 4
     3f8:	71 05       	cpc	r23, r1
     3fa:	c1 f0       	breq	.+48     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
		self->southQueue++;
	}
	if (value == 8) {			// Car enters bridge from south
     3fc:	68 30       	cpi	r22, 0x08	; 8
     3fe:	71 05       	cpc	r23, r1
     400:	d1 f4       	brne	.+52     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
		self->counter++;		
     402:	88 89       	ldd	r24, Y+16	; 0x10
     404:	99 89       	ldd	r25, Y+17	; 0x11
     406:	01 96       	adiw	r24, 0x01	; 1
     408:	99 8b       	std	Y+17, r25	; 0x11
     40a:	88 8b       	std	Y+16, r24	; 0x10
		ASYNC(self, deQueuer, 0);
     40c:	c1 2c       	mov	r12, r1
     40e:	d1 2c       	mov	r13, r1
     410:	28 ed       	ldi	r18, 0xD8	; 216
     412:	e2 2e       	mov	r14, r18
     414:	20 e0       	ldi	r18, 0x00	; 0
     416:	f2 2e       	mov	r15, r18
     418:	8e 01       	movw	r16, r28
     41a:	20 e0       	ldi	r18, 0x00	; 0
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	a9 01       	movw	r20, r18
     420:	60 e0       	ldi	r22, 0x00	; 0
     422:	70 e0       	ldi	r23, 0x00	; 0
     424:	cb 01       	movw	r24, r22
     426:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
     42a:	05 c0       	rjmp	.+10     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
	if (value == 2) {			// Car enters bridge from north
		self->counter++;
		ASYNC(self, deQueuer, 1);
	}
	if (value == 4) {			// Car enters southQueue
		self->southQueue++;
     42c:	8a 85       	ldd	r24, Y+10	; 0x0a
     42e:	9b 85       	ldd	r25, Y+11	; 0x0b
     430:	01 96       	adiw	r24, 0x01	; 1
     432:	9b 87       	std	Y+11, r25	; 0x0b
     434:	8a 87       	std	Y+10, r24	; 0x0a
	}
	if (value == 8) {			// Car enters bridge from south
		self->counter++;		
		ASYNC(self, deQueuer, 0);
	}
	ASYNC(self, updateDisplay, NULL);
     436:	c1 2c       	mov	r12, r1
     438:	d1 2c       	mov	r13, r1
     43a:	84 e5       	ldi	r24, 0x54	; 84
     43c:	e8 2e       	mov	r14, r24
     43e:	80 e0       	ldi	r24, 0x00	; 0
     440:	f8 2e       	mov	r15, r24
     442:	8e 01       	movw	r16, r28
     444:	20 e0       	ldi	r18, 0x00	; 0
     446:	30 e0       	ldi	r19, 0x00	; 0
     448:	a9 01       	movw	r20, r18
     44a:	60 e0       	ldi	r22, 0x00	; 0
     44c:	70 e0       	ldi	r23, 0x00	; 0
     44e:	cb 01       	movw	r24, r22
     450:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
	ASYNC(self, switcher, NULL);
     454:	98 e0       	ldi	r25, 0x08	; 8
     456:	e9 2e       	mov	r14, r25
     458:	91 e0       	ldi	r25, 0x01	; 1
     45a:	f9 2e       	mov	r15, r25
     45c:	20 e0       	ldi	r18, 0x00	; 0
     45e:	30 e0       	ldi	r19, 0x00	; 0
     460:	a9 01       	movw	r20, r18
     462:	60 e0       	ldi	r22, 0x00	; 0
     464:	70 e0       	ldi	r23, 0x00	; 0
     466:	cb 01       	movw	r24, r22
     468:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
}
     46c:	df 91       	pop	r29
     46e:	cf 91       	pop	r28
     470:	1f 91       	pop	r17
     472:	0f 91       	pop	r16
     474:	ff 90       	pop	r15
     476:	ef 90       	pop	r14
     478:	df 90       	pop	r13
     47a:	cf 90       	pop	r12
     47c:	08 95       	ret
}

// Reads incoming data and changes variables accordingly
int readValue(Handler *self, int value) {
	if (value == 1) {			// Car enters northQueue
		self->northQueue++;
     47e:	8c 85       	ldd	r24, Y+12	; 0x0c
     480:	9d 85       	ldd	r25, Y+13	; 0x0d
     482:	01 96       	adiw	r24, 0x01	; 1
     484:	9d 87       	std	Y+13, r25	; 0x0d
     486:	8c 87       	std	Y+12, r24	; 0x0c
     488:	d6 cf       	rjmp	.-84     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
	}
	if (value == 2) {			// Car enters bridge from north
		self->counter++;
     48a:	88 89       	ldd	r24, Y+16	; 0x10
     48c:	99 89       	ldd	r25, Y+17	; 0x11
     48e:	01 96       	adiw	r24, 0x01	; 1
     490:	99 8b       	std	Y+17, r25	; 0x11
     492:	88 8b       	std	Y+16, r24	; 0x10
		ASYNC(self, deQueuer, 1);
     494:	cc 24       	eor	r12, r12
     496:	c3 94       	inc	r12
     498:	d1 2c       	mov	r13, r1
     49a:	ba cf       	rjmp	.-140    	; 0x410 <__DATA_REGION_LENGTH__+0x10>

0000049c <Init>:
#define BAUD 9600
#define MYUBRR ((FOSC/(16UL*BAUD))-1)

// Just what you woud expect, all things needed for initialization
void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
     49c:	e1 e6       	ldi	r30, 0x61	; 97
     49e:	f0 e0       	ldi	r31, 0x00	; 0
     4a0:	80 e8       	ldi	r24, 0x80	; 128
     4a2:	80 83       	st	Z, r24
	CLKPR = 0x00;
     4a4:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     4a6:	8f e0       	ldi	r24, 0x0F	; 15
     4a8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     4ac:	87 eb       	ldi	r24, 0xB7	; 183
     4ae:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     4b2:	87 e0       	ldi	r24, 0x07	; 7
     4b4:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     4b8:	80 ec       	ldi	r24, 0xC0	; 192
     4ba:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// ------------------------- Stuffs for communication -------------------------------------------------
	
	/* Set baud rate */
	UBRR0H = (uint8_t)(MYUBRR<<8);
     4be:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (uint8_t)(MYUBRR);
     4c2:	83 e3       	ldi	r24, 0x33	; 51
     4c4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	/* Enable receiver and transmitter */
	UCSR0B = (1<<TXEN0) | (1<<RXEN0) | (1<<RXCIE0);
     4c8:	88 e9       	ldi	r24, 0x98	; 152
     4ca:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
     4ce:	08 95       	ret

000004d0 <interrupter>:

#include <avr/io.h>
#include "InterruptHandler.h"

// Simply calls readvalue. (We want this seperate object since multiple interrupts can happen in short proximity or simultaneously)
int interrupter(InterruptHandler *self) {
     4d0:	cf 92       	push	r12
     4d2:	df 92       	push	r13
     4d4:	ef 92       	push	r14
     4d6:	ff 92       	push	r15
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
	ASYNC(self->handler, readValue, UDR0);
     4dc:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     4e0:	d1 2c       	mov	r13, r1
     4e2:	fc 01       	movw	r30, r24
     4e4:	04 81       	ldd	r16, Z+4	; 0x04
     4e6:	15 81       	ldd	r17, Z+5	; 0x05
     4e8:	8a ee       	ldi	r24, 0xEA	; 234
     4ea:	e8 2e       	mov	r14, r24
     4ec:	81 e0       	ldi	r24, 0x01	; 1
     4ee:	f8 2e       	mov	r15, r24
     4f0:	20 e0       	ldi	r18, 0x00	; 0
     4f2:	30 e0       	ldi	r19, 0x00	; 0
     4f4:	a9 01       	movw	r20, r18
     4f6:	60 e0       	ldi	r22, 0x00	; 0
     4f8:	70 e0       	ldi	r23, 0x00	; 0
     4fa:	cb 01       	movw	r24, r22
     4fc:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
	return 0;
     500:	80 e0       	ldi	r24, 0x00	; 0
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	1f 91       	pop	r17
     506:	0f 91       	pop	r16
     508:	ff 90       	pop	r15
     50a:	ef 90       	pop	r14
     50c:	df 90       	pop	r13
     50e:	cf 90       	pop	r12
     510:	08 95       	ret

00000512 <removeOldChar.part.0>:
};

// Switches between two segments 
void switchSegment() {
    LCDDR13 = !(LCDDR13 & 1);
    LCDDR18 = !(LCDDR18 & 1);
     512:	fc 01       	movw	r30, r24
     514:	20 81       	ld	r18, Z
     516:	29 70       	andi	r18, 0x09	; 9
     518:	20 83       	st	Z, r18
     51a:	35 96       	adiw	r30, 0x05	; 5
     51c:	9c 01       	movw	r18, r24
     51e:	2c 5e       	subi	r18, 0xEC	; 236
     520:	3f 4f       	sbci	r19, 0xFF	; 255
     522:	90 81       	ld	r25, Z
     524:	9f 70       	andi	r25, 0x0F	; 15
     526:	90 83       	st	Z, r25
     528:	35 96       	adiw	r30, 0x05	; 5
     52a:	e2 17       	cp	r30, r18
     52c:	f3 07       	cpc	r31, r19
     52e:	c9 f7       	brne	.-14     	; 0x522 <removeOldChar.part.0+0x10>
     530:	08 95       	ret

00000532 <displayChar>:
     532:	cf 93       	push	r28
     534:	df 93       	push	r29
     536:	00 d0       	rcall	.+0      	; 0x538 <displayChar+0x6>
     538:	00 d0       	rcall	.+0      	; 0x53a <displayChar+0x8>
     53a:	cd b7       	in	r28, 0x3d	; 61
     53c:	de b7       	in	r29, 0x3e	; 62
     53e:	da 01       	movw	r26, r20
     540:	90 ed       	ldi	r25, 0xD0	; 208
     542:	98 0f       	add	r25, r24
     544:	9a 30       	cpi	r25, 0x0A	; 10
     546:	e8 f1       	brcs	.+122    	; 0x5c2 <displayChar+0x90>
     548:	89 e0       	ldi	r24, 0x09	; 9
     54a:	89 83       	std	Y+1, r24	; 0x01
     54c:	8f e0       	ldi	r24, 0x0F	; 15
     54e:	8a 83       	std	Y+2, r24	; 0x02
     550:	8b 83       	std	Y+3, r24	; 0x03
     552:	8c 83       	std	Y+4, r24	; 0x04
     554:	99 e0       	ldi	r25, 0x09	; 9
     556:	66 23       	and	r22, r22
     558:	99 f0       	breq	.+38     	; 0x580 <displayChar+0x4e>
     55a:	fe 01       	movw	r30, r28
     55c:	31 96       	adiw	r30, 0x01	; 1
     55e:	9e 01       	movw	r18, r28
     560:	2b 5f       	subi	r18, 0xFB	; 251
     562:	3f 4f       	sbci	r19, 0xFF	; 255
     564:	92 95       	swap	r25
     566:	90 7f       	andi	r25, 0xF0	; 240
     568:	91 93       	st	Z+, r25
     56a:	2e 17       	cp	r18, r30
     56c:	3f 07       	cpc	r19, r31
     56e:	39 f0       	breq	.+14     	; 0x57e <displayChar+0x4c>
     570:	90 81       	ld	r25, Z
     572:	92 95       	swap	r25
     574:	90 7f       	andi	r25, 0xF0	; 240
     576:	91 93       	st	Z+, r25
     578:	2e 17       	cp	r18, r30
     57a:	3f 07       	cpc	r19, r31
     57c:	c9 f7       	brne	.-14     	; 0x570 <displayChar+0x3e>
     57e:	99 81       	ldd	r25, Y+1	; 0x01
     580:	8c 91       	ld	r24, X
     582:	98 2b       	or	r25, r24
     584:	9c 93       	st	X, r25
     586:	15 96       	adiw	r26, 0x05	; 5
     588:	9c 91       	ld	r25, X
     58a:	15 97       	sbiw	r26, 0x05	; 5
     58c:	8a 81       	ldd	r24, Y+2	; 0x02
     58e:	89 2b       	or	r24, r25
     590:	15 96       	adiw	r26, 0x05	; 5
     592:	8c 93       	st	X, r24
     594:	15 97       	sbiw	r26, 0x05	; 5
     596:	1a 96       	adiw	r26, 0x0a	; 10
     598:	9c 91       	ld	r25, X
     59a:	1a 97       	sbiw	r26, 0x0a	; 10
     59c:	8b 81       	ldd	r24, Y+3	; 0x03
     59e:	89 2b       	or	r24, r25
     5a0:	1a 96       	adiw	r26, 0x0a	; 10
     5a2:	8c 93       	st	X, r24
     5a4:	1a 97       	sbiw	r26, 0x0a	; 10
     5a6:	1f 96       	adiw	r26, 0x0f	; 15
     5a8:	9c 91       	ld	r25, X
     5aa:	1f 97       	sbiw	r26, 0x0f	; 15
     5ac:	8c 81       	ldd	r24, Y+4	; 0x04
     5ae:	89 2b       	or	r24, r25
     5b0:	1f 96       	adiw	r26, 0x0f	; 15
     5b2:	8c 93       	st	X, r24
     5b4:	0f 90       	pop	r0
     5b6:	0f 90       	pop	r0
     5b8:	0f 90       	pop	r0
     5ba:	0f 90       	pop	r0
     5bc:	df 91       	pop	r29
     5be:	cf 91       	pop	r28
     5c0:	08 95       	ret
     5c2:	e8 2f       	mov	r30, r24
     5c4:	f0 e0       	ldi	r31, 0x00	; 0
     5c6:	ee 0f       	add	r30, r30
     5c8:	ff 1f       	adc	r31, r31
     5ca:	ee 0f       	add	r30, r30
     5cc:	ff 1f       	adc	r31, r31
     5ce:	e8 5b       	subi	r30, 0xB8	; 184
     5d0:	ff 4f       	sbci	r31, 0xFF	; 255
     5d2:	90 81       	ld	r25, Z
     5d4:	99 83       	std	Y+1, r25	; 0x01
     5d6:	81 81       	ldd	r24, Z+1	; 0x01
     5d8:	8a 83       	std	Y+2, r24	; 0x02
     5da:	82 81       	ldd	r24, Z+2	; 0x02
     5dc:	8b 83       	std	Y+3, r24	; 0x03
     5de:	83 81       	ldd	r24, Z+3	; 0x03
     5e0:	8c 83       	std	Y+4, r24	; 0x04
     5e2:	b9 cf       	rjmp	.-142    	; 0x556 <displayChar+0x24>

000005e4 <writeChar>:
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
     5e8:	cf 93       	push	r28
     5ea:	60 fd       	sbrc	r22, 0
     5ec:	1c c0       	rjmp	.+56     	; 0x626 <writeChar+0x42>
     5ee:	77 fd       	sbrc	r23, 7
     5f0:	30 c0       	rjmp	.+96     	; 0x652 <writeChar+0x6e>
     5f2:	75 95       	asr	r23
     5f4:	67 95       	ror	r22
     5f6:	ab 01       	movw	r20, r22
     5f8:	44 51       	subi	r20, 0x14	; 20
     5fa:	5f 4f       	sbci	r21, 0xFF	; 255
     5fc:	fa 01       	movw	r30, r20
     5fe:	90 81       	ld	r25, Z
     600:	90 79       	andi	r25, 0x90	; 144
     602:	90 83       	st	Z, r25
     604:	35 96       	adiw	r30, 0x05	; 5
     606:	9a 01       	movw	r18, r20
     608:	2c 5e       	subi	r18, 0xEC	; 236
     60a:	3f 4f       	sbci	r19, 0xFF	; 255
     60c:	90 81       	ld	r25, Z
     60e:	90 7f       	andi	r25, 0xF0	; 240
     610:	90 83       	st	Z, r25
     612:	35 96       	adiw	r30, 0x05	; 5
     614:	e2 17       	cp	r30, r18
     616:	f3 07       	cpc	r31, r19
     618:	c9 f7       	brne	.-14     	; 0x60c <writeChar+0x28>
     61a:	60 e0       	ldi	r22, 0x00	; 0
     61c:	cf 91       	pop	r28
     61e:	1f 91       	pop	r17
     620:	0f 91       	pop	r16
     622:	0c 94 99 02 	jmp	0x532	; 0x532 <displayChar>
     626:	ab 01       	movw	r20, r22
     628:	41 50       	subi	r20, 0x01	; 1
     62a:	51 09       	sbc	r21, r1
     62c:	57 fd       	sbrc	r21, 7
     62e:	14 c0       	rjmp	.+40     	; 0x658 <writeChar+0x74>
     630:	c8 2f       	mov	r28, r24
     632:	55 95       	asr	r21
     634:	47 95       	ror	r20
     636:	8a 01       	movw	r16, r20
     638:	04 51       	subi	r16, 0x14	; 20
     63a:	1f 4f       	sbci	r17, 0xFF	; 255
     63c:	c8 01       	movw	r24, r16
     63e:	0e 94 89 02 	call	0x512	; 0x512 <removeOldChar.part.0>
     642:	a8 01       	movw	r20, r16
     644:	61 e0       	ldi	r22, 0x01	; 1
     646:	8c 2f       	mov	r24, r28
     648:	cf 91       	pop	r28
     64a:	1f 91       	pop	r17
     64c:	0f 91       	pop	r16
     64e:	0c 94 99 02 	jmp	0x532	; 0x532 <displayChar>
     652:	6f 5f       	subi	r22, 0xFF	; 255
     654:	7f 4f       	sbci	r23, 0xFF	; 255
     656:	cd cf       	rjmp	.-102    	; 0x5f2 <writeChar+0xe>
     658:	ab 01       	movw	r20, r22
     65a:	ea cf       	rjmp	.-44     	; 0x630 <writeChar+0x4c>

0000065c <printAt>:
}
 
// Displays last two digits of num in pos and pos+1
int  printAt(Lcd *self, int input) {  // [pos, num]
     65c:	ef 92       	push	r14
     65e:	ff 92       	push	r15
     660:	0f 93       	push	r16
     662:	1f 93       	push	r17
     664:	cf 93       	push	r28
     666:	df 93       	push	r29
     668:	cb 01       	movw	r24, r22
    int pp = input % 10;
     66a:	0a e0       	ldi	r16, 0x0A	; 10
     66c:	10 e0       	ldi	r17, 0x00	; 0
     66e:	b8 01       	movw	r22, r16
     670:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__divmodhi4>
     674:	7b 01       	movw	r14, r22
     676:	ec 01       	movw	r28, r24
    int num = input / 10;
    writeChar((num % 100) / 10 + '0', pp);
     678:	cb 01       	movw	r24, r22
     67a:	64 e6       	ldi	r22, 0x64	; 100
     67c:	70 e0       	ldi	r23, 0x00	; 0
     67e:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__divmodhi4>
     682:	b8 01       	movw	r22, r16
     684:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__divmodhi4>
     688:	86 2f       	mov	r24, r22
     68a:	be 01       	movw	r22, r28
     68c:	80 5d       	subi	r24, 0xD0	; 208
     68e:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <writeChar>
    pp++;
    writeChar( num % 10 + '0', pp);
     692:	21 96       	adiw	r28, 0x01	; 1
     694:	c7 01       	movw	r24, r14
     696:	b8 01       	movw	r22, r16
     698:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__divmodhi4>
     69c:	be 01       	movw	r22, r28
     69e:	80 5d       	subi	r24, 0xD0	; 208
     6a0:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <writeChar>

    return 0;
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	df 91       	pop	r29
     6aa:	cf 91       	pop	r28
     6ac:	1f 91       	pop	r17
     6ae:	0f 91       	pop	r16
     6b0:	ff 90       	pop	r15
     6b2:	ef 90       	pop	r14
     6b4:	08 95       	ret

000006b6 <main>:
#include "Communication.h"
#include "Lcd.h"
#include "TinyTimber.h"
#include "InterruptHandler.h"

int main(void) {
     6b6:	cf 93       	push	r28
     6b8:	df 93       	push	r29
     6ba:	cd b7       	in	r28, 0x3d	; 61
     6bc:	de b7       	in	r29, 0x3e	; 62
     6be:	a0 97       	sbiw	r28, 0x20	; 32
     6c0:	0f b6       	in	r0, 0x3f	; 63
     6c2:	f8 94       	cli
     6c4:	de bf       	out	0x3e, r29	; 62
     6c6:	0f be       	out	0x3f, r0	; 63
     6c8:	cd bf       	out	0x3d, r28	; 61
    Init();
     6ca:	0e 94 4e 02 	call	0x49c	; 0x49c <Init>
	Lcd lcd = initLcd();
     6ce:	1e 8e       	std	Y+30, r1	; 0x1e
     6d0:	1d 8e       	std	Y+29, r1	; 0x1d
     6d2:	18 a2       	std	Y+32, r1	; 0x20
     6d4:	1f 8e       	std	Y+31, r1	; 0x1f
	Communication com = initCommunication();
     6d6:	1a 8e       	std	Y+26, r1	; 0x1a
     6d8:	19 8e       	std	Y+25, r1	; 0x19
     6da:	1c 8e       	std	Y+28, r1	; 0x1c
     6dc:	1b 8e       	std	Y+27, r1	; 0x1b
	Handler handler = initHandler(&com, &lcd);
     6de:	1a 82       	std	Y+2, r1	; 0x02
     6e0:	19 82       	std	Y+1, r1	; 0x01
     6e2:	1c 82       	std	Y+4, r1	; 0x04
     6e4:	1b 82       	std	Y+3, r1	; 0x03
     6e6:	ce 01       	movw	r24, r28
     6e8:	49 96       	adiw	r24, 0x19	; 25
     6ea:	9e 83       	std	Y+6, r25	; 0x06
     6ec:	8d 83       	std	Y+5, r24	; 0x05
     6ee:	04 96       	adiw	r24, 0x04	; 4
     6f0:	98 87       	std	Y+8, r25	; 0x08
     6f2:	8f 83       	std	Y+7, r24	; 0x07
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	9a 87       	std	Y+10, r25	; 0x0a
     6fa:	89 87       	std	Y+9, r24	; 0x09
     6fc:	1c 86       	std	Y+12, r1	; 0x0c
     6fe:	1b 86       	std	Y+11, r1	; 0x0b
     700:	1e 86       	std	Y+14, r1	; 0x0e
     702:	1d 86       	std	Y+13, r1	; 0x0d
     704:	18 8a       	std	Y+16, r1	; 0x10
     706:	1f 86       	std	Y+15, r1	; 0x0f
     708:	1a 8a       	std	Y+18, r1	; 0x12
     70a:	19 8a       	std	Y+17, r1	; 0x11
	InterruptHandler interruptHandler = initInterruptHandler(&handler);
     70c:	1c 8a       	std	Y+20, r1	; 0x14
     70e:	1b 8a       	std	Y+19, r1	; 0x13
     710:	1e 8a       	std	Y+22, r1	; 0x16
     712:	1d 8a       	std	Y+21, r1	; 0x15
     714:	ce 01       	movw	r24, r28
     716:	01 96       	adiw	r24, 0x01	; 1
     718:	98 8f       	std	Y+24, r25	; 0x18
     71a:	8f 8b       	std	Y+23, r24	; 0x17
	INSTALL(&interruptHandler, interrupter, IRQ_USART0_RX);
     71c:	48 e0       	ldi	r20, 0x08	; 8
     71e:	68 e6       	ldi	r22, 0x68	; 104
     720:	72 e0       	ldi	r23, 0x02	; 2
     722:	42 96       	adiw	r24, 0x12	; 18
     724:	0e 94 49 10 	call	0x2092	; 0x2092 <install>
	return tinytimber(NULL, NULL, NULL);
     728:	40 e0       	ldi	r20, 0x00	; 0
     72a:	50 e0       	ldi	r21, 0x00	; 0
     72c:	60 e0       	ldi	r22, 0x00	; 0
     72e:	70 e0       	ldi	r23, 0x00	; 0
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	0e 94 63 10 	call	0x20c6	; 0x20c6 <tinytimber>
}
     738:	a0 96       	adiw	r28, 0x20	; 32
     73a:	0f b6       	in	r0, 0x3f	; 63
     73c:	f8 94       	cli
     73e:	de bf       	out	0x3e, r29	; 62
     740:	0f be       	out	0x3f, r0	; 63
     742:	cd bf       	out	0x3d, r28	; 61
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	08 95       	ret

0000074a <initialize>:
    char status;
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	00 d0       	rcall	.+0      	; 0x750 <initialize+0x6>
     750:	00 d0       	rcall	.+0      	; 0x752 <initialize+0x8>
     752:	cd b7       	in	r28, 0x3d	; 61
     754:	de b7       	in	r29, 0x3e	; 62
     756:	8b e2       	ldi	r24, 0x2B	; 43
     758:	92 e0       	ldi	r25, 0x02	; 2
     75a:	2b e0       	ldi	r18, 0x0B	; 11
     75c:	33 e0       	ldi	r19, 0x03	; 3
     75e:	fc 01       	movw	r30, r24
     760:	70 97       	sbiw	r30, 0x10	; 16
     762:	91 83       	std	Z+1, r25	; 0x01
     764:	80 83       	st	Z, r24
     766:	40 96       	adiw	r24, 0x10	; 16
     768:	82 17       	cp	r24, r18
     76a:	93 07       	cpc	r25, r19
     76c:	c1 f7       	brne	.-16     	; 0x75e <initialize+0x14>
     76e:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     772:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     776:	e6 e6       	ldi	r30, 0x66	; 102
     778:	f1 e0       	ldi	r31, 0x01	; 1
     77a:	83 e8       	ldi	r24, 0x83	; 131
     77c:	91 e0       	ldi	r25, 0x01	; 1
     77e:	91 83       	std	Z+1, r25	; 0x01
     780:	80 83       	st	Z, r24
     782:	80 ea       	ldi	r24, 0xA0	; 160
     784:	91 e0       	ldi	r25, 0x01	; 1
     786:	96 8f       	std	Z+30, r25	; 0x1e
     788:	85 8f       	std	Z+29, r24	; 0x1d
     78a:	ad eb       	ldi	r26, 0xBD	; 189
     78c:	b1 e0       	ldi	r27, 0x01	; 1
     78e:	b3 af       	std	Z+59, r27	; 0x3b
     790:	a2 af       	std	Z+58, r26	; 0x3a
     792:	1d 92       	st	X+, r1
     794:	1c 92       	st	X, r1
     796:	fa 83       	std	Y+2, r31	; 0x02
     798:	e9 83       	std	Y+1, r30	; 0x01
     79a:	e7 e6       	ldi	r30, 0x67	; 103
     79c:	f3 e0       	ldi	r31, 0x03	; 3
     79e:	fc 83       	std	Y+4, r31	; 0x04
     7a0:	eb 83       	std	Y+3, r30	; 0x03
     7a2:	89 81       	ldd	r24, Y+1	; 0x01
     7a4:	9a 81       	ldd	r25, Y+2	; 0x02
     7a6:	06 96       	adiw	r24, 0x06	; 6
     7a8:	0e 94 a7 10 	call	0x214e	; 0x214e <setjmp>
     7ac:	8b 81       	ldd	r24, Y+3	; 0x03
     7ae:	9c 81       	ldd	r25, Y+4	; 0x04
     7b0:	e9 81       	ldd	r30, Y+1	; 0x01
     7b2:	fa 81       	ldd	r31, Y+2	; 0x02
     7b4:	97 8b       	std	Z+23, r25	; 0x17
     7b6:	86 8b       	std	Z+22, r24	; 0x16
     7b8:	91 8f       	std	Z+25, r25	; 0x19
     7ba:	80 8f       	std	Z+24, r24	; 0x18
     7bc:	88 e4       	ldi	r24, 0x48	; 72
     7be:	9f e0       	ldi	r25, 0x0F	; 15
     7c0:	94 8f       	std	Z+28, r25	; 0x1c
     7c2:	83 8f       	std	Z+27, r24	; 0x1b
     7c4:	15 82       	std	Z+5, r1	; 0x05
     7c6:	14 82       	std	Z+4, r1	; 0x04
     7c8:	7d 96       	adiw	r30, 0x1d	; 29
     7ca:	fa 83       	std	Y+2, r31	; 0x02
     7cc:	e9 83       	std	Y+1, r30	; 0x01
     7ce:	eb 81       	ldd	r30, Y+3	; 0x03
     7d0:	fc 81       	ldd	r31, Y+4	; 0x04
     7d2:	e0 5a       	subi	r30, 0xA0	; 160
     7d4:	ff 4f       	sbci	r31, 0xFF	; 255
     7d6:	fc 83       	std	Y+4, r31	; 0x04
     7d8:	eb 83       	std	Y+3, r30	; 0x03
     7da:	89 81       	ldd	r24, Y+1	; 0x01
     7dc:	9a 81       	ldd	r25, Y+2	; 0x02
     7de:	8a 5d       	subi	r24, 0xDA	; 218
     7e0:	91 40       	sbci	r25, 0x01	; 1
     7e2:	f9 f6       	brne	.-66     	; 0x7a2 <initialize+0x58>
     7e4:	ee ef       	ldi	r30, 0xFE	; 254
     7e6:	f1 e0       	ldi	r31, 0x01	; 1
     7e8:	11 82       	std	Z+1, r1	; 0x01
     7ea:	10 82       	st	Z, r1
     7ec:	15 82       	std	Z+5, r1	; 0x05
     7ee:	14 82       	std	Z+4, r1	; 0x04
     7f0:	13 82       	std	Z+3, r1	; 0x03
     7f2:	12 82       	std	Z+2, r1	; 0x02
     7f4:	e1 e6       	ldi	r30, 0x61	; 97
     7f6:	f0 e0       	ldi	r31, 0x00	; 0
     7f8:	80 e8       	ldi	r24, 0x80	; 128
     7fa:	80 83       	st	Z, r24
     7fc:	10 82       	st	Z, r1
     7fe:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     802:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     806:	84 e0       	ldi	r24, 0x04	; 4
     808:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     80c:	81 e0       	ldi	r24, 0x01	; 1
     80e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     812:	0f 90       	pop	r0
     814:	0f 90       	pop	r0
     816:	0f 90       	pop	r0
     818:	0f 90       	pop	r0
     81a:	df 91       	pop	r29
     81c:	cf 91       	pop	r28
     81e:	08 95       	ret

00000820 <dispatch>:
     820:	cf 93       	push	r28
     822:	df 93       	push	r29
     824:	00 d0       	rcall	.+0      	; 0x826 <dispatch+0x6>
     826:	cd b7       	in	r28, 0x3d	; 61
     828:	de b7       	in	r29, 0x3e	; 62
     82a:	9a 83       	std	Y+2, r25	; 0x02
     82c:	89 83       	std	Y+1, r24	; 0x01
     82e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     832:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     836:	06 96       	adiw	r24, 0x06	; 6
     838:	0e 94 a7 10 	call	0x214e	; 0x214e <setjmp>
     83c:	89 2b       	or	r24, r25
     83e:	29 f0       	breq	.+10     	; 0x84a <dispatch+0x2a>
     840:	0f 90       	pop	r0
     842:	0f 90       	pop	r0
     844:	df 91       	pop	r29
     846:	cf 91       	pop	r28
     848:	08 95       	ret
     84a:	89 81       	ldd	r24, Y+1	; 0x01
     84c:	9a 81       	ldd	r25, Y+2	; 0x02
     84e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     852:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     856:	61 e0       	ldi	r22, 0x01	; 1
     858:	70 e0       	ldi	r23, 0x00	; 0
     85a:	06 96       	adiw	r24, 0x06	; 6
     85c:	0e 94 c7 10 	call	0x218e	; 0x218e <longjmp>

00000860 <schedule>:
     860:	0f 93       	push	r16
     862:	1f 93       	push	r17
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
     868:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <msgQ>
     86c:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <msgQ+0x1>
     870:	30 97       	sbiw	r30, 0x00	; 0
     872:	f1 f0       	breq	.+60     	; 0x8b0 <schedule+0x50>
     874:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     878:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     87c:	00 97       	sbiw	r24, 0x00	; 0
     87e:	c1 f0       	breq	.+48     	; 0x8b0 <schedule+0x50>
     880:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     884:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     888:	aa 81       	ldd	r26, Y+2	; 0x02
     88a:	bb 81       	ldd	r27, Y+3	; 0x03
     88c:	10 97       	sbiw	r26, 0x00	; 0
     88e:	a9 f0       	breq	.+42     	; 0x8ba <schedule+0x5a>
     890:	46 81       	ldd	r20, Z+6	; 0x06
     892:	57 81       	ldd	r21, Z+7	; 0x07
     894:	60 85       	ldd	r22, Z+8	; 0x08
     896:	71 85       	ldd	r23, Z+9	; 0x09
     898:	16 96       	adiw	r26, 0x06	; 6
     89a:	0d 91       	ld	r16, X+
     89c:	1d 91       	ld	r17, X+
     89e:	2d 91       	ld	r18, X+
     8a0:	3c 91       	ld	r19, X
     8a2:	19 97       	sbiw	r26, 0x09	; 9
     8a4:	40 1b       	sub	r20, r16
     8a6:	51 0b       	sbc	r21, r17
     8a8:	62 0b       	sbc	r22, r18
     8aa:	73 0b       	sbc	r23, r19
     8ac:	77 fd       	sbrc	r23, 7
     8ae:	05 c0       	rjmp	.+10     	; 0x8ba <schedule+0x5a>
     8b0:	df 91       	pop	r29
     8b2:	cf 91       	pop	r28
     8b4:	1f 91       	pop	r17
     8b6:	0f 91       	pop	r16
     8b8:	08 95       	ret
     8ba:	fc 01       	movw	r30, r24
     8bc:	20 81       	ld	r18, Z
     8be:	31 81       	ldd	r19, Z+1	; 0x01
     8c0:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     8c4:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     8c8:	d1 83       	std	Z+1, r29	; 0x01
     8ca:	c0 83       	st	Z, r28
     8cc:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     8d0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     8d4:	df 91       	pop	r29
     8d6:	cf 91       	pop	r28
     8d8:	1f 91       	pop	r17
     8da:	0f 91       	pop	r16
     8dc:	0c 94 10 04 	jmp	0x820	; 0x820 <dispatch>

000008e0 <dequeue.part.0>:
     8e0:	8f ef       	ldi	r24, 0xFF	; 255
     8e2:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     8e6:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     8ea:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     8ee:	81 e0       	ldi	r24, 0x01	; 1
     8f0:	83 bf       	out	0x33, r24	; 51
     8f2:	88 95       	sleep
     8f4:	fd cf       	rjmp	.-6      	; 0x8f0 <dequeue.part.0+0x10>

000008f6 <__vector_1>:
     8f6:	1f 92       	push	r1
     8f8:	0f 92       	push	r0
     8fa:	0f b6       	in	r0, 0x3f	; 63
     8fc:	0f 92       	push	r0
     8fe:	11 24       	eor	r1, r1
     900:	2f 93       	push	r18
     902:	3f 93       	push	r19
     904:	4f 93       	push	r20
     906:	5f 93       	push	r21
     908:	6f 93       	push	r22
     90a:	7f 93       	push	r23
     90c:	8f 93       	push	r24
     90e:	9f 93       	push	r25
     910:	af 93       	push	r26
     912:	bf 93       	push	r27
     914:	ef 93       	push	r30
     916:	ff 93       	push	r31
     918:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     91c:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     920:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     924:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     928:	c9 01       	movw	r24, r18
     92a:	03 2e       	mov	r0, r19
     92c:	00 0c       	add	r0, r0
     92e:	aa 0b       	sbc	r26, r26
     930:	bb 0b       	sbc	r27, r27
     932:	dc 01       	movw	r26, r24
     934:	99 27       	eor	r25, r25
     936:	88 27       	eor	r24, r24
     938:	60 e0       	ldi	r22, 0x00	; 0
     93a:	70 e0       	ldi	r23, 0x00	; 0
     93c:	84 2b       	or	r24, r20
     93e:	95 2b       	or	r25, r21
     940:	a6 2b       	or	r26, r22
     942:	b7 2b       	or	r27, r23
     944:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     948:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     94c:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     950:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     954:	b0 9b       	sbis	0x16, 0	; 22
     956:	1b c0       	rjmp	.+54     	; 0x98e <__vector_1+0x98>
     958:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     95c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     960:	c9 01       	movw	r24, r18
     962:	01 96       	adiw	r24, 0x01	; 1
     964:	09 2e       	mov	r0, r25
     966:	00 0c       	add	r0, r0
     968:	aa 0b       	sbc	r26, r26
     96a:	bb 0b       	sbc	r27, r27
     96c:	dc 01       	movw	r26, r24
     96e:	99 27       	eor	r25, r25
     970:	88 27       	eor	r24, r24
     972:	60 e0       	ldi	r22, 0x00	; 0
     974:	70 e0       	ldi	r23, 0x00	; 0
     976:	84 2b       	or	r24, r20
     978:	95 2b       	or	r25, r21
     97a:	a6 2b       	or	r26, r22
     97c:	b7 2b       	or	r27, r23
     97e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     982:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     986:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     98a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     98e:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     992:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     996:	30 97       	sbiw	r30, 0x00	; 0
     998:	39 f0       	breq	.+14     	; 0x9a8 <__vector_1+0xb2>
     99a:	60 e0       	ldi	r22, 0x00	; 0
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     9a2:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     9a6:	09 95       	icall
     9a8:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
     9ac:	ff 91       	pop	r31
     9ae:	ef 91       	pop	r30
     9b0:	bf 91       	pop	r27
     9b2:	af 91       	pop	r26
     9b4:	9f 91       	pop	r25
     9b6:	8f 91       	pop	r24
     9b8:	7f 91       	pop	r23
     9ba:	6f 91       	pop	r22
     9bc:	5f 91       	pop	r21
     9be:	4f 91       	pop	r20
     9c0:	3f 91       	pop	r19
     9c2:	2f 91       	pop	r18
     9c4:	0f 90       	pop	r0
     9c6:	0f be       	out	0x3f, r0	; 63
     9c8:	0f 90       	pop	r0
     9ca:	1f 90       	pop	r1
     9cc:	18 95       	reti

000009ce <__vector_2>:
     9ce:	1f 92       	push	r1
     9d0:	0f 92       	push	r0
     9d2:	0f b6       	in	r0, 0x3f	; 63
     9d4:	0f 92       	push	r0
     9d6:	11 24       	eor	r1, r1
     9d8:	2f 93       	push	r18
     9da:	3f 93       	push	r19
     9dc:	4f 93       	push	r20
     9de:	5f 93       	push	r21
     9e0:	6f 93       	push	r22
     9e2:	7f 93       	push	r23
     9e4:	8f 93       	push	r24
     9e6:	9f 93       	push	r25
     9e8:	af 93       	push	r26
     9ea:	bf 93       	push	r27
     9ec:	ef 93       	push	r30
     9ee:	ff 93       	push	r31
     9f0:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     9f4:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     9f8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9fc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a00:	c9 01       	movw	r24, r18
     a02:	03 2e       	mov	r0, r19
     a04:	00 0c       	add	r0, r0
     a06:	aa 0b       	sbc	r26, r26
     a08:	bb 0b       	sbc	r27, r27
     a0a:	dc 01       	movw	r26, r24
     a0c:	99 27       	eor	r25, r25
     a0e:	88 27       	eor	r24, r24
     a10:	60 e0       	ldi	r22, 0x00	; 0
     a12:	70 e0       	ldi	r23, 0x00	; 0
     a14:	84 2b       	or	r24, r20
     a16:	95 2b       	or	r25, r21
     a18:	a6 2b       	or	r26, r22
     a1a:	b7 2b       	or	r27, r23
     a1c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     a20:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     a24:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     a28:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     a2c:	b0 9b       	sbis	0x16, 0	; 22
     a2e:	1b c0       	rjmp	.+54     	; 0xa66 <__vector_2+0x98>
     a30:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a34:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a38:	c9 01       	movw	r24, r18
     a3a:	01 96       	adiw	r24, 0x01	; 1
     a3c:	09 2e       	mov	r0, r25
     a3e:	00 0c       	add	r0, r0
     a40:	aa 0b       	sbc	r26, r26
     a42:	bb 0b       	sbc	r27, r27
     a44:	dc 01       	movw	r26, r24
     a46:	99 27       	eor	r25, r25
     a48:	88 27       	eor	r24, r24
     a4a:	60 e0       	ldi	r22, 0x00	; 0
     a4c:	70 e0       	ldi	r23, 0x00	; 0
     a4e:	84 2b       	or	r24, r20
     a50:	95 2b       	or	r25, r21
     a52:	a6 2b       	or	r26, r22
     a54:	b7 2b       	or	r27, r23
     a56:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     a5a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     a5e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     a62:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     a66:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     a6a:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     a6e:	30 97       	sbiw	r30, 0x00	; 0
     a70:	39 f0       	breq	.+14     	; 0xa80 <__vector_2+0xb2>
     a72:	61 e0       	ldi	r22, 0x01	; 1
     a74:	70 e0       	ldi	r23, 0x00	; 0
     a76:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     a7a:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     a7e:	09 95       	icall
     a80:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
     a84:	ff 91       	pop	r31
     a86:	ef 91       	pop	r30
     a88:	bf 91       	pop	r27
     a8a:	af 91       	pop	r26
     a8c:	9f 91       	pop	r25
     a8e:	8f 91       	pop	r24
     a90:	7f 91       	pop	r23
     a92:	6f 91       	pop	r22
     a94:	5f 91       	pop	r21
     a96:	4f 91       	pop	r20
     a98:	3f 91       	pop	r19
     a9a:	2f 91       	pop	r18
     a9c:	0f 90       	pop	r0
     a9e:	0f be       	out	0x3f, r0	; 63
     aa0:	0f 90       	pop	r0
     aa2:	1f 90       	pop	r1
     aa4:	18 95       	reti

00000aa6 <__vector_3>:
     aa6:	1f 92       	push	r1
     aa8:	0f 92       	push	r0
     aaa:	0f b6       	in	r0, 0x3f	; 63
     aac:	0f 92       	push	r0
     aae:	11 24       	eor	r1, r1
     ab0:	2f 93       	push	r18
     ab2:	3f 93       	push	r19
     ab4:	4f 93       	push	r20
     ab6:	5f 93       	push	r21
     ab8:	6f 93       	push	r22
     aba:	7f 93       	push	r23
     abc:	8f 93       	push	r24
     abe:	9f 93       	push	r25
     ac0:	af 93       	push	r26
     ac2:	bf 93       	push	r27
     ac4:	ef 93       	push	r30
     ac6:	ff 93       	push	r31
     ac8:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     acc:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     ad0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ad4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ad8:	c9 01       	movw	r24, r18
     ada:	03 2e       	mov	r0, r19
     adc:	00 0c       	add	r0, r0
     ade:	aa 0b       	sbc	r26, r26
     ae0:	bb 0b       	sbc	r27, r27
     ae2:	dc 01       	movw	r26, r24
     ae4:	99 27       	eor	r25, r25
     ae6:	88 27       	eor	r24, r24
     ae8:	60 e0       	ldi	r22, 0x00	; 0
     aea:	70 e0       	ldi	r23, 0x00	; 0
     aec:	84 2b       	or	r24, r20
     aee:	95 2b       	or	r25, r21
     af0:	a6 2b       	or	r26, r22
     af2:	b7 2b       	or	r27, r23
     af4:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     af8:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     afc:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     b00:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     b04:	b0 9b       	sbis	0x16, 0	; 22
     b06:	1b c0       	rjmp	.+54     	; 0xb3e <__vector_3+0x98>
     b08:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b0c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b10:	c9 01       	movw	r24, r18
     b12:	01 96       	adiw	r24, 0x01	; 1
     b14:	09 2e       	mov	r0, r25
     b16:	00 0c       	add	r0, r0
     b18:	aa 0b       	sbc	r26, r26
     b1a:	bb 0b       	sbc	r27, r27
     b1c:	dc 01       	movw	r26, r24
     b1e:	99 27       	eor	r25, r25
     b20:	88 27       	eor	r24, r24
     b22:	60 e0       	ldi	r22, 0x00	; 0
     b24:	70 e0       	ldi	r23, 0x00	; 0
     b26:	84 2b       	or	r24, r20
     b28:	95 2b       	or	r25, r21
     b2a:	a6 2b       	or	r26, r22
     b2c:	b7 2b       	or	r27, r23
     b2e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     b32:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     b36:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     b3a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     b3e:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     b42:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     b46:	30 97       	sbiw	r30, 0x00	; 0
     b48:	39 f0       	breq	.+14     	; 0xb58 <__vector_3+0xb2>
     b4a:	62 e0       	ldi	r22, 0x02	; 2
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     b52:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     b56:	09 95       	icall
     b58:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
     b5c:	ff 91       	pop	r31
     b5e:	ef 91       	pop	r30
     b60:	bf 91       	pop	r27
     b62:	af 91       	pop	r26
     b64:	9f 91       	pop	r25
     b66:	8f 91       	pop	r24
     b68:	7f 91       	pop	r23
     b6a:	6f 91       	pop	r22
     b6c:	5f 91       	pop	r21
     b6e:	4f 91       	pop	r20
     b70:	3f 91       	pop	r19
     b72:	2f 91       	pop	r18
     b74:	0f 90       	pop	r0
     b76:	0f be       	out	0x3f, r0	; 63
     b78:	0f 90       	pop	r0
     b7a:	1f 90       	pop	r1
     b7c:	18 95       	reti

00000b7e <__vector_4>:
     b7e:	1f 92       	push	r1
     b80:	0f 92       	push	r0
     b82:	0f b6       	in	r0, 0x3f	; 63
     b84:	0f 92       	push	r0
     b86:	11 24       	eor	r1, r1
     b88:	2f 93       	push	r18
     b8a:	3f 93       	push	r19
     b8c:	4f 93       	push	r20
     b8e:	5f 93       	push	r21
     b90:	6f 93       	push	r22
     b92:	7f 93       	push	r23
     b94:	8f 93       	push	r24
     b96:	9f 93       	push	r25
     b98:	af 93       	push	r26
     b9a:	bf 93       	push	r27
     b9c:	ef 93       	push	r30
     b9e:	ff 93       	push	r31
     ba0:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     ba4:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     ba8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bb0:	c9 01       	movw	r24, r18
     bb2:	03 2e       	mov	r0, r19
     bb4:	00 0c       	add	r0, r0
     bb6:	aa 0b       	sbc	r26, r26
     bb8:	bb 0b       	sbc	r27, r27
     bba:	dc 01       	movw	r26, r24
     bbc:	99 27       	eor	r25, r25
     bbe:	88 27       	eor	r24, r24
     bc0:	60 e0       	ldi	r22, 0x00	; 0
     bc2:	70 e0       	ldi	r23, 0x00	; 0
     bc4:	84 2b       	or	r24, r20
     bc6:	95 2b       	or	r25, r21
     bc8:	a6 2b       	or	r26, r22
     bca:	b7 2b       	or	r27, r23
     bcc:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     bd0:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     bd4:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     bd8:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     bdc:	b0 9b       	sbis	0x16, 0	; 22
     bde:	1b c0       	rjmp	.+54     	; 0xc16 <__vector_4+0x98>
     be0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     be4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     be8:	c9 01       	movw	r24, r18
     bea:	01 96       	adiw	r24, 0x01	; 1
     bec:	09 2e       	mov	r0, r25
     bee:	00 0c       	add	r0, r0
     bf0:	aa 0b       	sbc	r26, r26
     bf2:	bb 0b       	sbc	r27, r27
     bf4:	dc 01       	movw	r26, r24
     bf6:	99 27       	eor	r25, r25
     bf8:	88 27       	eor	r24, r24
     bfa:	60 e0       	ldi	r22, 0x00	; 0
     bfc:	70 e0       	ldi	r23, 0x00	; 0
     bfe:	84 2b       	or	r24, r20
     c00:	95 2b       	or	r25, r21
     c02:	a6 2b       	or	r26, r22
     c04:	b7 2b       	or	r27, r23
     c06:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     c0a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     c0e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     c12:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     c16:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     c1a:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     c1e:	30 97       	sbiw	r30, 0x00	; 0
     c20:	39 f0       	breq	.+14     	; 0xc30 <__vector_4+0xb2>
     c22:	63 e0       	ldi	r22, 0x03	; 3
     c24:	70 e0       	ldi	r23, 0x00	; 0
     c26:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     c2a:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     c2e:	09 95       	icall
     c30:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
     c34:	ff 91       	pop	r31
     c36:	ef 91       	pop	r30
     c38:	bf 91       	pop	r27
     c3a:	af 91       	pop	r26
     c3c:	9f 91       	pop	r25
     c3e:	8f 91       	pop	r24
     c40:	7f 91       	pop	r23
     c42:	6f 91       	pop	r22
     c44:	5f 91       	pop	r21
     c46:	4f 91       	pop	r20
     c48:	3f 91       	pop	r19
     c4a:	2f 91       	pop	r18
     c4c:	0f 90       	pop	r0
     c4e:	0f be       	out	0x3f, r0	; 63
     c50:	0f 90       	pop	r0
     c52:	1f 90       	pop	r1
     c54:	18 95       	reti

00000c56 <__vector_5>:
     c56:	1f 92       	push	r1
     c58:	0f 92       	push	r0
     c5a:	0f b6       	in	r0, 0x3f	; 63
     c5c:	0f 92       	push	r0
     c5e:	11 24       	eor	r1, r1
     c60:	2f 93       	push	r18
     c62:	3f 93       	push	r19
     c64:	4f 93       	push	r20
     c66:	5f 93       	push	r21
     c68:	6f 93       	push	r22
     c6a:	7f 93       	push	r23
     c6c:	8f 93       	push	r24
     c6e:	9f 93       	push	r25
     c70:	af 93       	push	r26
     c72:	bf 93       	push	r27
     c74:	ef 93       	push	r30
     c76:	ff 93       	push	r31
     c78:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     c7c:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     c80:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c84:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c88:	c9 01       	movw	r24, r18
     c8a:	03 2e       	mov	r0, r19
     c8c:	00 0c       	add	r0, r0
     c8e:	aa 0b       	sbc	r26, r26
     c90:	bb 0b       	sbc	r27, r27
     c92:	dc 01       	movw	r26, r24
     c94:	99 27       	eor	r25, r25
     c96:	88 27       	eor	r24, r24
     c98:	60 e0       	ldi	r22, 0x00	; 0
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	84 2b       	or	r24, r20
     c9e:	95 2b       	or	r25, r21
     ca0:	a6 2b       	or	r26, r22
     ca2:	b7 2b       	or	r27, r23
     ca4:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     ca8:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     cac:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     cb0:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     cb4:	b0 9b       	sbis	0x16, 0	; 22
     cb6:	1b c0       	rjmp	.+54     	; 0xcee <__vector_5+0x98>
     cb8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cbc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cc0:	c9 01       	movw	r24, r18
     cc2:	01 96       	adiw	r24, 0x01	; 1
     cc4:	09 2e       	mov	r0, r25
     cc6:	00 0c       	add	r0, r0
     cc8:	aa 0b       	sbc	r26, r26
     cca:	bb 0b       	sbc	r27, r27
     ccc:	dc 01       	movw	r26, r24
     cce:	99 27       	eor	r25, r25
     cd0:	88 27       	eor	r24, r24
     cd2:	60 e0       	ldi	r22, 0x00	; 0
     cd4:	70 e0       	ldi	r23, 0x00	; 0
     cd6:	84 2b       	or	r24, r20
     cd8:	95 2b       	or	r25, r21
     cda:	a6 2b       	or	r26, r22
     cdc:	b7 2b       	or	r27, r23
     cde:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     ce2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     ce6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     cea:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     cee:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
     cf2:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
     cf6:	30 97       	sbiw	r30, 0x00	; 0
     cf8:	39 f0       	breq	.+14     	; 0xd08 <__vector_5+0xb2>
     cfa:	64 e0       	ldi	r22, 0x04	; 4
     cfc:	70 e0       	ldi	r23, 0x00	; 0
     cfe:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
     d02:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
     d06:	09 95       	icall
     d08:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
     d0c:	ff 91       	pop	r31
     d0e:	ef 91       	pop	r30
     d10:	bf 91       	pop	r27
     d12:	af 91       	pop	r26
     d14:	9f 91       	pop	r25
     d16:	8f 91       	pop	r24
     d18:	7f 91       	pop	r23
     d1a:	6f 91       	pop	r22
     d1c:	5f 91       	pop	r21
     d1e:	4f 91       	pop	r20
     d20:	3f 91       	pop	r19
     d22:	2f 91       	pop	r18
     d24:	0f 90       	pop	r0
     d26:	0f be       	out	0x3f, r0	; 63
     d28:	0f 90       	pop	r0
     d2a:	1f 90       	pop	r1
     d2c:	18 95       	reti

00000d2e <__vector_10>:
     d2e:	1f 92       	push	r1
     d30:	0f 92       	push	r0
     d32:	0f b6       	in	r0, 0x3f	; 63
     d34:	0f 92       	push	r0
     d36:	11 24       	eor	r1, r1
     d38:	2f 93       	push	r18
     d3a:	3f 93       	push	r19
     d3c:	4f 93       	push	r20
     d3e:	5f 93       	push	r21
     d40:	6f 93       	push	r22
     d42:	7f 93       	push	r23
     d44:	8f 93       	push	r24
     d46:	9f 93       	push	r25
     d48:	af 93       	push	r26
     d4a:	bf 93       	push	r27
     d4c:	ef 93       	push	r30
     d4e:	ff 93       	push	r31
     d50:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     d54:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     d58:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d5c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d60:	c9 01       	movw	r24, r18
     d62:	03 2e       	mov	r0, r19
     d64:	00 0c       	add	r0, r0
     d66:	aa 0b       	sbc	r26, r26
     d68:	bb 0b       	sbc	r27, r27
     d6a:	dc 01       	movw	r26, r24
     d6c:	99 27       	eor	r25, r25
     d6e:	88 27       	eor	r24, r24
     d70:	60 e0       	ldi	r22, 0x00	; 0
     d72:	70 e0       	ldi	r23, 0x00	; 0
     d74:	84 2b       	or	r24, r20
     d76:	95 2b       	or	r25, r21
     d78:	a6 2b       	or	r26, r22
     d7a:	b7 2b       	or	r27, r23
     d7c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     d80:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     d84:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     d88:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     d8c:	b0 9b       	sbis	0x16, 0	; 22
     d8e:	1b c0       	rjmp	.+54     	; 0xdc6 <__vector_10+0x98>
     d90:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d94:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d98:	c9 01       	movw	r24, r18
     d9a:	01 96       	adiw	r24, 0x01	; 1
     d9c:	09 2e       	mov	r0, r25
     d9e:	00 0c       	add	r0, r0
     da0:	aa 0b       	sbc	r26, r26
     da2:	bb 0b       	sbc	r27, r27
     da4:	dc 01       	movw	r26, r24
     da6:	99 27       	eor	r25, r25
     da8:	88 27       	eor	r24, r24
     daa:	60 e0       	ldi	r22, 0x00	; 0
     dac:	70 e0       	ldi	r23, 0x00	; 0
     dae:	84 2b       	or	r24, r20
     db0:	95 2b       	or	r25, r21
     db2:	a6 2b       	or	r26, r22
     db4:	b7 2b       	or	r27, r23
     db6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     dba:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     dbe:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     dc2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     dc6:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
     dca:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
     dce:	30 97       	sbiw	r30, 0x00	; 0
     dd0:	39 f0       	breq	.+14     	; 0xde0 <__vector_10+0xb2>
     dd2:	65 e0       	ldi	r22, 0x05	; 5
     dd4:	70 e0       	ldi	r23, 0x00	; 0
     dd6:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
     dda:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
     dde:	09 95       	icall
     de0:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
     de4:	ff 91       	pop	r31
     de6:	ef 91       	pop	r30
     de8:	bf 91       	pop	r27
     dea:	af 91       	pop	r26
     dec:	9f 91       	pop	r25
     dee:	8f 91       	pop	r24
     df0:	7f 91       	pop	r23
     df2:	6f 91       	pop	r22
     df4:	5f 91       	pop	r21
     df6:	4f 91       	pop	r20
     df8:	3f 91       	pop	r19
     dfa:	2f 91       	pop	r18
     dfc:	0f 90       	pop	r0
     dfe:	0f be       	out	0x3f, r0	; 63
     e00:	0f 90       	pop	r0
     e02:	1f 90       	pop	r1
     e04:	18 95       	reti

00000e06 <__vector_11>:
     e06:	1f 92       	push	r1
     e08:	0f 92       	push	r0
     e0a:	0f b6       	in	r0, 0x3f	; 63
     e0c:	0f 92       	push	r0
     e0e:	11 24       	eor	r1, r1
     e10:	2f 93       	push	r18
     e12:	3f 93       	push	r19
     e14:	4f 93       	push	r20
     e16:	5f 93       	push	r21
     e18:	6f 93       	push	r22
     e1a:	7f 93       	push	r23
     e1c:	8f 93       	push	r24
     e1e:	9f 93       	push	r25
     e20:	af 93       	push	r26
     e22:	bf 93       	push	r27
     e24:	ef 93       	push	r30
     e26:	ff 93       	push	r31
     e28:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     e2c:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     e30:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e34:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e38:	c9 01       	movw	r24, r18
     e3a:	03 2e       	mov	r0, r19
     e3c:	00 0c       	add	r0, r0
     e3e:	aa 0b       	sbc	r26, r26
     e40:	bb 0b       	sbc	r27, r27
     e42:	dc 01       	movw	r26, r24
     e44:	99 27       	eor	r25, r25
     e46:	88 27       	eor	r24, r24
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	84 2b       	or	r24, r20
     e4e:	95 2b       	or	r25, r21
     e50:	a6 2b       	or	r26, r22
     e52:	b7 2b       	or	r27, r23
     e54:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e58:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e5c:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e60:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e64:	b0 9b       	sbis	0x16, 0	; 22
     e66:	1b c0       	rjmp	.+54     	; 0xe9e <__vector_11+0x98>
     e68:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e6c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e70:	c9 01       	movw	r24, r18
     e72:	01 96       	adiw	r24, 0x01	; 1
     e74:	09 2e       	mov	r0, r25
     e76:	00 0c       	add	r0, r0
     e78:	aa 0b       	sbc	r26, r26
     e7a:	bb 0b       	sbc	r27, r27
     e7c:	dc 01       	movw	r26, r24
     e7e:	99 27       	eor	r25, r25
     e80:	88 27       	eor	r24, r24
     e82:	60 e0       	ldi	r22, 0x00	; 0
     e84:	70 e0       	ldi	r23, 0x00	; 0
     e86:	84 2b       	or	r24, r20
     e88:	95 2b       	or	r25, r21
     e8a:	a6 2b       	or	r26, r22
     e8c:	b7 2b       	or	r27, r23
     e8e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     e92:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     e96:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     e9a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     e9e:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
     ea2:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
     ea6:	30 97       	sbiw	r30, 0x00	; 0
     ea8:	39 f0       	breq	.+14     	; 0xeb8 <__vector_11+0xb2>
     eaa:	66 e0       	ldi	r22, 0x06	; 6
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
     eb2:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
     eb6:	09 95       	icall
     eb8:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
     ebc:	ff 91       	pop	r31
     ebe:	ef 91       	pop	r30
     ec0:	bf 91       	pop	r27
     ec2:	af 91       	pop	r26
     ec4:	9f 91       	pop	r25
     ec6:	8f 91       	pop	r24
     ec8:	7f 91       	pop	r23
     eca:	6f 91       	pop	r22
     ecc:	5f 91       	pop	r21
     ece:	4f 91       	pop	r20
     ed0:	3f 91       	pop	r19
     ed2:	2f 91       	pop	r18
     ed4:	0f 90       	pop	r0
     ed6:	0f be       	out	0x3f, r0	; 63
     ed8:	0f 90       	pop	r0
     eda:	1f 90       	pop	r1
     edc:	18 95       	reti

00000ede <__vector_12>:
     ede:	1f 92       	push	r1
     ee0:	0f 92       	push	r0
     ee2:	0f b6       	in	r0, 0x3f	; 63
     ee4:	0f 92       	push	r0
     ee6:	11 24       	eor	r1, r1
     ee8:	2f 93       	push	r18
     eea:	3f 93       	push	r19
     eec:	4f 93       	push	r20
     eee:	5f 93       	push	r21
     ef0:	6f 93       	push	r22
     ef2:	7f 93       	push	r23
     ef4:	8f 93       	push	r24
     ef6:	9f 93       	push	r25
     ef8:	af 93       	push	r26
     efa:	bf 93       	push	r27
     efc:	ef 93       	push	r30
     efe:	ff 93       	push	r31
     f00:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     f04:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     f08:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f0c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f10:	c9 01       	movw	r24, r18
     f12:	03 2e       	mov	r0, r19
     f14:	00 0c       	add	r0, r0
     f16:	aa 0b       	sbc	r26, r26
     f18:	bb 0b       	sbc	r27, r27
     f1a:	dc 01       	movw	r26, r24
     f1c:	99 27       	eor	r25, r25
     f1e:	88 27       	eor	r24, r24
     f20:	60 e0       	ldi	r22, 0x00	; 0
     f22:	70 e0       	ldi	r23, 0x00	; 0
     f24:	84 2b       	or	r24, r20
     f26:	95 2b       	or	r25, r21
     f28:	a6 2b       	or	r26, r22
     f2a:	b7 2b       	or	r27, r23
     f2c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f30:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f34:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f38:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f3c:	b0 9b       	sbis	0x16, 0	; 22
     f3e:	1b c0       	rjmp	.+54     	; 0xf76 <__vector_12+0x98>
     f40:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f44:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f48:	c9 01       	movw	r24, r18
     f4a:	01 96       	adiw	r24, 0x01	; 1
     f4c:	09 2e       	mov	r0, r25
     f4e:	00 0c       	add	r0, r0
     f50:	aa 0b       	sbc	r26, r26
     f52:	bb 0b       	sbc	r27, r27
     f54:	dc 01       	movw	r26, r24
     f56:	99 27       	eor	r25, r25
     f58:	88 27       	eor	r24, r24
     f5a:	60 e0       	ldi	r22, 0x00	; 0
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	84 2b       	or	r24, r20
     f60:	95 2b       	or	r25, r21
     f62:	a6 2b       	or	r26, r22
     f64:	b7 2b       	or	r27, r23
     f66:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
     f6a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
     f6e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
     f72:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
     f76:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
     f7a:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
     f7e:	30 97       	sbiw	r30, 0x00	; 0
     f80:	39 f0       	breq	.+14     	; 0xf90 <__vector_12+0xb2>
     f82:	67 e0       	ldi	r22, 0x07	; 7
     f84:	70 e0       	ldi	r23, 0x00	; 0
     f86:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
     f8a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
     f8e:	09 95       	icall
     f90:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
     f94:	ff 91       	pop	r31
     f96:	ef 91       	pop	r30
     f98:	bf 91       	pop	r27
     f9a:	af 91       	pop	r26
     f9c:	9f 91       	pop	r25
     f9e:	8f 91       	pop	r24
     fa0:	7f 91       	pop	r23
     fa2:	6f 91       	pop	r22
     fa4:	5f 91       	pop	r21
     fa6:	4f 91       	pop	r20
     fa8:	3f 91       	pop	r19
     faa:	2f 91       	pop	r18
     fac:	0f 90       	pop	r0
     fae:	0f be       	out	0x3f, r0	; 63
     fb0:	0f 90       	pop	r0
     fb2:	1f 90       	pop	r1
     fb4:	18 95       	reti

00000fb6 <__vector_13>:
     fb6:	1f 92       	push	r1
     fb8:	0f 92       	push	r0
     fba:	0f b6       	in	r0, 0x3f	; 63
     fbc:	0f 92       	push	r0
     fbe:	11 24       	eor	r1, r1
     fc0:	2f 93       	push	r18
     fc2:	3f 93       	push	r19
     fc4:	4f 93       	push	r20
     fc6:	5f 93       	push	r21
     fc8:	6f 93       	push	r22
     fca:	7f 93       	push	r23
     fcc:	8f 93       	push	r24
     fce:	9f 93       	push	r25
     fd0:	af 93       	push	r26
     fd2:	bf 93       	push	r27
     fd4:	ef 93       	push	r30
     fd6:	ff 93       	push	r31
     fd8:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
     fdc:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
     fe0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fe4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fe8:	c9 01       	movw	r24, r18
     fea:	03 2e       	mov	r0, r19
     fec:	00 0c       	add	r0, r0
     fee:	aa 0b       	sbc	r26, r26
     ff0:	bb 0b       	sbc	r27, r27
     ff2:	dc 01       	movw	r26, r24
     ff4:	99 27       	eor	r25, r25
     ff6:	88 27       	eor	r24, r24
     ff8:	60 e0       	ldi	r22, 0x00	; 0
     ffa:	70 e0       	ldi	r23, 0x00	; 0
     ffc:	84 2b       	or	r24, r20
     ffe:	95 2b       	or	r25, r21
    1000:	a6 2b       	or	r26, r22
    1002:	b7 2b       	or	r27, r23
    1004:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1008:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    100c:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1010:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1014:	b0 9b       	sbis	0x16, 0	; 22
    1016:	1b c0       	rjmp	.+54     	; 0x104e <__vector_13+0x98>
    1018:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    101c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1020:	c9 01       	movw	r24, r18
    1022:	01 96       	adiw	r24, 0x01	; 1
    1024:	09 2e       	mov	r0, r25
    1026:	00 0c       	add	r0, r0
    1028:	aa 0b       	sbc	r26, r26
    102a:	bb 0b       	sbc	r27, r27
    102c:	dc 01       	movw	r26, r24
    102e:	99 27       	eor	r25, r25
    1030:	88 27       	eor	r24, r24
    1032:	60 e0       	ldi	r22, 0x00	; 0
    1034:	70 e0       	ldi	r23, 0x00	; 0
    1036:	84 2b       	or	r24, r20
    1038:	95 2b       	or	r25, r21
    103a:	a6 2b       	or	r26, r22
    103c:	b7 2b       	or	r27, r23
    103e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1042:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1046:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    104a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    104e:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
    1052:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
    1056:	30 97       	sbiw	r30, 0x00	; 0
    1058:	39 f0       	breq	.+14     	; 0x1068 <__vector_13+0xb2>
    105a:	68 e0       	ldi	r22, 0x08	; 8
    105c:	70 e0       	ldi	r23, 0x00	; 0
    105e:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
    1062:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
    1066:	09 95       	icall
    1068:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    106c:	ff 91       	pop	r31
    106e:	ef 91       	pop	r30
    1070:	bf 91       	pop	r27
    1072:	af 91       	pop	r26
    1074:	9f 91       	pop	r25
    1076:	8f 91       	pop	r24
    1078:	7f 91       	pop	r23
    107a:	6f 91       	pop	r22
    107c:	5f 91       	pop	r21
    107e:	4f 91       	pop	r20
    1080:	3f 91       	pop	r19
    1082:	2f 91       	pop	r18
    1084:	0f 90       	pop	r0
    1086:	0f be       	out	0x3f, r0	; 63
    1088:	0f 90       	pop	r0
    108a:	1f 90       	pop	r1
    108c:	18 95       	reti

0000108e <__vector_14>:
    108e:	1f 92       	push	r1
    1090:	0f 92       	push	r0
    1092:	0f b6       	in	r0, 0x3f	; 63
    1094:	0f 92       	push	r0
    1096:	11 24       	eor	r1, r1
    1098:	2f 93       	push	r18
    109a:	3f 93       	push	r19
    109c:	4f 93       	push	r20
    109e:	5f 93       	push	r21
    10a0:	6f 93       	push	r22
    10a2:	7f 93       	push	r23
    10a4:	8f 93       	push	r24
    10a6:	9f 93       	push	r25
    10a8:	af 93       	push	r26
    10aa:	bf 93       	push	r27
    10ac:	ef 93       	push	r30
    10ae:	ff 93       	push	r31
    10b0:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    10b4:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    10b8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10bc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10c0:	c9 01       	movw	r24, r18
    10c2:	03 2e       	mov	r0, r19
    10c4:	00 0c       	add	r0, r0
    10c6:	aa 0b       	sbc	r26, r26
    10c8:	bb 0b       	sbc	r27, r27
    10ca:	dc 01       	movw	r26, r24
    10cc:	99 27       	eor	r25, r25
    10ce:	88 27       	eor	r24, r24
    10d0:	60 e0       	ldi	r22, 0x00	; 0
    10d2:	70 e0       	ldi	r23, 0x00	; 0
    10d4:	84 2b       	or	r24, r20
    10d6:	95 2b       	or	r25, r21
    10d8:	a6 2b       	or	r26, r22
    10da:	b7 2b       	or	r27, r23
    10dc:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    10e0:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    10e4:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    10e8:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    10ec:	b0 9b       	sbis	0x16, 0	; 22
    10ee:	1b c0       	rjmp	.+54     	; 0x1126 <__vector_14+0x98>
    10f0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10f4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10f8:	c9 01       	movw	r24, r18
    10fa:	01 96       	adiw	r24, 0x01	; 1
    10fc:	09 2e       	mov	r0, r25
    10fe:	00 0c       	add	r0, r0
    1100:	aa 0b       	sbc	r26, r26
    1102:	bb 0b       	sbc	r27, r27
    1104:	dc 01       	movw	r26, r24
    1106:	99 27       	eor	r25, r25
    1108:	88 27       	eor	r24, r24
    110a:	60 e0       	ldi	r22, 0x00	; 0
    110c:	70 e0       	ldi	r23, 0x00	; 0
    110e:	84 2b       	or	r24, r20
    1110:	95 2b       	or	r25, r21
    1112:	a6 2b       	or	r26, r22
    1114:	b7 2b       	or	r27, r23
    1116:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    111a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    111e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1122:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1126:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
    112a:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
    112e:	30 97       	sbiw	r30, 0x00	; 0
    1130:	39 f0       	breq	.+14     	; 0x1140 <__vector_14+0xb2>
    1132:	69 e0       	ldi	r22, 0x09	; 9
    1134:	70 e0       	ldi	r23, 0x00	; 0
    1136:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
    113a:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
    113e:	09 95       	icall
    1140:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    1144:	ff 91       	pop	r31
    1146:	ef 91       	pop	r30
    1148:	bf 91       	pop	r27
    114a:	af 91       	pop	r26
    114c:	9f 91       	pop	r25
    114e:	8f 91       	pop	r24
    1150:	7f 91       	pop	r23
    1152:	6f 91       	pop	r22
    1154:	5f 91       	pop	r21
    1156:	4f 91       	pop	r20
    1158:	3f 91       	pop	r19
    115a:	2f 91       	pop	r18
    115c:	0f 90       	pop	r0
    115e:	0f be       	out	0x3f, r0	; 63
    1160:	0f 90       	pop	r0
    1162:	1f 90       	pop	r1
    1164:	18 95       	reti

00001166 <__vector_15>:
    1166:	1f 92       	push	r1
    1168:	0f 92       	push	r0
    116a:	0f b6       	in	r0, 0x3f	; 63
    116c:	0f 92       	push	r0
    116e:	11 24       	eor	r1, r1
    1170:	2f 93       	push	r18
    1172:	3f 93       	push	r19
    1174:	4f 93       	push	r20
    1176:	5f 93       	push	r21
    1178:	6f 93       	push	r22
    117a:	7f 93       	push	r23
    117c:	8f 93       	push	r24
    117e:	9f 93       	push	r25
    1180:	af 93       	push	r26
    1182:	bf 93       	push	r27
    1184:	ef 93       	push	r30
    1186:	ff 93       	push	r31
    1188:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    118c:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1190:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1194:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1198:	c9 01       	movw	r24, r18
    119a:	03 2e       	mov	r0, r19
    119c:	00 0c       	add	r0, r0
    119e:	aa 0b       	sbc	r26, r26
    11a0:	bb 0b       	sbc	r27, r27
    11a2:	dc 01       	movw	r26, r24
    11a4:	99 27       	eor	r25, r25
    11a6:	88 27       	eor	r24, r24
    11a8:	60 e0       	ldi	r22, 0x00	; 0
    11aa:	70 e0       	ldi	r23, 0x00	; 0
    11ac:	84 2b       	or	r24, r20
    11ae:	95 2b       	or	r25, r21
    11b0:	a6 2b       	or	r26, r22
    11b2:	b7 2b       	or	r27, r23
    11b4:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    11b8:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    11bc:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    11c0:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    11c4:	b0 9b       	sbis	0x16, 0	; 22
    11c6:	1b c0       	rjmp	.+54     	; 0x11fe <__vector_15+0x98>
    11c8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11cc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11d0:	c9 01       	movw	r24, r18
    11d2:	01 96       	adiw	r24, 0x01	; 1
    11d4:	09 2e       	mov	r0, r25
    11d6:	00 0c       	add	r0, r0
    11d8:	aa 0b       	sbc	r26, r26
    11da:	bb 0b       	sbc	r27, r27
    11dc:	dc 01       	movw	r26, r24
    11de:	99 27       	eor	r25, r25
    11e0:	88 27       	eor	r24, r24
    11e2:	60 e0       	ldi	r22, 0x00	; 0
    11e4:	70 e0       	ldi	r23, 0x00	; 0
    11e6:	84 2b       	or	r24, r20
    11e8:	95 2b       	or	r25, r21
    11ea:	a6 2b       	or	r26, r22
    11ec:	b7 2b       	or	r27, r23
    11ee:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    11f2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    11f6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    11fa:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    11fe:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
    1202:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    1206:	30 97       	sbiw	r30, 0x00	; 0
    1208:	39 f0       	breq	.+14     	; 0x1218 <__vector_15+0xb2>
    120a:	6a e0       	ldi	r22, 0x0A	; 10
    120c:	70 e0       	ldi	r23, 0x00	; 0
    120e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    1212:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    1216:	09 95       	icall
    1218:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    121c:	ff 91       	pop	r31
    121e:	ef 91       	pop	r30
    1220:	bf 91       	pop	r27
    1222:	af 91       	pop	r26
    1224:	9f 91       	pop	r25
    1226:	8f 91       	pop	r24
    1228:	7f 91       	pop	r23
    122a:	6f 91       	pop	r22
    122c:	5f 91       	pop	r21
    122e:	4f 91       	pop	r20
    1230:	3f 91       	pop	r19
    1232:	2f 91       	pop	r18
    1234:	0f 90       	pop	r0
    1236:	0f be       	out	0x3f, r0	; 63
    1238:	0f 90       	pop	r0
    123a:	1f 90       	pop	r1
    123c:	18 95       	reti

0000123e <__vector_16>:
    123e:	1f 92       	push	r1
    1240:	0f 92       	push	r0
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	0f 92       	push	r0
    1246:	11 24       	eor	r1, r1
    1248:	2f 93       	push	r18
    124a:	3f 93       	push	r19
    124c:	4f 93       	push	r20
    124e:	5f 93       	push	r21
    1250:	6f 93       	push	r22
    1252:	7f 93       	push	r23
    1254:	8f 93       	push	r24
    1256:	9f 93       	push	r25
    1258:	af 93       	push	r26
    125a:	bf 93       	push	r27
    125c:	ef 93       	push	r30
    125e:	ff 93       	push	r31
    1260:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1264:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1268:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    126c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1270:	c9 01       	movw	r24, r18
    1272:	03 2e       	mov	r0, r19
    1274:	00 0c       	add	r0, r0
    1276:	aa 0b       	sbc	r26, r26
    1278:	bb 0b       	sbc	r27, r27
    127a:	dc 01       	movw	r26, r24
    127c:	99 27       	eor	r25, r25
    127e:	88 27       	eor	r24, r24
    1280:	60 e0       	ldi	r22, 0x00	; 0
    1282:	70 e0       	ldi	r23, 0x00	; 0
    1284:	84 2b       	or	r24, r20
    1286:	95 2b       	or	r25, r21
    1288:	a6 2b       	or	r26, r22
    128a:	b7 2b       	or	r27, r23
    128c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1290:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1294:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1298:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    129c:	b0 9b       	sbis	0x16, 0	; 22
    129e:	1b c0       	rjmp	.+54     	; 0x12d6 <__vector_16+0x98>
    12a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12a8:	c9 01       	movw	r24, r18
    12aa:	01 96       	adiw	r24, 0x01	; 1
    12ac:	09 2e       	mov	r0, r25
    12ae:	00 0c       	add	r0, r0
    12b0:	aa 0b       	sbc	r26, r26
    12b2:	bb 0b       	sbc	r27, r27
    12b4:	dc 01       	movw	r26, r24
    12b6:	99 27       	eor	r25, r25
    12b8:	88 27       	eor	r24, r24
    12ba:	60 e0       	ldi	r22, 0x00	; 0
    12bc:	70 e0       	ldi	r23, 0x00	; 0
    12be:	84 2b       	or	r24, r20
    12c0:	95 2b       	or	r25, r21
    12c2:	a6 2b       	or	r26, r22
    12c4:	b7 2b       	or	r27, r23
    12c6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    12ca:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    12ce:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    12d2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    12d6:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    12da:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    12de:	30 97       	sbiw	r30, 0x00	; 0
    12e0:	39 f0       	breq	.+14     	; 0x12f0 <__vector_16+0xb2>
    12e2:	6b e0       	ldi	r22, 0x0B	; 11
    12e4:	70 e0       	ldi	r23, 0x00	; 0
    12e6:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    12ea:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    12ee:	09 95       	icall
    12f0:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    12f4:	ff 91       	pop	r31
    12f6:	ef 91       	pop	r30
    12f8:	bf 91       	pop	r27
    12fa:	af 91       	pop	r26
    12fc:	9f 91       	pop	r25
    12fe:	8f 91       	pop	r24
    1300:	7f 91       	pop	r23
    1302:	6f 91       	pop	r22
    1304:	5f 91       	pop	r21
    1306:	4f 91       	pop	r20
    1308:	3f 91       	pop	r19
    130a:	2f 91       	pop	r18
    130c:	0f 90       	pop	r0
    130e:	0f be       	out	0x3f, r0	; 63
    1310:	0f 90       	pop	r0
    1312:	1f 90       	pop	r1
    1314:	18 95       	reti

00001316 <__vector_17>:
    1316:	1f 92       	push	r1
    1318:	0f 92       	push	r0
    131a:	0f b6       	in	r0, 0x3f	; 63
    131c:	0f 92       	push	r0
    131e:	11 24       	eor	r1, r1
    1320:	2f 93       	push	r18
    1322:	3f 93       	push	r19
    1324:	4f 93       	push	r20
    1326:	5f 93       	push	r21
    1328:	6f 93       	push	r22
    132a:	7f 93       	push	r23
    132c:	8f 93       	push	r24
    132e:	9f 93       	push	r25
    1330:	af 93       	push	r26
    1332:	bf 93       	push	r27
    1334:	ef 93       	push	r30
    1336:	ff 93       	push	r31
    1338:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    133c:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1340:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1344:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1348:	c9 01       	movw	r24, r18
    134a:	03 2e       	mov	r0, r19
    134c:	00 0c       	add	r0, r0
    134e:	aa 0b       	sbc	r26, r26
    1350:	bb 0b       	sbc	r27, r27
    1352:	dc 01       	movw	r26, r24
    1354:	99 27       	eor	r25, r25
    1356:	88 27       	eor	r24, r24
    1358:	60 e0       	ldi	r22, 0x00	; 0
    135a:	70 e0       	ldi	r23, 0x00	; 0
    135c:	84 2b       	or	r24, r20
    135e:	95 2b       	or	r25, r21
    1360:	a6 2b       	or	r26, r22
    1362:	b7 2b       	or	r27, r23
    1364:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1368:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    136c:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1370:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1374:	b0 9b       	sbis	0x16, 0	; 22
    1376:	1b c0       	rjmp	.+54     	; 0x13ae <__vector_17+0x98>
    1378:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    137c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1380:	c9 01       	movw	r24, r18
    1382:	01 96       	adiw	r24, 0x01	; 1
    1384:	09 2e       	mov	r0, r25
    1386:	00 0c       	add	r0, r0
    1388:	aa 0b       	sbc	r26, r26
    138a:	bb 0b       	sbc	r27, r27
    138c:	dc 01       	movw	r26, r24
    138e:	99 27       	eor	r25, r25
    1390:	88 27       	eor	r24, r24
    1392:	60 e0       	ldi	r22, 0x00	; 0
    1394:	70 e0       	ldi	r23, 0x00	; 0
    1396:	84 2b       	or	r24, r20
    1398:	95 2b       	or	r25, r21
    139a:	a6 2b       	or	r26, r22
    139c:	b7 2b       	or	r27, r23
    139e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    13a2:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    13a6:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    13aa:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    13ae:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    13b2:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    13b6:	30 97       	sbiw	r30, 0x00	; 0
    13b8:	39 f0       	breq	.+14     	; 0x13c8 <__vector_17+0xb2>
    13ba:	6c e0       	ldi	r22, 0x0C	; 12
    13bc:	70 e0       	ldi	r23, 0x00	; 0
    13be:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    13c2:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    13c6:	09 95       	icall
    13c8:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    13cc:	ff 91       	pop	r31
    13ce:	ef 91       	pop	r30
    13d0:	bf 91       	pop	r27
    13d2:	af 91       	pop	r26
    13d4:	9f 91       	pop	r25
    13d6:	8f 91       	pop	r24
    13d8:	7f 91       	pop	r23
    13da:	6f 91       	pop	r22
    13dc:	5f 91       	pop	r21
    13de:	4f 91       	pop	r20
    13e0:	3f 91       	pop	r19
    13e2:	2f 91       	pop	r18
    13e4:	0f 90       	pop	r0
    13e6:	0f be       	out	0x3f, r0	; 63
    13e8:	0f 90       	pop	r0
    13ea:	1f 90       	pop	r1
    13ec:	18 95       	reti

000013ee <__vector_18>:
    13ee:	1f 92       	push	r1
    13f0:	0f 92       	push	r0
    13f2:	0f b6       	in	r0, 0x3f	; 63
    13f4:	0f 92       	push	r0
    13f6:	11 24       	eor	r1, r1
    13f8:	2f 93       	push	r18
    13fa:	3f 93       	push	r19
    13fc:	4f 93       	push	r20
    13fe:	5f 93       	push	r21
    1400:	6f 93       	push	r22
    1402:	7f 93       	push	r23
    1404:	8f 93       	push	r24
    1406:	9f 93       	push	r25
    1408:	af 93       	push	r26
    140a:	bf 93       	push	r27
    140c:	ef 93       	push	r30
    140e:	ff 93       	push	r31
    1410:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1414:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1418:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    141c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1420:	c9 01       	movw	r24, r18
    1422:	03 2e       	mov	r0, r19
    1424:	00 0c       	add	r0, r0
    1426:	aa 0b       	sbc	r26, r26
    1428:	bb 0b       	sbc	r27, r27
    142a:	dc 01       	movw	r26, r24
    142c:	99 27       	eor	r25, r25
    142e:	88 27       	eor	r24, r24
    1430:	60 e0       	ldi	r22, 0x00	; 0
    1432:	70 e0       	ldi	r23, 0x00	; 0
    1434:	84 2b       	or	r24, r20
    1436:	95 2b       	or	r25, r21
    1438:	a6 2b       	or	r26, r22
    143a:	b7 2b       	or	r27, r23
    143c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1440:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1444:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1448:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    144c:	b0 9b       	sbis	0x16, 0	; 22
    144e:	1b c0       	rjmp	.+54     	; 0x1486 <__vector_18+0x98>
    1450:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1454:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1458:	c9 01       	movw	r24, r18
    145a:	01 96       	adiw	r24, 0x01	; 1
    145c:	09 2e       	mov	r0, r25
    145e:	00 0c       	add	r0, r0
    1460:	aa 0b       	sbc	r26, r26
    1462:	bb 0b       	sbc	r27, r27
    1464:	dc 01       	movw	r26, r24
    1466:	99 27       	eor	r25, r25
    1468:	88 27       	eor	r24, r24
    146a:	60 e0       	ldi	r22, 0x00	; 0
    146c:	70 e0       	ldi	r23, 0x00	; 0
    146e:	84 2b       	or	r24, r20
    1470:	95 2b       	or	r25, r21
    1472:	a6 2b       	or	r26, r22
    1474:	b7 2b       	or	r27, r23
    1476:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    147a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    147e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1482:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1486:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    148a:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    148e:	30 97       	sbiw	r30, 0x00	; 0
    1490:	39 f0       	breq	.+14     	; 0x14a0 <__vector_18+0xb2>
    1492:	6d e0       	ldi	r22, 0x0D	; 13
    1494:	70 e0       	ldi	r23, 0x00	; 0
    1496:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    149a:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    149e:	09 95       	icall
    14a0:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    14a4:	ff 91       	pop	r31
    14a6:	ef 91       	pop	r30
    14a8:	bf 91       	pop	r27
    14aa:	af 91       	pop	r26
    14ac:	9f 91       	pop	r25
    14ae:	8f 91       	pop	r24
    14b0:	7f 91       	pop	r23
    14b2:	6f 91       	pop	r22
    14b4:	5f 91       	pop	r21
    14b6:	4f 91       	pop	r20
    14b8:	3f 91       	pop	r19
    14ba:	2f 91       	pop	r18
    14bc:	0f 90       	pop	r0
    14be:	0f be       	out	0x3f, r0	; 63
    14c0:	0f 90       	pop	r0
    14c2:	1f 90       	pop	r1
    14c4:	18 95       	reti

000014c6 <__vector_19>:
    14c6:	1f 92       	push	r1
    14c8:	0f 92       	push	r0
    14ca:	0f b6       	in	r0, 0x3f	; 63
    14cc:	0f 92       	push	r0
    14ce:	11 24       	eor	r1, r1
    14d0:	2f 93       	push	r18
    14d2:	3f 93       	push	r19
    14d4:	4f 93       	push	r20
    14d6:	5f 93       	push	r21
    14d8:	6f 93       	push	r22
    14da:	7f 93       	push	r23
    14dc:	8f 93       	push	r24
    14de:	9f 93       	push	r25
    14e0:	af 93       	push	r26
    14e2:	bf 93       	push	r27
    14e4:	ef 93       	push	r30
    14e6:	ff 93       	push	r31
    14e8:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    14ec:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    14f0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14f4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14f8:	c9 01       	movw	r24, r18
    14fa:	03 2e       	mov	r0, r19
    14fc:	00 0c       	add	r0, r0
    14fe:	aa 0b       	sbc	r26, r26
    1500:	bb 0b       	sbc	r27, r27
    1502:	dc 01       	movw	r26, r24
    1504:	99 27       	eor	r25, r25
    1506:	88 27       	eor	r24, r24
    1508:	60 e0       	ldi	r22, 0x00	; 0
    150a:	70 e0       	ldi	r23, 0x00	; 0
    150c:	84 2b       	or	r24, r20
    150e:	95 2b       	or	r25, r21
    1510:	a6 2b       	or	r26, r22
    1512:	b7 2b       	or	r27, r23
    1514:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1518:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    151c:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1520:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1524:	b0 9b       	sbis	0x16, 0	; 22
    1526:	1b c0       	rjmp	.+54     	; 0x155e <__vector_19+0x98>
    1528:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    152c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1530:	c9 01       	movw	r24, r18
    1532:	01 96       	adiw	r24, 0x01	; 1
    1534:	09 2e       	mov	r0, r25
    1536:	00 0c       	add	r0, r0
    1538:	aa 0b       	sbc	r26, r26
    153a:	bb 0b       	sbc	r27, r27
    153c:	dc 01       	movw	r26, r24
    153e:	99 27       	eor	r25, r25
    1540:	88 27       	eor	r24, r24
    1542:	60 e0       	ldi	r22, 0x00	; 0
    1544:	70 e0       	ldi	r23, 0x00	; 0
    1546:	84 2b       	or	r24, r20
    1548:	95 2b       	or	r25, r21
    154a:	a6 2b       	or	r26, r22
    154c:	b7 2b       	or	r27, r23
    154e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1552:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1556:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    155a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    155e:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    1562:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    1566:	30 97       	sbiw	r30, 0x00	; 0
    1568:	39 f0       	breq	.+14     	; 0x1578 <__vector_19+0xb2>
    156a:	6e e0       	ldi	r22, 0x0E	; 14
    156c:	70 e0       	ldi	r23, 0x00	; 0
    156e:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    1572:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    1576:	09 95       	icall
    1578:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    157c:	ff 91       	pop	r31
    157e:	ef 91       	pop	r30
    1580:	bf 91       	pop	r27
    1582:	af 91       	pop	r26
    1584:	9f 91       	pop	r25
    1586:	8f 91       	pop	r24
    1588:	7f 91       	pop	r23
    158a:	6f 91       	pop	r22
    158c:	5f 91       	pop	r21
    158e:	4f 91       	pop	r20
    1590:	3f 91       	pop	r19
    1592:	2f 91       	pop	r18
    1594:	0f 90       	pop	r0
    1596:	0f be       	out	0x3f, r0	; 63
    1598:	0f 90       	pop	r0
    159a:	1f 90       	pop	r1
    159c:	18 95       	reti

0000159e <__vector_20>:
    159e:	1f 92       	push	r1
    15a0:	0f 92       	push	r0
    15a2:	0f b6       	in	r0, 0x3f	; 63
    15a4:	0f 92       	push	r0
    15a6:	11 24       	eor	r1, r1
    15a8:	2f 93       	push	r18
    15aa:	3f 93       	push	r19
    15ac:	4f 93       	push	r20
    15ae:	5f 93       	push	r21
    15b0:	6f 93       	push	r22
    15b2:	7f 93       	push	r23
    15b4:	8f 93       	push	r24
    15b6:	9f 93       	push	r25
    15b8:	af 93       	push	r26
    15ba:	bf 93       	push	r27
    15bc:	ef 93       	push	r30
    15be:	ff 93       	push	r31
    15c0:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    15c4:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    15c8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15cc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15d0:	c9 01       	movw	r24, r18
    15d2:	03 2e       	mov	r0, r19
    15d4:	00 0c       	add	r0, r0
    15d6:	aa 0b       	sbc	r26, r26
    15d8:	bb 0b       	sbc	r27, r27
    15da:	dc 01       	movw	r26, r24
    15dc:	99 27       	eor	r25, r25
    15de:	88 27       	eor	r24, r24
    15e0:	60 e0       	ldi	r22, 0x00	; 0
    15e2:	70 e0       	ldi	r23, 0x00	; 0
    15e4:	84 2b       	or	r24, r20
    15e6:	95 2b       	or	r25, r21
    15e8:	a6 2b       	or	r26, r22
    15ea:	b7 2b       	or	r27, r23
    15ec:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    15f0:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    15f4:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    15f8:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    15fc:	b0 9b       	sbis	0x16, 0	; 22
    15fe:	1b c0       	rjmp	.+54     	; 0x1636 <__vector_20+0x98>
    1600:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1604:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1608:	c9 01       	movw	r24, r18
    160a:	01 96       	adiw	r24, 0x01	; 1
    160c:	09 2e       	mov	r0, r25
    160e:	00 0c       	add	r0, r0
    1610:	aa 0b       	sbc	r26, r26
    1612:	bb 0b       	sbc	r27, r27
    1614:	dc 01       	movw	r26, r24
    1616:	99 27       	eor	r25, r25
    1618:	88 27       	eor	r24, r24
    161a:	60 e0       	ldi	r22, 0x00	; 0
    161c:	70 e0       	ldi	r23, 0x00	; 0
    161e:	84 2b       	or	r24, r20
    1620:	95 2b       	or	r25, r21
    1622:	a6 2b       	or	r26, r22
    1624:	b7 2b       	or	r27, r23
    1626:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    162a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    162e:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    1632:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    1636:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    163a:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    163e:	30 97       	sbiw	r30, 0x00	; 0
    1640:	39 f0       	breq	.+14     	; 0x1650 <__vector_20+0xb2>
    1642:	6f e0       	ldi	r22, 0x0F	; 15
    1644:	70 e0       	ldi	r23, 0x00	; 0
    1646:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    164a:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    164e:	09 95       	icall
    1650:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    1654:	ff 91       	pop	r31
    1656:	ef 91       	pop	r30
    1658:	bf 91       	pop	r27
    165a:	af 91       	pop	r26
    165c:	9f 91       	pop	r25
    165e:	8f 91       	pop	r24
    1660:	7f 91       	pop	r23
    1662:	6f 91       	pop	r22
    1664:	5f 91       	pop	r21
    1666:	4f 91       	pop	r20
    1668:	3f 91       	pop	r19
    166a:	2f 91       	pop	r18
    166c:	0f 90       	pop	r0
    166e:	0f be       	out	0x3f, r0	; 63
    1670:	0f 90       	pop	r0
    1672:	1f 90       	pop	r1
    1674:	18 95       	reti

00001676 <__vector_21>:
    1676:	1f 92       	push	r1
    1678:	0f 92       	push	r0
    167a:	0f b6       	in	r0, 0x3f	; 63
    167c:	0f 92       	push	r0
    167e:	11 24       	eor	r1, r1
    1680:	2f 93       	push	r18
    1682:	3f 93       	push	r19
    1684:	4f 93       	push	r20
    1686:	5f 93       	push	r21
    1688:	6f 93       	push	r22
    168a:	7f 93       	push	r23
    168c:	8f 93       	push	r24
    168e:	9f 93       	push	r25
    1690:	af 93       	push	r26
    1692:	bf 93       	push	r27
    1694:	ef 93       	push	r30
    1696:	ff 93       	push	r31
    1698:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    169c:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    16a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16a8:	c9 01       	movw	r24, r18
    16aa:	03 2e       	mov	r0, r19
    16ac:	00 0c       	add	r0, r0
    16ae:	aa 0b       	sbc	r26, r26
    16b0:	bb 0b       	sbc	r27, r27
    16b2:	dc 01       	movw	r26, r24
    16b4:	99 27       	eor	r25, r25
    16b6:	88 27       	eor	r24, r24
    16b8:	60 e0       	ldi	r22, 0x00	; 0
    16ba:	70 e0       	ldi	r23, 0x00	; 0
    16bc:	84 2b       	or	r24, r20
    16be:	95 2b       	or	r25, r21
    16c0:	a6 2b       	or	r26, r22
    16c2:	b7 2b       	or	r27, r23
    16c4:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    16c8:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    16cc:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    16d0:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    16d4:	b0 9b       	sbis	0x16, 0	; 22
    16d6:	1b c0       	rjmp	.+54     	; 0x170e <__vector_21+0x98>
    16d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16e0:	c9 01       	movw	r24, r18
    16e2:	01 96       	adiw	r24, 0x01	; 1
    16e4:	09 2e       	mov	r0, r25
    16e6:	00 0c       	add	r0, r0
    16e8:	aa 0b       	sbc	r26, r26
    16ea:	bb 0b       	sbc	r27, r27
    16ec:	dc 01       	movw	r26, r24
    16ee:	99 27       	eor	r25, r25
    16f0:	88 27       	eor	r24, r24
    16f2:	60 e0       	ldi	r22, 0x00	; 0
    16f4:	70 e0       	ldi	r23, 0x00	; 0
    16f6:	84 2b       	or	r24, r20
    16f8:	95 2b       	or	r25, r21
    16fa:	a6 2b       	or	r26, r22
    16fc:	b7 2b       	or	r27, r23
    16fe:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    1702:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    1706:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    170a:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    170e:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    1712:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    1716:	30 97       	sbiw	r30, 0x00	; 0
    1718:	39 f0       	breq	.+14     	; 0x1728 <__vector_21+0xb2>
    171a:	60 e1       	ldi	r22, 0x10	; 16
    171c:	70 e0       	ldi	r23, 0x00	; 0
    171e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    1722:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    1726:	09 95       	icall
    1728:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    172c:	ff 91       	pop	r31
    172e:	ef 91       	pop	r30
    1730:	bf 91       	pop	r27
    1732:	af 91       	pop	r26
    1734:	9f 91       	pop	r25
    1736:	8f 91       	pop	r24
    1738:	7f 91       	pop	r23
    173a:	6f 91       	pop	r22
    173c:	5f 91       	pop	r21
    173e:	4f 91       	pop	r20
    1740:	3f 91       	pop	r19
    1742:	2f 91       	pop	r18
    1744:	0f 90       	pop	r0
    1746:	0f be       	out	0x3f, r0	; 63
    1748:	0f 90       	pop	r0
    174a:	1f 90       	pop	r1
    174c:	18 95       	reti

0000174e <__vector_22>:
    174e:	1f 92       	push	r1
    1750:	0f 92       	push	r0
    1752:	0f b6       	in	r0, 0x3f	; 63
    1754:	0f 92       	push	r0
    1756:	11 24       	eor	r1, r1
    1758:	2f 93       	push	r18
    175a:	3f 93       	push	r19
    175c:	4f 93       	push	r20
    175e:	5f 93       	push	r21
    1760:	6f 93       	push	r22
    1762:	7f 93       	push	r23
    1764:	8f 93       	push	r24
    1766:	9f 93       	push	r25
    1768:	af 93       	push	r26
    176a:	bf 93       	push	r27
    176c:	ef 93       	push	r30
    176e:	ff 93       	push	r31
    1770:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <__data_end>
    1774:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <__data_end+0x1>
    1778:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    177c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1780:	c9 01       	movw	r24, r18
    1782:	03 2e       	mov	r0, r19
    1784:	00 0c       	add	r0, r0
    1786:	aa 0b       	sbc	r26, r26
    1788:	bb 0b       	sbc	r27, r27
    178a:	dc 01       	movw	r26, r24
    178c:	99 27       	eor	r25, r25
    178e:	88 27       	eor	r24, r24
    1790:	60 e0       	ldi	r22, 0x00	; 0
    1792:	70 e0       	ldi	r23, 0x00	; 0
    1794:	84 2b       	or	r24, r20
    1796:	95 2b       	or	r25, r21
    1798:	a6 2b       	or	r26, r22
    179a:	b7 2b       	or	r27, r23
    179c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    17a0:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    17a4:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    17a8:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    17ac:	b0 9b       	sbis	0x16, 0	; 22
    17ae:	1b c0       	rjmp	.+54     	; 0x17e6 <__vector_22+0x98>
    17b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17b8:	c9 01       	movw	r24, r18
    17ba:	01 96       	adiw	r24, 0x01	; 1
    17bc:	09 2e       	mov	r0, r25
    17be:	00 0c       	add	r0, r0
    17c0:	aa 0b       	sbc	r26, r26
    17c2:	bb 0b       	sbc	r27, r27
    17c4:	dc 01       	movw	r26, r24
    17c6:	99 27       	eor	r25, r25
    17c8:	88 27       	eor	r24, r24
    17ca:	60 e0       	ldi	r22, 0x00	; 0
    17cc:	70 e0       	ldi	r23, 0x00	; 0
    17ce:	84 2b       	or	r24, r20
    17d0:	95 2b       	or	r25, r21
    17d2:	a6 2b       	or	r26, r22
    17d4:	b7 2b       	or	r27, r23
    17d6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timestamp>
    17da:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timestamp+0x1>
    17de:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <timestamp+0x2>
    17e2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <timestamp+0x3>
    17e6:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    17ea:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    17ee:	30 97       	sbiw	r30, 0x00	; 0
    17f0:	39 f0       	breq	.+14     	; 0x1800 <__vector_22+0xb2>
    17f2:	61 e1       	ldi	r22, 0x11	; 17
    17f4:	70 e0       	ldi	r23, 0x00	; 0
    17f6:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    17fa:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    17fe:	09 95       	icall
    1800:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    1804:	ff 91       	pop	r31
    1806:	ef 91       	pop	r30
    1808:	bf 91       	pop	r27
    180a:	af 91       	pop	r26
    180c:	9f 91       	pop	r25
    180e:	8f 91       	pop	r24
    1810:	7f 91       	pop	r23
    1812:	6f 91       	pop	r22
    1814:	5f 91       	pop	r21
    1816:	4f 91       	pop	r20
    1818:	3f 91       	pop	r19
    181a:	2f 91       	pop	r18
    181c:	0f 90       	pop	r0
    181e:	0f be       	out	0x3f, r0	; 63
    1820:	0f 90       	pop	r0
    1822:	1f 90       	pop	r1
    1824:	18 95       	reti

00001826 <__vector_9>:
    1826:	1f 92       	push	r1
    1828:	0f 92       	push	r0
    182a:	0f b6       	in	r0, 0x3f	; 63
    182c:	0f 92       	push	r0
    182e:	11 24       	eor	r1, r1
    1830:	2f 93       	push	r18
    1832:	3f 93       	push	r19
    1834:	4f 93       	push	r20
    1836:	5f 93       	push	r21
    1838:	6f 93       	push	r22
    183a:	7f 93       	push	r23
    183c:	8f 93       	push	r24
    183e:	9f 93       	push	r25
    1840:	ef 93       	push	r30
    1842:	ff 93       	push	r31
    1844:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1848:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    184c:	01 96       	adiw	r24, 0x01	; 1
    184e:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
    1852:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
    1856:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <timerQ>
    185a:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <timerQ+0x1>
    185e:	30 97       	sbiw	r30, 0x00	; 0
    1860:	39 f0       	breq	.+14     	; 0x1870 <__vector_9+0x4a>
    1862:	42 81       	ldd	r20, Z+2	; 0x02
    1864:	53 81       	ldd	r21, Z+3	; 0x03
    1866:	64 81       	ldd	r22, Z+4	; 0x04
    1868:	75 81       	ldd	r23, Z+5	; 0x05
    186a:	86 17       	cp	r24, r22
    186c:	97 07       	cpc	r25, r23
    186e:	a1 f0       	breq	.+40     	; 0x1898 <__vector_9+0x72>
    1870:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1874:	8d 7f       	andi	r24, 0xFD	; 253
    1876:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    187a:	ff 91       	pop	r31
    187c:	ef 91       	pop	r30
    187e:	9f 91       	pop	r25
    1880:	8f 91       	pop	r24
    1882:	7f 91       	pop	r23
    1884:	6f 91       	pop	r22
    1886:	5f 91       	pop	r21
    1888:	4f 91       	pop	r20
    188a:	3f 91       	pop	r19
    188c:	2f 91       	pop	r18
    188e:	0f 90       	pop	r0
    1890:	0f be       	out	0x3f, r0	; 63
    1892:	0f 90       	pop	r0
    1894:	1f 90       	pop	r1
    1896:	18 95       	reti
    1898:	ca 01       	movw	r24, r20
    189a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    189e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18a2:	42 1b       	sub	r20, r18
    18a4:	53 0b       	sbc	r21, r19
    18a6:	41 30       	cpi	r20, 0x01	; 1
    18a8:	51 05       	cpc	r21, r1
    18aa:	51 f0       	breq	.+20     	; 0x18c0 <__vector_9+0x9a>
    18ac:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    18b0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    18b4:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    18b8:	82 60       	ori	r24, 0x02	; 2
    18ba:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    18be:	dd cf       	rjmp	.-70     	; 0x187a <__vector_9+0x54>
    18c0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18c4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18c8:	01 96       	adiw	r24, 0x01	; 1
    18ca:	f0 cf       	rjmp	.-32     	; 0x18ac <__vector_9+0x86>

000018cc <__vector_7>:
    18cc:	1f 92       	push	r1
    18ce:	0f 92       	push	r0
    18d0:	0f b6       	in	r0, 0x3f	; 63
    18d2:	0f 92       	push	r0
    18d4:	11 24       	eor	r1, r1
    18d6:	8f 92       	push	r8
    18d8:	9f 92       	push	r9
    18da:	af 92       	push	r10
    18dc:	bf 92       	push	r11
    18de:	cf 92       	push	r12
    18e0:	df 92       	push	r13
    18e2:	ef 92       	push	r14
    18e4:	ff 92       	push	r15
    18e6:	0f 93       	push	r16
    18e8:	1f 93       	push	r17
    18ea:	2f 93       	push	r18
    18ec:	3f 93       	push	r19
    18ee:	4f 93       	push	r20
    18f0:	5f 93       	push	r21
    18f2:	6f 93       	push	r22
    18f4:	7f 93       	push	r23
    18f6:	8f 93       	push	r24
    18f8:	9f 93       	push	r25
    18fa:	af 93       	push	r26
    18fc:	bf 93       	push	r27
    18fe:	cf 93       	push	r28
    1900:	df 93       	push	r29
    1902:	ef 93       	push	r30
    1904:	ff 93       	push	r31
    1906:	e0 90 34 01 	lds	r14, 0x0134	; 0x800134 <__data_end>
    190a:	f0 90 35 01 	lds	r15, 0x0135	; 0x800135 <__data_end+0x1>
    190e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1912:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1916:	b0 99       	sbic	0x16, 0	; 22
    1918:	98 c0       	rjmp	.+304    	; 0x1a4a <__vector_7+0x17e>
    191a:	47 01       	movw	r8, r14
    191c:	0f 2c       	mov	r0, r15
    191e:	00 0c       	add	r0, r0
    1920:	aa 08       	sbc	r10, r10
    1922:	bb 08       	sbc	r11, r11
    1924:	54 01       	movw	r10, r8
    1926:	99 24       	eor	r9, r9
    1928:	88 24       	eor	r8, r8
    192a:	a0 e0       	ldi	r26, 0x00	; 0
    192c:	b0 e0       	ldi	r27, 0x00	; 0
    192e:	88 2a       	or	r8, r24
    1930:	99 2a       	or	r9, r25
    1932:	aa 2a       	or	r10, r26
    1934:	bb 2a       	or	r11, r27
    1936:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    193a:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    193e:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <msgQ>
    1942:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <msgQ+0x1>
    1946:	20 97       	sbiw	r28, 0x00	; 0
    1948:	09 f4       	brne	.+2      	; 0x194c <__vector_7+0x80>
    194a:	3f c0       	rjmp	.+126    	; 0x19ca <__vector_7+0xfe>
    194c:	4a 81       	ldd	r20, Y+2	; 0x02
    194e:	5b 81       	ldd	r21, Y+3	; 0x03
    1950:	6c 81       	ldd	r22, Y+4	; 0x04
    1952:	7d 81       	ldd	r23, Y+5	; 0x05
    1954:	8a 01       	movw	r16, r20
    1956:	9b 01       	movw	r18, r22
    1958:	08 19       	sub	r16, r8
    195a:	19 09       	sbc	r17, r9
    195c:	2a 09       	sbc	r18, r10
    195e:	3b 09       	sbc	r19, r11
    1960:	10 16       	cp	r1, r16
    1962:	11 06       	cpc	r1, r17
    1964:	12 06       	cpc	r1, r18
    1966:	13 06       	cpc	r1, r19
    1968:	0c f4       	brge	.+2      	; 0x196c <__vector_7+0xa0>
    196a:	40 c0       	rjmp	.+128    	; 0x19ec <__vector_7+0x120>
    196c:	d8 80       	ld	r13, Y
    196e:	c9 80       	ldd	r12, Y+1	; 0x01
    1970:	00 97       	sbiw	r24, 0x00	; 0
    1972:	b9 f1       	breq	.+110    	; 0x19e2 <__vector_7+0x116>
    1974:	0e 81       	ldd	r16, Y+6	; 0x06
    1976:	1f 81       	ldd	r17, Y+7	; 0x07
    1978:	28 85       	ldd	r18, Y+8	; 0x08
    197a:	39 85       	ldd	r19, Y+9	; 0x09
    197c:	fc 01       	movw	r30, r24
    197e:	46 81       	ldd	r20, Z+6	; 0x06
    1980:	57 81       	ldd	r21, Z+7	; 0x07
    1982:	60 85       	ldd	r22, Z+8	; 0x08
    1984:	71 85       	ldd	r23, Z+9	; 0x09
    1986:	04 17       	cp	r16, r20
    1988:	15 07       	cpc	r17, r21
    198a:	26 07       	cpc	r18, r22
    198c:	37 07       	cpc	r19, r23
    198e:	4c f1       	brlt	.+82     	; 0x19e2 <__vector_7+0x116>
    1990:	dc 01       	movw	r26, r24
    1992:	0a c0       	rjmp	.+20     	; 0x19a8 <__vector_7+0xdc>
    1994:	46 81       	ldd	r20, Z+6	; 0x06
    1996:	57 81       	ldd	r21, Z+7	; 0x07
    1998:	60 85       	ldd	r22, Z+8	; 0x08
    199a:	71 85       	ldd	r23, Z+9	; 0x09
    199c:	04 17       	cp	r16, r20
    199e:	15 07       	cpc	r17, r21
    19a0:	26 07       	cpc	r18, r22
    19a2:	37 07       	cpc	r19, r23
    19a4:	dc f0       	brlt	.+54     	; 0x19dc <__vector_7+0x110>
    19a6:	df 01       	movw	r26, r30
    19a8:	ed 91       	ld	r30, X+
    19aa:	fc 91       	ld	r31, X
    19ac:	11 97       	sbiw	r26, 0x01	; 1
    19ae:	30 97       	sbiw	r30, 0x00	; 0
    19b0:	89 f7       	brne	.-30     	; 0x1994 <__vector_7+0xc8>
    19b2:	19 82       	std	Y+1, r1	; 0x01
    19b4:	18 82       	st	Y, r1
    19b6:	cd 93       	st	X+, r28
    19b8:	dc 93       	st	X, r29
    19ba:	38 2f       	mov	r19, r24
    19bc:	29 2f       	mov	r18, r25
    19be:	cd 2d       	mov	r28, r13
    19c0:	dc 2d       	mov	r29, r12
    19c2:	83 2f       	mov	r24, r19
    19c4:	92 2f       	mov	r25, r18
    19c6:	20 97       	sbiw	r28, 0x00	; 0
    19c8:	09 f6       	brne	.-126    	; 0x194c <__vector_7+0x80>
    19ca:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <timerQ+0x1>
    19ce:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <timerQ>
    19d2:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    19d6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    19da:	13 c0       	rjmp	.+38     	; 0x1a02 <__vector_7+0x136>
    19dc:	f9 83       	std	Y+1, r31	; 0x01
    19de:	e8 83       	st	Y, r30
    19e0:	ea cf       	rjmp	.-44     	; 0x19b6 <__vector_7+0xea>
    19e2:	99 83       	std	Y+1, r25	; 0x01
    19e4:	88 83       	st	Y, r24
    19e6:	3c 2f       	mov	r19, r28
    19e8:	2d 2f       	mov	r18, r29
    19ea:	e9 cf       	rjmp	.-46     	; 0x19be <__vector_7+0xf2>
    19ec:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    19f0:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    19f4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    19f8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    19fc:	e6 16       	cp	r14, r22
    19fe:	f7 06       	cpc	r15, r23
    1a00:	d9 f1       	breq	.+118    	; 0x1a78 <__vector_7+0x1ac>
    1a02:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a06:	8d 7f       	andi	r24, 0xFD	; 253
    1a08:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a0c:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    1a10:	ff 91       	pop	r31
    1a12:	ef 91       	pop	r30
    1a14:	df 91       	pop	r29
    1a16:	cf 91       	pop	r28
    1a18:	bf 91       	pop	r27
    1a1a:	af 91       	pop	r26
    1a1c:	9f 91       	pop	r25
    1a1e:	8f 91       	pop	r24
    1a20:	7f 91       	pop	r23
    1a22:	6f 91       	pop	r22
    1a24:	5f 91       	pop	r21
    1a26:	4f 91       	pop	r20
    1a28:	3f 91       	pop	r19
    1a2a:	2f 91       	pop	r18
    1a2c:	1f 91       	pop	r17
    1a2e:	0f 91       	pop	r16
    1a30:	ff 90       	pop	r15
    1a32:	ef 90       	pop	r14
    1a34:	df 90       	pop	r13
    1a36:	cf 90       	pop	r12
    1a38:	bf 90       	pop	r11
    1a3a:	af 90       	pop	r10
    1a3c:	9f 90       	pop	r9
    1a3e:	8f 90       	pop	r8
    1a40:	0f 90       	pop	r0
    1a42:	0f be       	out	0x3f, r0	; 63
    1a44:	0f 90       	pop	r0
    1a46:	1f 90       	pop	r1
    1a48:	18 95       	reti
    1a4a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a4e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a52:	47 01       	movw	r8, r14
    1a54:	8f ef       	ldi	r24, 0xFF	; 255
    1a56:	88 1a       	sub	r8, r24
    1a58:	98 0a       	sbc	r9, r24
    1a5a:	09 2c       	mov	r0, r9
    1a5c:	00 0c       	add	r0, r0
    1a5e:	aa 08       	sbc	r10, r10
    1a60:	bb 08       	sbc	r11, r11
    1a62:	d4 01       	movw	r26, r8
    1a64:	99 27       	eor	r25, r25
    1a66:	88 27       	eor	r24, r24
    1a68:	49 01       	movw	r8, r18
    1a6a:	a1 2c       	mov	r10, r1
    1a6c:	b1 2c       	mov	r11, r1
    1a6e:	88 2a       	or	r8, r24
    1a70:	99 2a       	or	r9, r25
    1a72:	aa 2a       	or	r10, r26
    1a74:	bb 2a       	or	r11, r27
    1a76:	5f cf       	rjmp	.-322    	; 0x1936 <__vector_7+0x6a>
    1a78:	ca 01       	movw	r24, r20
    1a7a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a7e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a82:	42 1b       	sub	r20, r18
    1a84:	53 0b       	sbc	r21, r19
    1a86:	41 30       	cpi	r20, 0x01	; 1
    1a88:	51 05       	cpc	r21, r1
    1a8a:	51 f0       	breq	.+20     	; 0x1aa0 <__vector_7+0x1d4>
    1a8c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a90:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a94:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a98:	82 60       	ori	r24, 0x02	; 2
    1a9a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1a9e:	b6 cf       	rjmp	.-148    	; 0x1a0c <__vector_7+0x140>
    1aa0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1aa4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1aa8:	01 96       	adiw	r24, 0x01	; 1
    1aaa:	f0 cf       	rjmp	.-32     	; 0x1a8c <__vector_7+0x1c0>

00001aac <async>:
    1aac:	3f 92       	push	r3
    1aae:	4f 92       	push	r4
    1ab0:	5f 92       	push	r5
    1ab2:	6f 92       	push	r6
    1ab4:	7f 92       	push	r7
    1ab6:	8f 92       	push	r8
    1ab8:	9f 92       	push	r9
    1aba:	af 92       	push	r10
    1abc:	bf 92       	push	r11
    1abe:	cf 92       	push	r12
    1ac0:	df 92       	push	r13
    1ac2:	ef 92       	push	r14
    1ac4:	ff 92       	push	r15
    1ac6:	0f 93       	push	r16
    1ac8:	1f 93       	push	r17
    1aca:	cf 93       	push	r28
    1acc:	df 93       	push	r29
    1ace:	ef b7       	in	r30, 0x3f	; 63
    1ad0:	e0 78       	andi	r30, 0x80	; 128
    1ad2:	3e 2e       	mov	r3, r30
    1ad4:	f8 94       	cli
    1ad6:	c0 91 06 01 	lds	r28, 0x0106	; 0x800106 <msgPool>
    1ada:	d0 91 07 01 	lds	r29, 0x0107	; 0x800107 <msgPool+0x1>
    1ade:	20 97       	sbiw	r28, 0x00	; 0
    1ae0:	09 f4       	brne	.+2      	; 0x1ae4 <async+0x38>
    1ae2:	52 c1       	rjmp	.+676    	; 0x1d88 <async+0x2dc>
    1ae4:	e8 81       	ld	r30, Y
    1ae6:	f9 81       	ldd	r31, Y+1	; 0x01
    1ae8:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <msgPool+0x1>
    1aec:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <msgPool>
    1af0:	1b 87       	std	Y+11, r17	; 0x0b
    1af2:	0a 87       	std	Y+10, r16	; 0x0a
    1af4:	fd 86       	std	Y+13, r15	; 0x0d
    1af6:	ec 86       	std	Y+12, r14	; 0x0c
    1af8:	df 86       	std	Y+15, r13	; 0x0f
    1afa:	ce 86       	std	Y+14, r12	; 0x0e
    1afc:	33 20       	and	r3, r3
    1afe:	09 f4       	brne	.+2      	; 0x1b02 <async+0x56>
    1b00:	6f c0       	rjmp	.+222    	; 0x1be0 <async+0x134>
    1b02:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b06:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b0a:	02 80       	ldd	r0, Z+2	; 0x02
    1b0c:	f3 81       	ldd	r31, Z+3	; 0x03
    1b0e:	e0 2d       	mov	r30, r0
    1b10:	c2 80       	ldd	r12, Z+2	; 0x02
    1b12:	d3 80       	ldd	r13, Z+3	; 0x03
    1b14:	e4 80       	ldd	r14, Z+4	; 0x04
    1b16:	f5 80       	ldd	r15, Z+5	; 0x05
    1b18:	c6 0e       	add	r12, r22
    1b1a:	d7 1e       	adc	r13, r23
    1b1c:	e8 1e       	adc	r14, r24
    1b1e:	f9 1e       	adc	r15, r25
    1b20:	ca 82       	std	Y+2, r12	; 0x02
    1b22:	db 82       	std	Y+3, r13	; 0x03
    1b24:	ec 82       	std	Y+4, r14	; 0x04
    1b26:	fd 82       	std	Y+5, r15	; 0x05
    1b28:	12 16       	cp	r1, r18
    1b2a:	13 06       	cpc	r1, r19
    1b2c:	14 06       	cpc	r1, r20
    1b2e:	15 06       	cpc	r1, r21
    1b30:	0c f0       	brlt	.+2      	; 0x1b34 <async+0x88>
    1b32:	f8 c0       	rjmp	.+496    	; 0x1d24 <async+0x278>
    1b34:	da 01       	movw	r26, r20
    1b36:	c9 01       	movw	r24, r18
    1b38:	8c 01       	movw	r16, r24
    1b3a:	9d 01       	movw	r18, r26
    1b3c:	0c 0d       	add	r16, r12
    1b3e:	1d 1d       	adc	r17, r13
    1b40:	2e 1d       	adc	r18, r14
    1b42:	3f 1d       	adc	r19, r15
    1b44:	0e 83       	std	Y+6, r16	; 0x06
    1b46:	1f 83       	std	Y+7, r17	; 0x07
    1b48:	28 87       	std	Y+8, r18	; 0x08
    1b4a:	39 87       	std	Y+9, r19	; 0x09
    1b4c:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
    1b50:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
    1b54:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b58:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b5c:	b0 99       	sbic	0x16, 0	; 22
    1b5e:	49 c0       	rjmp	.+146    	; 0x1bf2 <async+0x146>
    1b60:	2c 01       	movw	r4, r24
    1b62:	09 2e       	mov	r0, r25
    1b64:	00 0c       	add	r0, r0
    1b66:	66 08       	sbc	r6, r6
    1b68:	77 08       	sbc	r7, r7
    1b6a:	52 01       	movw	r10, r4
    1b6c:	99 24       	eor	r9, r9
    1b6e:	88 24       	eor	r8, r8
    1b70:	2b 01       	movw	r4, r22
    1b72:	61 2c       	mov	r6, r1
    1b74:	71 2c       	mov	r7, r1
    1b76:	48 28       	or	r4, r8
    1b78:	59 28       	or	r5, r9
    1b7a:	6a 28       	or	r6, r10
    1b7c:	7b 28       	or	r7, r11
    1b7e:	b7 01       	movw	r22, r14
    1b80:	a6 01       	movw	r20, r12
    1b82:	44 19       	sub	r20, r4
    1b84:	55 09       	sbc	r21, r5
    1b86:	66 09       	sbc	r22, r6
    1b88:	77 09       	sbc	r23, r7
    1b8a:	14 16       	cp	r1, r20
    1b8c:	15 06       	cpc	r1, r21
    1b8e:	16 06       	cpc	r1, r22
    1b90:	17 06       	cpc	r1, r23
    1b92:	0c f0       	brlt	.+2      	; 0x1b96 <async+0xea>
    1b94:	68 c0       	rjmp	.+208    	; 0x1c66 <async+0x1ba>
    1b96:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <timerQ>
    1b9a:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <timerQ+0x1>
    1b9e:	10 97       	sbiw	r26, 0x00	; 0
    1ba0:	09 f4       	brne	.+2      	; 0x1ba4 <async+0xf8>
    1ba2:	dc c0       	rjmp	.+440    	; 0x1d5c <async+0x2b0>
    1ba4:	12 96       	adiw	r26, 0x02	; 2
    1ba6:	0d 91       	ld	r16, X+
    1ba8:	1d 91       	ld	r17, X+
    1baa:	2d 91       	ld	r18, X+
    1bac:	3c 91       	ld	r19, X
    1bae:	15 97       	sbiw	r26, 0x05	; 5
    1bb0:	c0 16       	cp	r12, r16
    1bb2:	d1 06       	cpc	r13, r17
    1bb4:	e2 06       	cpc	r14, r18
    1bb6:	f3 06       	cpc	r15, r19
    1bb8:	5c f4       	brge	.+22     	; 0x1bd0 <async+0x124>
    1bba:	d0 c0       	rjmp	.+416    	; 0x1d5c <async+0x2b0>
    1bbc:	42 81       	ldd	r20, Z+2	; 0x02
    1bbe:	53 81       	ldd	r21, Z+3	; 0x03
    1bc0:	64 81       	ldd	r22, Z+4	; 0x04
    1bc2:	75 81       	ldd	r23, Z+5	; 0x05
    1bc4:	c4 16       	cp	r12, r20
    1bc6:	d5 06       	cpc	r13, r21
    1bc8:	e6 06       	cpc	r14, r22
    1bca:	f7 06       	cpc	r15, r23
    1bcc:	4c f1       	brlt	.+82     	; 0x1c20 <async+0x174>
    1bce:	df 01       	movw	r26, r30
    1bd0:	ed 91       	ld	r30, X+
    1bd2:	fc 91       	ld	r31, X
    1bd4:	11 97       	sbiw	r26, 0x01	; 1
    1bd6:	30 97       	sbiw	r30, 0x00	; 0
    1bd8:	89 f7       	brne	.-30     	; 0x1bbc <async+0x110>
    1bda:	19 82       	std	Y+1, r1	; 0x01
    1bdc:	18 82       	st	Y, r1
    1bde:	22 c0       	rjmp	.+68     	; 0x1c24 <async+0x178>
    1be0:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <timestamp>
    1be4:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <timestamp+0x1>
    1be8:	e0 90 38 01 	lds	r14, 0x0138	; 0x800138 <timestamp+0x2>
    1bec:	f0 90 39 01 	lds	r15, 0x0139	; 0x800139 <timestamp+0x3>
    1bf0:	93 cf       	rjmp	.-218    	; 0x1b18 <async+0x6c>
    1bf2:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bf6:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bfa:	2c 01       	movw	r4, r24
    1bfc:	4f ef       	ldi	r20, 0xFF	; 255
    1bfe:	44 1a       	sub	r4, r20
    1c00:	54 0a       	sbc	r5, r20
    1c02:	05 2c       	mov	r0, r5
    1c04:	00 0c       	add	r0, r0
    1c06:	66 08       	sbc	r6, r6
    1c08:	77 08       	sbc	r7, r7
    1c0a:	b2 01       	movw	r22, r4
    1c0c:	55 27       	eor	r21, r21
    1c0e:	44 27       	eor	r20, r20
    1c10:	2f 01       	movw	r4, r30
    1c12:	61 2c       	mov	r6, r1
    1c14:	71 2c       	mov	r7, r1
    1c16:	44 2a       	or	r4, r20
    1c18:	55 2a       	or	r5, r21
    1c1a:	66 2a       	or	r6, r22
    1c1c:	77 2a       	or	r7, r23
    1c1e:	af cf       	rjmp	.-162    	; 0x1b7e <async+0xd2>
    1c20:	f9 83       	std	Y+1, r31	; 0x01
    1c22:	e8 83       	st	Y, r30
    1c24:	cd 93       	st	X+, r28
    1c26:	dc 93       	st	X, r29
    1c28:	82 17       	cp	r24, r18
    1c2a:	93 07       	cpc	r25, r19
    1c2c:	09 f4       	brne	.+2      	; 0x1c30 <async+0x184>
    1c2e:	7f c0       	rjmp	.+254    	; 0x1d2e <async+0x282>
    1c30:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c34:	8d 7f       	andi	r24, 0xFD	; 253
    1c36:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1c3a:	33 20       	and	r3, r3
    1c3c:	09 f0       	breq	.+2      	; 0x1c40 <async+0x194>
    1c3e:	78 94       	sei
    1c40:	ce 01       	movw	r24, r28
    1c42:	df 91       	pop	r29
    1c44:	cf 91       	pop	r28
    1c46:	1f 91       	pop	r17
    1c48:	0f 91       	pop	r16
    1c4a:	ff 90       	pop	r15
    1c4c:	ef 90       	pop	r14
    1c4e:	df 90       	pop	r13
    1c50:	cf 90       	pop	r12
    1c52:	bf 90       	pop	r11
    1c54:	af 90       	pop	r10
    1c56:	9f 90       	pop	r9
    1c58:	8f 90       	pop	r8
    1c5a:	7f 90       	pop	r7
    1c5c:	6f 90       	pop	r6
    1c5e:	5f 90       	pop	r5
    1c60:	4f 90       	pop	r4
    1c62:	3f 90       	pop	r3
    1c64:	08 95       	ret
    1c66:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <msgQ>
    1c6a:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <msgQ+0x1>
    1c6e:	10 97       	sbiw	r26, 0x00	; 0
    1c70:	09 f4       	brne	.+2      	; 0x1c74 <async+0x1c8>
    1c72:	83 c0       	rjmp	.+262    	; 0x1d7a <async+0x2ce>
    1c74:	16 96       	adiw	r26, 0x06	; 6
    1c76:	cd 90       	ld	r12, X+
    1c78:	dd 90       	ld	r13, X+
    1c7a:	ed 90       	ld	r14, X+
    1c7c:	fc 90       	ld	r15, X
    1c7e:	19 97       	sbiw	r26, 0x09	; 9
    1c80:	0c 15       	cp	r16, r12
    1c82:	1d 05       	cpc	r17, r13
    1c84:	2e 05       	cpc	r18, r14
    1c86:	3f 05       	cpc	r19, r15
    1c88:	64 f4       	brge	.+24     	; 0x1ca2 <async+0x1f6>
    1c8a:	77 c0       	rjmp	.+238    	; 0x1d7a <async+0x2ce>
    1c8c:	c6 80       	ldd	r12, Z+6	; 0x06
    1c8e:	d7 80       	ldd	r13, Z+7	; 0x07
    1c90:	e0 84       	ldd	r14, Z+8	; 0x08
    1c92:	f1 84       	ldd	r15, Z+9	; 0x09
    1c94:	0c 15       	cp	r16, r12
    1c96:	1d 05       	cpc	r17, r13
    1c98:	2e 05       	cpc	r18, r14
    1c9a:	3f 05       	cpc	r19, r15
    1c9c:	0c f4       	brge	.+2      	; 0x1ca0 <async+0x1f4>
    1c9e:	5b c0       	rjmp	.+182    	; 0x1d56 <async+0x2aa>
    1ca0:	df 01       	movw	r26, r30
    1ca2:	ed 91       	ld	r30, X+
    1ca4:	fc 91       	ld	r31, X
    1ca6:	11 97       	sbiw	r26, 0x01	; 1
    1ca8:	30 97       	sbiw	r30, 0x00	; 0
    1caa:	81 f7       	brne	.-32     	; 0x1c8c <async+0x1e0>
    1cac:	19 82       	std	Y+1, r1	; 0x01
    1cae:	18 82       	st	Y, r1
    1cb0:	cd 93       	st	X+, r28
    1cb2:	dc 93       	st	X, r29
    1cb4:	33 20       	and	r3, r3
    1cb6:	21 f2       	breq	.-120    	; 0x1c40 <async+0x194>
    1cb8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1cbc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1cc0:	00 97       	sbiw	r24, 0x00	; 0
    1cc2:	09 f4       	brne	.+2      	; 0x1cc6 <async+0x21a>
    1cc4:	bc cf       	rjmp	.-136    	; 0x1c3e <async+0x192>
    1cc6:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1cca:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1cce:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <msgQ>
    1cd2:	30 91 3d 01 	lds	r19, 0x013D	; 0x80013d <msgQ+0x1>
    1cd6:	02 81       	ldd	r16, Z+2	; 0x02
    1cd8:	13 81       	ldd	r17, Z+3	; 0x03
    1cda:	d9 01       	movw	r26, r18
    1cdc:	16 96       	adiw	r26, 0x06	; 6
    1cde:	4d 91       	ld	r20, X+
    1ce0:	5d 91       	ld	r21, X+
    1ce2:	6d 91       	ld	r22, X+
    1ce4:	7c 91       	ld	r23, X
    1ce6:	19 97       	sbiw	r26, 0x09	; 9
    1ce8:	d8 01       	movw	r26, r16
    1cea:	16 96       	adiw	r26, 0x06	; 6
    1cec:	0d 91       	ld	r16, X+
    1cee:	1d 91       	ld	r17, X+
    1cf0:	2d 91       	ld	r18, X+
    1cf2:	3c 91       	ld	r19, X
    1cf4:	19 97       	sbiw	r26, 0x09	; 9
    1cf6:	40 1b       	sub	r20, r16
    1cf8:	51 0b       	sbc	r21, r17
    1cfa:	62 0b       	sbc	r22, r18
    1cfc:	73 0b       	sbc	r23, r19
    1cfe:	77 ff       	sbrs	r23, 7
    1d00:	9e cf       	rjmp	.-196    	; 0x1c3e <async+0x192>
    1d02:	dc 01       	movw	r26, r24
    1d04:	2d 91       	ld	r18, X+
    1d06:	3c 91       	ld	r19, X
    1d08:	11 97       	sbiw	r26, 0x01	; 1
    1d0a:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1d0e:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1d12:	ed 93       	st	X+, r30
    1d14:	fc 93       	st	X, r31
    1d16:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1d1a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1d1e:	0e 94 10 04 	call	0x820	; 0x820 <dispatch>
    1d22:	8d cf       	rjmp	.-230    	; 0x1c3e <async+0x192>
    1d24:	8f ef       	ldi	r24, 0xFF	; 255
    1d26:	9f ef       	ldi	r25, 0xFF	; 255
    1d28:	af ef       	ldi	r26, 0xFF	; 255
    1d2a:	bf e7       	ldi	r27, 0x7F	; 127
    1d2c:	05 cf       	rjmp	.-502    	; 0x1b38 <async+0x8c>
    1d2e:	c8 01       	movw	r24, r16
    1d30:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d34:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d38:	04 1b       	sub	r16, r20
    1d3a:	15 0b       	sbc	r17, r21
    1d3c:	01 30       	cpi	r16, 0x01	; 1
    1d3e:	11 05       	cpc	r17, r1
    1d40:	b1 f0       	breq	.+44     	; 0x1d6e <async+0x2c2>
    1d42:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d46:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d4a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1d4e:	82 60       	ori	r24, 0x02	; 2
    1d50:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
    1d54:	72 cf       	rjmp	.-284    	; 0x1c3a <async+0x18e>
    1d56:	f9 83       	std	Y+1, r31	; 0x01
    1d58:	e8 83       	st	Y, r30
    1d5a:	aa cf       	rjmp	.-172    	; 0x1cb0 <async+0x204>
    1d5c:	b9 83       	std	Y+1, r27	; 0x01
    1d5e:	a8 83       	st	Y, r26
    1d60:	d0 93 3b 01 	sts	0x013B, r29	; 0x80013b <timerQ+0x1>
    1d64:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <timerQ>
    1d68:	97 01       	movw	r18, r14
    1d6a:	86 01       	movw	r16, r12
    1d6c:	5d cf       	rjmp	.-326    	; 0x1c28 <async+0x17c>
    1d6e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d72:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d76:	01 96       	adiw	r24, 0x01	; 1
    1d78:	e4 cf       	rjmp	.-56     	; 0x1d42 <async+0x296>
    1d7a:	b9 83       	std	Y+1, r27	; 0x01
    1d7c:	a8 83       	st	Y, r26
    1d7e:	d0 93 3d 01 	sts	0x013D, r29	; 0x80013d <msgQ+0x1>
    1d82:	c0 93 3c 01 	sts	0x013C, r28	; 0x80013c <msgQ>
    1d86:	96 cf       	rjmp	.-212    	; 0x1cb4 <async+0x208>
    1d88:	0e 94 70 04 	call	0x8e0	; 0x8e0 <dequeue.part.0>

00001d8c <sync>:
    1d8c:	cf 92       	push	r12
    1d8e:	df 92       	push	r13
    1d90:	ef 92       	push	r14
    1d92:	ff 92       	push	r15
    1d94:	0f 93       	push	r16
    1d96:	1f 93       	push	r17
    1d98:	cf 93       	push	r28
    1d9a:	df 93       	push	r29
    1d9c:	ec 01       	movw	r28, r24
    1d9e:	7b 01       	movw	r14, r22
    1da0:	6a 01       	movw	r12, r20
    1da2:	1f b7       	in	r17, 0x3f	; 63
    1da4:	10 78       	andi	r17, 0x80	; 128
    1da6:	f8 94       	cli
    1da8:	a8 81       	ld	r26, Y
    1daa:	b9 81       	ldd	r27, Y+1	; 0x01
    1dac:	10 97       	sbiw	r26, 0x00	; 0
    1dae:	19 f4       	brne	.+6      	; 0x1db6 <sync+0x2a>
    1db0:	62 c0       	rjmp	.+196    	; 0x1e76 <sync+0xea>
    1db2:	a0 81       	ld	r26, Z
    1db4:	b1 81       	ldd	r27, Z+1	; 0x01
    1db6:	14 96       	adiw	r26, 0x04	; 4
    1db8:	ed 91       	ld	r30, X+
    1dba:	fc 91       	ld	r31, X
    1dbc:	15 97       	sbiw	r26, 0x05	; 5
    1dbe:	30 97       	sbiw	r30, 0x00	; 0
    1dc0:	c1 f7       	brne	.-16     	; 0x1db2 <sync+0x26>
    1dc2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1dc6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dca:	2a 17       	cp	r18, r26
    1dcc:	3b 07       	cpc	r19, r27
    1dce:	09 f4       	brne	.+2      	; 0x1dd2 <sync+0x46>
    1dd0:	4c c0       	rjmp	.+152    	; 0x1e6a <sync+0xde>
    1dd2:	11 23       	and	r17, r17
    1dd4:	a1 f1       	breq	.+104    	; 0x1e3e <sync+0xb2>
    1dd6:	8a 81       	ldd	r24, Y+2	; 0x02
    1dd8:	9b 81       	ldd	r25, Y+3	; 0x03
    1dda:	00 97       	sbiw	r24, 0x00	; 0
    1ddc:	19 f0       	breq	.+6      	; 0x1de4 <sync+0x58>
    1dde:	fc 01       	movw	r30, r24
    1de0:	15 82       	std	Z+5, r1	; 0x05
    1de2:	14 82       	std	Z+4, r1	; 0x04
    1de4:	3b 83       	std	Y+3, r19	; 0x03
    1de6:	2a 83       	std	Y+2, r18	; 0x02
    1de8:	f9 01       	movw	r30, r18
    1dea:	d5 83       	std	Z+5, r29	; 0x05
    1dec:	c4 83       	std	Z+4, r28	; 0x04
    1dee:	cd 01       	movw	r24, r26
    1df0:	0e 94 10 04 	call	0x820	; 0x820 <dispatch>
    1df4:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1df8:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dfc:	82 81       	ldd	r24, Z+2	; 0x02
    1dfe:	93 81       	ldd	r25, Z+3	; 0x03
    1e00:	89 2b       	or	r24, r25
    1e02:	09 f4       	brne	.+2      	; 0x1e06 <sync+0x7a>
    1e04:	41 c0       	rjmp	.+130    	; 0x1e88 <sync+0xfc>
    1e06:	f9 83       	std	Y+1, r31	; 0x01
    1e08:	e8 83       	st	Y, r30
    1e0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e0c:	9b 81       	ldd	r25, Y+3	; 0x03
    1e0e:	01 97       	sbiw	r24, 0x01	; 1
    1e10:	09 f0       	breq	.+2      	; 0x1e14 <sync+0x88>
    1e12:	78 94       	sei
    1e14:	b6 01       	movw	r22, r12
    1e16:	ce 01       	movw	r24, r28
    1e18:	f7 01       	movw	r30, r14
    1e1a:	09 95       	icall
    1e1c:	f8 2e       	mov	r15, r24
    1e1e:	09 2f       	mov	r16, r25
    1e20:	8f b7       	in	r24, 0x3f	; 63
    1e22:	f8 94       	cli
    1e24:	19 82       	std	Y+1, r1	; 0x01
    1e26:	18 82       	st	Y, r1
    1e28:	8a 81       	ldd	r24, Y+2	; 0x02
    1e2a:	9b 81       	ldd	r25, Y+3	; 0x03
    1e2c:	82 30       	cpi	r24, 0x02	; 2
    1e2e:	91 05       	cpc	r25, r1
    1e30:	a0 f4       	brcc	.+40     	; 0x1e5a <sync+0xce>
    1e32:	11 23       	and	r17, r17
    1e34:	79 f0       	breq	.+30     	; 0x1e54 <sync+0xc8>
    1e36:	78 94       	sei
    1e38:	8f 2d       	mov	r24, r15
    1e3a:	90 2f       	mov	r25, r16
    1e3c:	02 c0       	rjmp	.+4      	; 0x1e42 <sync+0xb6>
    1e3e:	8f ef       	ldi	r24, 0xFF	; 255
    1e40:	9f ef       	ldi	r25, 0xFF	; 255
    1e42:	df 91       	pop	r29
    1e44:	cf 91       	pop	r28
    1e46:	1f 91       	pop	r17
    1e48:	0f 91       	pop	r16
    1e4a:	ff 90       	pop	r15
    1e4c:	ef 90       	pop	r14
    1e4e:	df 90       	pop	r13
    1e50:	cf 90       	pop	r12
    1e52:	08 95       	ret
    1e54:	8f 2d       	mov	r24, r15
    1e56:	90 2f       	mov	r25, r16
    1e58:	f4 cf       	rjmp	.-24     	; 0x1e42 <sync+0xb6>
    1e5a:	1b 82       	std	Y+3, r1	; 0x03
    1e5c:	1a 82       	std	Y+2, r1	; 0x02
    1e5e:	fc 01       	movw	r30, r24
    1e60:	15 82       	std	Z+5, r1	; 0x05
    1e62:	14 82       	std	Z+4, r1	; 0x04
    1e64:	0e 94 10 04 	call	0x820	; 0x820 <dispatch>
    1e68:	e4 cf       	rjmp	.-56     	; 0x1e32 <sync+0xa6>
    1e6a:	11 23       	and	r17, r17
    1e6c:	41 f3       	breq	.-48     	; 0x1e3e <sync+0xb2>
    1e6e:	78 94       	sei
    1e70:	8f ef       	ldi	r24, 0xFF	; 255
    1e72:	9f ef       	ldi	r25, 0xFF	; 255
    1e74:	e6 cf       	rjmp	.-52     	; 0x1e42 <sync+0xb6>
    1e76:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e7a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e7e:	99 83       	std	Y+1, r25	; 0x01
    1e80:	88 83       	st	Y, r24
    1e82:	11 23       	and	r17, r17
    1e84:	39 f2       	breq	.-114    	; 0x1e14 <sync+0x88>
    1e86:	c1 cf       	rjmp	.-126    	; 0x1e0a <sync+0x7e>
    1e88:	78 94       	sei
    1e8a:	80 e0       	ldi	r24, 0x00	; 0
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	d9 cf       	rjmp	.-78     	; 0x1e42 <sync+0xb6>

00001e90 <run>:
    1e90:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1e94:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1e98:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e9c:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ea0:	20 97       	sbiw	r28, 0x00	; 0
    1ea2:	09 f4       	brne	.+2      	; 0x1ea6 <run+0x16>
    1ea4:	6e c0       	rjmp	.+220    	; 0x1f82 <run+0xf2>
    1ea6:	88 81       	ld	r24, Y
    1ea8:	99 81       	ldd	r25, Y+1	; 0x01
    1eaa:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    1eae:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    1eb2:	d3 83       	std	Z+3, r29	; 0x03
    1eb4:	c2 83       	std	Z+2, r28	; 0x02
    1eb6:	78 94       	sei
    1eb8:	4e 85       	ldd	r20, Y+14	; 0x0e
    1eba:	5f 85       	ldd	r21, Y+15	; 0x0f
    1ebc:	6c 85       	ldd	r22, Y+12	; 0x0c
    1ebe:	7d 85       	ldd	r23, Y+13	; 0x0d
    1ec0:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ec2:	9b 85       	ldd	r25, Y+11	; 0x0b
    1ec4:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <sync>
    1ec8:	8f b7       	in	r24, 0x3f	; 63
    1eca:	f8 94       	cli
    1ecc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1ed0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1ed4:	99 83       	std	Y+1, r25	; 0x01
    1ed6:	88 83       	st	Y, r24
    1ed8:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    1edc:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    1ee0:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <activeStack>
    1ee4:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <activeStack+0x1>
    1ee8:	f7 01       	movw	r30, r14
    1eea:	a0 81       	ld	r26, Z
    1eec:	b1 81       	ldd	r27, Z+1	; 0x01
    1eee:	12 96       	adiw	r26, 0x02	; 2
    1ef0:	8d 91       	ld	r24, X+
    1ef2:	9c 91       	ld	r25, X
    1ef4:	13 97       	sbiw	r26, 0x03	; 3
    1ef6:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1efa:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1efe:	20 97       	sbiw	r28, 0x00	; 0
    1f00:	a9 f0       	breq	.+42     	; 0x1f2c <run+0x9c>
    1f02:	00 97       	sbiw	r24, 0x00	; 0
    1f04:	49 f2       	breq	.-110    	; 0x1e98 <run+0x8>
    1f06:	4e 81       	ldd	r20, Y+6	; 0x06
    1f08:	5f 81       	ldd	r21, Y+7	; 0x07
    1f0a:	68 85       	ldd	r22, Y+8	; 0x08
    1f0c:	79 85       	ldd	r23, Y+9	; 0x09
    1f0e:	fc 01       	movw	r30, r24
    1f10:	06 81       	ldd	r16, Z+6	; 0x06
    1f12:	17 81       	ldd	r17, Z+7	; 0x07
    1f14:	20 85       	ldd	r18, Z+8	; 0x08
    1f16:	31 85       	ldd	r19, Z+9	; 0x09
    1f18:	40 1b       	sub	r20, r16
    1f1a:	51 0b       	sbc	r21, r17
    1f1c:	62 0b       	sbc	r22, r18
    1f1e:	73 0b       	sbc	r23, r19
    1f20:	14 16       	cp	r1, r20
    1f22:	15 06       	cpc	r1, r21
    1f24:	16 06       	cpc	r1, r22
    1f26:	17 06       	cpc	r1, r23
    1f28:	0c f0       	brlt	.+2      	; 0x1f2c <run+0x9c>
    1f2a:	b6 cf       	rjmp	.-148    	; 0x1e98 <run+0x8>
    1f2c:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <activeStack+0x1>
    1f30:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <activeStack>
    1f34:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1f38:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1f3c:	f7 01       	movw	r30, r14
    1f3e:	91 83       	std	Z+1, r25	; 0x01
    1f40:	80 83       	st	Z, r24
    1f42:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <threadPool+0x1>
    1f46:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <threadPool>
    1f4a:	14 96       	adiw	r26, 0x04	; 4
    1f4c:	ed 91       	ld	r30, X+
    1f4e:	fc 91       	ld	r31, X
    1f50:	15 97       	sbiw	r26, 0x05	; 5
    1f52:	30 97       	sbiw	r30, 0x00	; 0
    1f54:	41 f0       	breq	.+16     	; 0x1f66 <run+0xd6>
    1f56:	a0 81       	ld	r26, Z
    1f58:	b1 81       	ldd	r27, Z+1	; 0x01
    1f5a:	14 96       	adiw	r26, 0x04	; 4
    1f5c:	ed 91       	ld	r30, X+
    1f5e:	fc 91       	ld	r31, X
    1f60:	15 97       	sbiw	r26, 0x05	; 5
    1f62:	30 97       	sbiw	r30, 0x00	; 0
    1f64:	c1 f7       	brne	.-16     	; 0x1f56 <run+0xc6>
    1f66:	cd 01       	movw	r24, r26
    1f68:	0e 94 10 04 	call	0x820	; 0x820 <dispatch>
    1f6c:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1f70:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1f74:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f78:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f7c:	20 97       	sbiw	r28, 0x00	; 0
    1f7e:	09 f0       	breq	.+2      	; 0x1f82 <run+0xf2>
    1f80:	92 cf       	rjmp	.-220    	; 0x1ea6 <run+0x16>
    1f82:	0e 94 70 04 	call	0x8e0	; 0x8e0 <dequeue.part.0>

00001f86 <ABORT>:
    1f86:	cf 93       	push	r28
    1f88:	df 93       	push	r29
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	4f b7       	in	r20, 0x3f	; 63
    1f8e:	40 78       	andi	r20, 0x80	; 128
    1f90:	f8 94       	cli
    1f92:	c0 91 3a 01 	lds	r28, 0x013A	; 0x80013a <timerQ>
    1f96:	d0 91 3b 01 	lds	r29, 0x013B	; 0x80013b <timerQ+0x1>
    1f9a:	20 97       	sbiw	r28, 0x00	; 0
    1f9c:	69 f0       	breq	.+26     	; 0x1fb8 <ABORT+0x32>
    1f9e:	8c 17       	cp	r24, r28
    1fa0:	9d 07       	cpc	r25, r29
    1fa2:	31 f4       	brne	.+12     	; 0x1fb0 <ABORT+0x2a>
    1fa4:	6c c0       	rjmp	.+216    	; 0x207e <ABORT+0xf8>
    1fa6:	ae 17       	cp	r26, r30
    1fa8:	bf 07       	cpc	r27, r31
    1faa:	09 f4       	brne	.+2      	; 0x1fae <ABORT+0x28>
    1fac:	47 c0       	rjmp	.+142    	; 0x203c <ABORT+0xb6>
    1fae:	ef 01       	movw	r28, r30
    1fb0:	e8 81       	ld	r30, Y
    1fb2:	f9 81       	ldd	r31, Y+1	; 0x01
    1fb4:	30 97       	sbiw	r30, 0x00	; 0
    1fb6:	b9 f7       	brne	.-18     	; 0x1fa6 <ABORT+0x20>
    1fb8:	c0 91 3c 01 	lds	r28, 0x013C	; 0x80013c <msgQ>
    1fbc:	d0 91 3d 01 	lds	r29, 0x013D	; 0x80013d <msgQ+0x1>
    1fc0:	20 97       	sbiw	r28, 0x00	; 0
    1fc2:	69 f0       	breq	.+26     	; 0x1fde <ABORT+0x58>
    1fc4:	ac 17       	cp	r26, r28
    1fc6:	bd 07       	cpc	r27, r29
    1fc8:	31 f4       	brne	.+12     	; 0x1fd6 <ABORT+0x50>
    1fca:	61 c0       	rjmp	.+194    	; 0x208e <ABORT+0x108>
    1fcc:	ae 17       	cp	r26, r30
    1fce:	bf 07       	cpc	r27, r31
    1fd0:	09 f4       	brne	.+2      	; 0x1fd4 <ABORT+0x4e>
    1fd2:	4c c0       	rjmp	.+152    	; 0x206c <ABORT+0xe6>
    1fd4:	ef 01       	movw	r28, r30
    1fd6:	e8 81       	ld	r30, Y
    1fd8:	f9 81       	ldd	r31, Y+1	; 0x01
    1fda:	30 97       	sbiw	r30, 0x00	; 0
    1fdc:	b9 f7       	brne	.-18     	; 0x1fcc <ABORT+0x46>
    1fde:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1fe2:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1fe6:	30 97       	sbiw	r30, 0x00	; 0
    1fe8:	d9 f1       	breq	.+118    	; 0x2060 <ABORT+0xda>
    1fea:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fee:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ff2:	05 c0       	rjmp	.+10     	; 0x1ffe <ABORT+0x78>
    1ff4:	01 90       	ld	r0, Z+
    1ff6:	f0 81       	ld	r31, Z
    1ff8:	e0 2d       	mov	r30, r0
    1ffa:	30 97       	sbiw	r30, 0x00	; 0
    1ffc:	89 f1       	breq	.+98     	; 0x2060 <ABORT+0xda>
    1ffe:	e2 17       	cp	r30, r18
    2000:	f3 07       	cpc	r31, r19
    2002:	c1 f3       	breq	.-16     	; 0x1ff4 <ABORT+0x6e>
    2004:	82 81       	ldd	r24, Z+2	; 0x02
    2006:	93 81       	ldd	r25, Z+3	; 0x03
    2008:	a8 17       	cp	r26, r24
    200a:	b9 07       	cpc	r27, r25
    200c:	99 f7       	brne	.-26     	; 0x1ff4 <ABORT+0x6e>
    200e:	64 81       	ldd	r22, Z+4	; 0x04
    2010:	75 81       	ldd	r23, Z+5	; 0x05
    2012:	1a 96       	adiw	r26, 0x0a	; 10
    2014:	8d 91       	ld	r24, X+
    2016:	9c 91       	ld	r25, X
    2018:	1b 97       	sbiw	r26, 0x0b	; 11
    201a:	68 17       	cp	r22, r24
    201c:	79 07       	cpc	r23, r25
    201e:	51 f7       	brne	.-44     	; 0x1ff4 <ABORT+0x6e>
    2020:	13 82       	std	Z+3, r1	; 0x03
    2022:	12 82       	std	Z+2, r1	; 0x02
    2024:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    2028:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    202c:	11 96       	adiw	r26, 0x01	; 1
    202e:	9c 93       	st	X, r25
    2030:	8e 93       	st	-X, r24
    2032:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    2036:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    203a:	12 c0       	rjmp	.+36     	; 0x2060 <ABORT+0xda>
    203c:	20 97       	sbiw	r28, 0x00	; 0
    203e:	01 f1       	breq	.+64     	; 0x2080 <ABORT+0xfa>
    2040:	8d 91       	ld	r24, X+
    2042:	9c 91       	ld	r25, X
    2044:	11 97       	sbiw	r26, 0x01	; 1
    2046:	99 83       	std	Y+1, r25	; 0x01
    2048:	88 83       	st	Y, r24
    204a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    204e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    2052:	11 96       	adiw	r26, 0x01	; 1
    2054:	9c 93       	st	X, r25
    2056:	8e 93       	st	-X, r24
    2058:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <msgPool+0x1>
    205c:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <msgPool>
    2060:	44 23       	and	r20, r20
    2062:	09 f0       	breq	.+2      	; 0x2066 <ABORT+0xe0>
    2064:	78 94       	sei
    2066:	df 91       	pop	r29
    2068:	cf 91       	pop	r28
    206a:	08 95       	ret
    206c:	20 97       	sbiw	r28, 0x00	; 0
    206e:	41 f7       	brne	.-48     	; 0x2040 <ABORT+0xba>
    2070:	80 81       	ld	r24, Z
    2072:	91 81       	ldd	r25, Z+1	; 0x01
    2074:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <msgQ+0x1>
    2078:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <msgQ>
    207c:	e6 cf       	rjmp	.-52     	; 0x204a <ABORT+0xc4>
    207e:	fc 01       	movw	r30, r24
    2080:	80 81       	ld	r24, Z
    2082:	91 81       	ldd	r25, Z+1	; 0x01
    2084:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timerQ+0x1>
    2088:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timerQ>
    208c:	de cf       	rjmp	.-68     	; 0x204a <ABORT+0xc4>
    208e:	fd 01       	movw	r30, r26
    2090:	ef cf       	rjmp	.-34     	; 0x2070 <ABORT+0xea>

00002092 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    2092:	42 31       	cpi	r20, 0x12	; 18
    2094:	b8 f4       	brcc	.+46     	; 0x20c4 <install+0x32>
        char status;
        DISABLE(status);
    2096:	2f b7       	in	r18, 0x3f	; 63
    2098:	f8 94       	cli
        otable[i] = obj;
    209a:	50 e0       	ldi	r21, 0x00	; 0
    209c:	44 0f       	add	r20, r20
    209e:	55 1f       	adc	r21, r21
    20a0:	fa 01       	movw	r30, r20
    20a2:	ee 5b       	subi	r30, 0xBE	; 190
    20a4:	fe 4f       	sbci	r31, 0xFE	; 254
    20a6:	91 83       	std	Z+1, r25	; 0x01
    20a8:	80 83       	st	Z, r24
        mtable[i] = m;
    20aa:	fa 01       	movw	r30, r20
    20ac:	e6 52       	subi	r30, 0x26	; 38
    20ae:	fe 4f       	sbci	r31, 0xFE	; 254
    20b0:	71 83       	std	Z+1, r23	; 0x01
    20b2:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    20b4:	41 e0       	ldi	r20, 0x01	; 1
    20b6:	50 e0       	ldi	r21, 0x00	; 0
    20b8:	fc 01       	movw	r30, r24
    20ba:	53 83       	std	Z+3, r21	; 0x03
    20bc:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    20be:	27 ff       	sbrs	r18, 7
    20c0:	01 c0       	rjmp	.+2      	; 0x20c4 <install+0x32>
    20c2:	78 94       	sei
    20c4:	08 95       	ret

000020c6 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    20c6:	8c 01       	movw	r16, r24
    20c8:	7b 01       	movw	r14, r22
    20ca:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    20cc:	8f b7       	in	r24, 0x3f	; 63
    20ce:	f8 94       	cli
    initialize();
    20d0:	0e 94 a5 03 	call	0x74a	; 0x74a <initialize>
    ENABLE(1);
    20d4:	78 94       	sei
    if (m != NULL)
    20d6:	e1 14       	cp	r14, r1
    20d8:	f1 04       	cpc	r15, r1
    20da:	41 f0       	breq	.+16     	; 0x20ec <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    20dc:	20 e0       	ldi	r18, 0x00	; 0
    20de:	30 e0       	ldi	r19, 0x00	; 0
    20e0:	a9 01       	movw	r20, r18
    20e2:	60 e0       	ldi	r22, 0x00	; 0
    20e4:	70 e0       	ldi	r23, 0x00	; 0
    20e6:	cb 01       	movw	r24, r22
    20e8:	0e 94 56 0d 	call	0x1aac	; 0x1aac <async>
    DISABLE(status);
    20ec:	8f b7       	in	r24, 0x3f	; 63
    20ee:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    20f0:	0e 94 30 04 	call	0x860	; 0x860 <schedule>
    ENABLE(1);
    20f4:	78 94       	sei
    while (1) {
        SLEEP();
    20f6:	81 e0       	ldi	r24, 0x01	; 1
    20f8:	83 bf       	out	0x33, r24	; 51
    20fa:	88 95       	sleep
    20fc:	fd cf       	rjmp	.-6      	; 0x20f8 <tinytimber+0x32>

000020fe <__divmodhi4>:
    20fe:	97 fb       	bst	r25, 7
    2100:	07 2e       	mov	r0, r23
    2102:	16 f4       	brtc	.+4      	; 0x2108 <__divmodhi4+0xa>
    2104:	00 94       	com	r0
    2106:	07 d0       	rcall	.+14     	; 0x2116 <__divmodhi4_neg1>
    2108:	77 fd       	sbrc	r23, 7
    210a:	09 d0       	rcall	.+18     	; 0x211e <__divmodhi4_neg2>
    210c:	0e 94 93 10 	call	0x2126	; 0x2126 <__udivmodhi4>
    2110:	07 fc       	sbrc	r0, 7
    2112:	05 d0       	rcall	.+10     	; 0x211e <__divmodhi4_neg2>
    2114:	3e f4       	brtc	.+14     	; 0x2124 <__divmodhi4_exit>

00002116 <__divmodhi4_neg1>:
    2116:	90 95       	com	r25
    2118:	81 95       	neg	r24
    211a:	9f 4f       	sbci	r25, 0xFF	; 255
    211c:	08 95       	ret

0000211e <__divmodhi4_neg2>:
    211e:	70 95       	com	r23
    2120:	61 95       	neg	r22
    2122:	7f 4f       	sbci	r23, 0xFF	; 255

00002124 <__divmodhi4_exit>:
    2124:	08 95       	ret

00002126 <__udivmodhi4>:
    2126:	aa 1b       	sub	r26, r26
    2128:	bb 1b       	sub	r27, r27
    212a:	51 e1       	ldi	r21, 0x11	; 17
    212c:	07 c0       	rjmp	.+14     	; 0x213c <__udivmodhi4_ep>

0000212e <__udivmodhi4_loop>:
    212e:	aa 1f       	adc	r26, r26
    2130:	bb 1f       	adc	r27, r27
    2132:	a6 17       	cp	r26, r22
    2134:	b7 07       	cpc	r27, r23
    2136:	10 f0       	brcs	.+4      	; 0x213c <__udivmodhi4_ep>
    2138:	a6 1b       	sub	r26, r22
    213a:	b7 0b       	sbc	r27, r23

0000213c <__udivmodhi4_ep>:
    213c:	88 1f       	adc	r24, r24
    213e:	99 1f       	adc	r25, r25
    2140:	5a 95       	dec	r21
    2142:	a9 f7       	brne	.-22     	; 0x212e <__udivmodhi4_loop>
    2144:	80 95       	com	r24
    2146:	90 95       	com	r25
    2148:	bc 01       	movw	r22, r24
    214a:	cd 01       	movw	r24, r26
    214c:	08 95       	ret

0000214e <setjmp>:
    214e:	dc 01       	movw	r26, r24
    2150:	2d 92       	st	X+, r2
    2152:	3d 92       	st	X+, r3
    2154:	4d 92       	st	X+, r4
    2156:	5d 92       	st	X+, r5
    2158:	6d 92       	st	X+, r6
    215a:	7d 92       	st	X+, r7
    215c:	8d 92       	st	X+, r8
    215e:	9d 92       	st	X+, r9
    2160:	ad 92       	st	X+, r10
    2162:	bd 92       	st	X+, r11
    2164:	cd 92       	st	X+, r12
    2166:	dd 92       	st	X+, r13
    2168:	ed 92       	st	X+, r14
    216a:	fd 92       	st	X+, r15
    216c:	0d 93       	st	X+, r16
    216e:	1d 93       	st	X+, r17
    2170:	cd 93       	st	X+, r28
    2172:	dd 93       	st	X+, r29
    2174:	ff 91       	pop	r31
    2176:	ef 91       	pop	r30
    2178:	8d b7       	in	r24, 0x3d	; 61
    217a:	8d 93       	st	X+, r24
    217c:	8e b7       	in	r24, 0x3e	; 62
    217e:	8d 93       	st	X+, r24
    2180:	8f b7       	in	r24, 0x3f	; 63
    2182:	8d 93       	st	X+, r24
    2184:	ed 93       	st	X+, r30
    2186:	fd 93       	st	X+, r31
    2188:	88 27       	eor	r24, r24
    218a:	99 27       	eor	r25, r25
    218c:	09 94       	ijmp

0000218e <longjmp>:
    218e:	dc 01       	movw	r26, r24
    2190:	cb 01       	movw	r24, r22
    2192:	81 30       	cpi	r24, 0x01	; 1
    2194:	91 05       	cpc	r25, r1
    2196:	81 1d       	adc	r24, r1
    2198:	2d 90       	ld	r2, X+
    219a:	3d 90       	ld	r3, X+
    219c:	4d 90       	ld	r4, X+
    219e:	5d 90       	ld	r5, X+
    21a0:	6d 90       	ld	r6, X+
    21a2:	7d 90       	ld	r7, X+
    21a4:	8d 90       	ld	r8, X+
    21a6:	9d 90       	ld	r9, X+
    21a8:	ad 90       	ld	r10, X+
    21aa:	bd 90       	ld	r11, X+
    21ac:	cd 90       	ld	r12, X+
    21ae:	dd 90       	ld	r13, X+
    21b0:	ed 90       	ld	r14, X+
    21b2:	fd 90       	ld	r15, X+
    21b4:	0d 91       	ld	r16, X+
    21b6:	1d 91       	ld	r17, X+
    21b8:	cd 91       	ld	r28, X+
    21ba:	dd 91       	ld	r29, X+
    21bc:	ed 91       	ld	r30, X+
    21be:	fd 91       	ld	r31, X+
    21c0:	0d 90       	ld	r0, X+
    21c2:	f8 94       	cli
    21c4:	fe bf       	out	0x3e, r31	; 62
    21c6:	0f be       	out	0x3f, r0	; 63
    21c8:	ed bf       	out	0x3d, r30	; 61
    21ca:	ed 91       	ld	r30, X+
    21cc:	fd 91       	ld	r31, X+
    21ce:	09 94       	ijmp

000021d0 <_exit>:
    21d0:	f8 94       	cli

000021d2 <__stop_program>:
    21d2:	ff cf       	rjmp	.-2      	; 0x21d2 <__stop_program>
